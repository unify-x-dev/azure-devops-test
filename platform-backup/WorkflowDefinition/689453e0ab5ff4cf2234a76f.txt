{
	"appsUsed":[
		
	],
	"createdTime":1756473890734,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296185255,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfcf9672fcc41fb70f048",
		"status":"DEPLOYED",
		"version":20,
		"workflowVersion":27
	},
	"edges":[
		{
			"fromNodeId":"imjLM",
			"priority":0,
			"skip":false,
			"toNodeId":"4Ej4u",
			"type":"next"
		},
		{
			"fromNodeId":"4Ej4u",
			"priority":0,
			"skip":false,
			"toNodeId":"ROeoR",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"689453e0ab5ff4cf2234a76f",
	"lastModifiedBy":0,
	"lcName":"create titan models payload",
	"modifiedTime":1761722714226,
	"name":"Create Titan Models Payload",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":719,
				"resourceName":"callables_from_interface"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yBXHn-1",
			"id":"imjLM",
			"index":1,
			"inputs":{
				"result":{
					"additionalProperties":false,
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"type":"object",
					"properties":{
						"payload":{
							"type":"object",
							"title":"payload"
						}
					}
				},
				"callableInterfaceId":"67e72b531506404d8d5e331f",
				"setup":{
					"additionalProperties":false,
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"type":"object",
					"properties":{
						"top_p":{
							"type":"integer",
							"title":"top_p"
						},
						"response_format":{
							"type":"object",
							"properties":{
								"type":{
									"type":"string",
									"title":"type"
								}
							},
							"title":"response_format",
							"additionalProperties":false
						},
						"frequency_penalty":{
							"type":"integer",
							"title":"frequency_penalty"
						},
						"request_timeout":{
							"type":"integer",
							"title":"request_timeout"
						},
						"provider":{
							"type":"string",
							"title":"provider"
						},
						"max_tokens":{
							"type":"integer",
							"title":"max_tokens"
						},
						"presence_penalty":{
							"type":"integer",
							"title":"presence_penalty"
						},
						"temperature":{
							"type":"integer",
							"title":"temperature"
						},
						"messages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"role":{
										"type":"string",
										"title":"role",
										"default":"user"
									},
									"content":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"text":{
													"type":"string",
													"title":"text"
												},
												"type":{
													"type":"string",
													"title":"type",
													"default":"text"
												},
												"image_url":{
													"type":"object",
													"properties":{
														"url":{
															"type":"string",
															"title":"url"
														},
														"detail":{
															"type":"string",
															"title":"detail"
														}
													},
													"additionalProperties":false,
													"title":"image_url",
													"required":[]
												},
												"source":{
													"type":"object",
													"properties":{
														"image_type":{
															"type":"string",
															"title":"image_type"
														},
														"media_type":{
															"type":"string",
															"title":"media_type"
														},
														"image_data":{
															"type":"string",
															"title":"image_data"
														},
														"detail":{
															"type":"string",
															"title":"detail"
														}
													},
													"additionalProperties":false,
													"title":"Source",
													"required":[]
												},
												"tool_use_id":{
													"type":"string",
													"title":"tool_use_id"
												},
												"content":{
													"type":"string",
													"title":"content"
												},
												"name":{
													"type":"string",
													"title":"name"
												},
												"input":{
													"type":"object",
													"properties":{},
													"additionalProperties":false,
													"title":"input"
												},
												"id":{
													"type":"string",
													"title":"id"
												},
												"thinkingSignature":{
													"type":"string",
													"title":"Thinking Signature"
												}
											},
											"additionalProperties":false,
											"required":[]
										},
										"title":"content",
										"required":[]
									}
								},
								"additionalProperties":false
							},
							"title":"messages",
							"required":[]
						},
						"model":{
							"type":"string",
							"title":"model"
						},
						"logprobs":{
							"type":"boolean",
							"title":"logprobs"
						},
						"on_error_config":{
							"type":"object",
							"properties":{
								"error_msg":{
									"type":"string",
									"title":"error_msg"
								}
							},
							"additionalProperties":false,
							"title":"on_error_config",
							"required":[]
						},
						"retry_config":{
							"type":"object",
							"properties":{
								"initial_delay":{
									"type":"integer",
									"title":"initial_delay"
								},
								"num_retry":{
									"type":"integer",
									"title":"num_retry"
								},
								"max_delay":{
									"type":"integer",
									"title":"max_delay"
								},
								"backoff_factor":{
									"type":"integer",
									"title":"backoff_factor"
								}
							},
							"additionalProperties":false,
							"title":"retry_config",
							"required":[]
						},
						"top_k":{
							"type":"integer",
							"title":"top_k"
						},
						"tools":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"type":{
										"type":"string",
										"title":"Type"
									},
									"function":{
										"type":"object",
										"properties":{
											"name":{
												"type":"string",
												"title":"Name"
											},
											"description":{
												"type":"string",
												"title":"Description"
											},
											"parameters":{
												"type":"object",
												"properties":{},
												"additionalProperties":false,
												"title":"Parameters"
											}
										},
										"additionalProperties":false,
										"title":"Function",
										"required":[]
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Tools"
						},
						"systemPrompt":{
							"type":"string",
							"title":"System Prompt"
						},
						"sessionId":{
							"type":"string",
							"title":"Session Id"
						},
						"modelId":{
							"type":"string",
							"title":"Model ID"
						},
						"stream":{
							"type":"boolean",
							"title":"stream"
						},
						"thoughtMethod":{
							"type":"string",
							"title":"Thought Method"
						},
						"isToolCallEnabled":{
							"type":"boolean",
							"title":"Is Tool Call Enabled"
						},
						"isMultipleToolCallEnabled":{
							"type":"boolean",
							"title":"Is Multiple Tool Call Enabled"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger interface",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"additional":{
				"xsdSchemaConfig":{},
				"visibleOptionalFields":[
					"root.parameters.messages.items.content.items.text",
					"root.parameters.messages.items.content.items.type",
					"root.parameters.messages.items.role",
					"root.parameters.response_format.type",
					"root.parameters.messages.items.content.items.image_url.url",
					"root.parameters.messages.items.content.items.image_url.detail",
					"root.parameters.messages.items.content.items.source.image_type",
					"root.parameters.messages.items.content.items.source.media_type",
					"root.parameters.messages.items.content.items.source.image_data",
					"root.parameters.messages.items.content.items.source.detail",
					"root.parameters.messages.items.content.items.tool_use_id",
					"root.parameters.messages.items.content.items.content",
					"root.parameters.messages.items.content.items.name",
					"root.parameters.messages.items.content.items.input",
					"root.parameters.messages.items.content.items.id",
					"root.parameters.tools.items.type",
					"root.parameters.tools.items.function.name",
					"root.parameters.tools.items.function.description",
					"root.parameters.tools.items.function.parameters",
					"root.parameters.retry_config.num_retry",
					"root.parameters.retry_config.initial_delay",
					"root.parameters.retry_config.max_delay",
					"root.parameters.retry_config.backoff_factor",
					"root.parameters.on_error_config.error_msg"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":756,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yBXHn-1",
			"id":"4Ej4u",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"payload":{
							"type":"object",
							"title":"payload"
						}
					},
					"additionalProperties":false
				},
				"input":{
					"type":"object",
					"properties":{
						"messages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"role":{
										"type":"string",
										"title":"role"
									},
									"content":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"type":{
													"type":"string",
													"title":"type"
												},
												"text":{
													"type":"string",
													"title":"text"
												},
												"image_url":{
													"type":"object",
													"properties":{
														"url":{
															"type":"string",
															"title":"url"
														},
														"detail":{
															"type":"string",
															"title":"detail"
														}
													},
													"title":"image_url",
													"additionalProperties":false
												},
												"source":{
													"type":"object",
													"properties":{
														"image_type":{
															"type":"string",
															"title":"image_type"
														},
														"media_type":{
															"type":"string",
															"title":"media_type"
														},
														"image_data":{
															"type":"string",
															"title":"image_data"
														},
														"detail":{
															"type":"string",
															"title":"detail"
														}
													},
													"title":"source",
													"additionalProperties":false
												},
												"tool_use_id":{
													"type":"string",
													"title":"tool_use_id"
												},
												"content":{
													"type":"string",
													"title":"content"
												},
												"name":{
													"type":"string",
													"title":"name"
												},
												"input":{
													"type":"object",
													"title":"input"
												},
												"id":{
													"type":"string",
													"title":"id"
												}
											},
											"additionalProperties":false
										},
										"title":"content"
									}
								},
								"additionalProperties":false
							},
							"title":"messages"
						},
						"model":{
							"type":"string",
							"title":"model"
						},
						"temperature":{
							"type":"integer",
							"title":"temperature"
						},
						"max_tokens":{
							"type":"integer",
							"title":"max_tokens"
						},
						"top_p":{
							"type":"integer",
							"title":"top_p"
						},
						"top_k":{
							"type":"integer",
							"title":"top_k"
						},
						"frequency_penalty":{
							"type":"integer",
							"title":"frequency_penalty"
						},
						"presence_penalty":{
							"type":"integer",
							"title":"presence_penalty"
						},
						"stream":{
							"type":"boolean",
							"title":"stream"
						},
						"response_format":{
							"type":"object",
							"properties":{
								"type":{
									"type":"string",
									"title":"type"
								}
							},
							"title":"response_format",
							"additionalProperties":false
						},
						"tools":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"type":{
										"type":"string",
										"title":"type"
									},
									"function":{
										"type":"object",
										"properties":{
											"name":{
												"type":"string",
												"title":"name"
											},
											"description":{
												"type":"string",
												"title":"description"
											},
											"parameters":{
												"type":"object",
												"title":"parameters"
											}
										},
										"title":"function",
										"additionalProperties":false
									}
								},
								"additionalProperties":false
							},
							"title":"tools"
						},
						"logprobs":{
							"type":"boolean",
							"title":"logprobs"
						},
						"request_timeout":{
							"type":"integer",
							"title":"request_timeout"
						},
						"provider":{
							"type":"string",
							"title":"provider"
						},
						"session_id":{
							"type":"string",
							"title":"session_id"
						},
						"model_id":{
							"type":"string",
							"title":"model_id"
						},
						"system_prompt":{
							"type":"string",
							"title":"system_prompt"
						},
						"retry_config":{
							"type":"object",
							"properties":{
								"num_retry":{
									"type":"integer",
									"title":"num_retry"
								},
								"initial_delay":{
									"type":"integer",
									"title":"initial_delay"
								},
								"max_delay":{
									"type":"integer",
									"title":"max_delay"
								},
								"backoff_factor":{
									"type":"integer",
									"title":"backoff_factor"
								}
							},
							"title":"retry_config",
							"additionalProperties":false
						},
						"on_error_config":{
							"type":"object",
							"properties":{
								"error_msg":{
									"type":"string",
									"title":"error_msg"
								}
							},
							"title":"on_error_config",
							"additionalProperties":false
						}
					},
					"additionalProperties":false
				},
				"compile_static":false,
				"code":"import groovy.json.*\n\ndef output = [:]\ndef payload = [:]\n\ndef inputTextParts = []\n\nif (binding.hasVariable(\"system_prompt\") && binding.getVariable(\"system_prompt\")) {\n    def systemPrompt = binding.getVariable(\"system_prompt\")\n    inputTextParts << \"User: ${systemPrompt}\"\n}\n\nif (binding.hasVariable(\"messages\")) {\n    def messages = binding.getVariable(\"messages\")\n    \n    messages.each { message ->\n        def role = message.role\n        def contentText = \"\"\n        \n        message.content.each { contentItem ->\n            if (contentItem.text) {\n                contentText += contentItem.text\n            }\n            else if (contentItem.image_url?.url) {\n                contentText += \"[Image content]\"\n            }\n            else if (contentItem.source?.image_data) {\n                contentText += \"[Image content]\"\n            }\n            else if (contentItem.source?.media_type?.startsWith(\"video/\")) {\n                contentText += \"[Video content]\"\n            }\n            else if (contentItem.tool_use_id) {\n                contentText += \"[Tool result content]\"\n            }\n        }\n        \n        switch(role.toLowerCase()) {\n            case \"user\":\n                inputTextParts << \"User: ${contentText}\"\n                break\n            case \"assistant\":\n                inputTextParts << \"Bot: ${contentText}\"\n                break\n            case \"system\":\n                inputTextParts << \"User: ${contentText}\"\n                break\n            default:\n                inputTextParts << \"${role}: ${contentText}\"\n        }\n    }\n}\n\nif (binding.hasVariable(\"messages\")) {\n    def messages = binding.getVariable(\"messages\")\n    if (messages && messages.size() > 0) {\n        def lastMessage = messages[messages.size() - 1]\n        if (lastMessage.role.toLowerCase() != \"assistant\") {\n            inputTextParts << \"Bot:\"\n        }\n    }\n} else {\n    inputTextParts << \"Bot:\"\n}\n\npayload.inputText = inputTextParts.join(\"\\n\")\n\nreturn [payload: payload]",
				"parameters":{
					"logprobs":"{{ imjLM.outputs.logprobs }}",
					"max_tokens":"{{ imjLM.outputs.max_tokens }}",
					"model":"{{ imjLM.outputs.model }}",
					"presence_penalty":"{{ imjLM.outputs.presence_penalty }}",
					"stream":"{{ imjLM.outputs.stream }}",
					"temperature":"{{ imjLM.outputs.temperature }}",
					"top_k":"{{ imjLM.outputs.top_k }}",
					"top_p":"{{ imjLM.outputs.top_p }}",
					"messages":{
						"source":"{{ imjLM.outputs.messages }}",
						"ua:type":"mappedArray",
						"items":{
							"content":{
								"source":"{{ imjLM.outputs.messages[0].content }}",
								"ua:type":"mappedArray",
								"items":{
									"text":"{{ imjLM.outputs.messages[0].content[0].text }}",
									"type":"{{ imjLM.outputs.messages[0].content[0].type }}",
									"image_url":{
										"url":"{{ imjLM.outputs.messages[0].content[0].image_url.url }}",
										"detail":"{{ imjLM.outputs.messages[0].content[0].image_url.detail }}"
									},
									"source":{
										"image_type":"{{ imjLM.outputs.messages[0].content[0].source.image_type }}",
										"media_type":"{{ imjLM.outputs.messages[0].content[0].source.media_type }}",
										"image_data":"{{ imjLM.outputs.messages[0].content[0].source.image_data }}",
										"detail":"{{ imjLM.outputs.messages[0].content[0].source.detail }}"
									},
									"tool_use_id":"{{ imjLM.outputs.messages[0].content[0].tool_use_id }}",
									"content":"{{ imjLM.outputs.messages[0].content[0].content }}",
									"name":"{{ imjLM.outputs.messages[0].content[0].name }}",
									"input":"{{ imjLM.outputs.messages[0].content[0].input }}",
									"id":"{{ imjLM.outputs.messages[0].content[0].id }}"
								}
							},
							"role":"{{ imjLM.outputs.messages[0].role }}"
						}
					},
					"response_format":{
						"type":"{{ imjLM.outputs.response_format.type }}"
					},
					"request_timeout":"{{ imjLM.outputs.request_timeout }}",
					"provider":"{{ imjLM.outputs.provider }}",
					"session_id":"{{ imjLM.outputs.sessionId }}",
					"system_prompt":"{{ imjLM.outputs.systemPrompt }}",
					"model_id":"{{ imjLM.outputs.modelId }}",
					"on_error_config":{
						"error_msg":"{{ imjLM.outputs.on_error_config.error_msg }}"
					},
					"retry_config":{
						"backoff_factor":"{{ imjLM.outputs.retry_config.backoff_factor }}",
						"max_delay":"{{ imjLM.outputs.retry_config.max_delay }}",
						"initial_delay":"{{ imjLM.outputs.retry_config.initial_delay }}",
						"num_retry":"{{ imjLM.outputs.retry_config.num_retry }}"
					},
					"tools":{
						"source":"{{ imjLM.outputs.tools }}",
						"ua:type":"mappedArray",
						"items":{
							"type":"{{ imjLM.outputs.tools[0].type }}",
							"function":{
								"name":"{{ imjLM.outputs.tools[0].function.name }}",
								"description":"{{ imjLM.outputs.tools[0].function.description }}",
								"parameters":"{{ imjLM.outputs.tools[0].function.parameters }}"
							}
						}
					},
					"frequency_penalty":"{{ imjLM.outputs.frequency_penalty }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":750,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yBXHn-1",
			"id":"ROeoR",
			"index":3,
			"inputs":{
				"result":{
					"payload":"{{ 4Ej4u.outputs.result.payload }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":-1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"version":29
}