{
	"appsUsed":[
		
	],
	"createdTime":1753185946743,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1761288020901,
		"deployedBy":635,
		"deployedDefinitionId":"68fb1f54cc36024e0ca63b3e",
		"status":"DEPLOYED",
		"version":33,
		"workflowVersion":52
	},
	"edges":[
		{
			"fromNodeId":"n_yjC51",
			"priority":0,
			"skip":false,
			"toNodeId":"n_eG4zH",
			"type":"next"
		},
		{
			"fromNodeId":"n_eG4zH",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ZYHRr",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"6867ed5ad467b02057cb4ac8",
	"lastModifiedBy":0,
	"lcName":"get nextfiretime",
	"modifiedTime":1761722831815,
	"name":"Get nextFireTime",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":444,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_U3AnM-1",
			"id":"n_yjC51",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"nextFireTime"
					],
					"properties":{
						"nextFireTime":{
							"type":"string",
							"title":"Next Fire Time"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"unit":{
							"type":"string",
							"title":"Unit"
						},
						"duration":{
							"type":"integer",
							"title":"Duration"
						},
						"expression":{
							"type":"string",
							"title":"Expression"
						},
						"referenceEpoch":{
							"type":"integer",
							"title":"Reference Epoch"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":448,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_U3AnM-1",
			"id":"n_eG4zH",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"nextFireTime":{
							"type":"string",
							"title":"Next Fire Time"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"unit":{
							"type":"string",
							"title":"Unit"
						},
						"duration":{
							"type":"integer",
							"title":"Duration"
						},
						"expression":{
							"type":"string",
							"title":"Expression"
						},
						"refEpoch":{
							"type":"integer",
							"title":"Ref Epoch"
						}
					}
				},
				"code":"import java.time.LocalDateTime\nimport java.time.ZoneId\nimport java.time.Instant\nimport java.time.ZoneOffset\nimport java.time.format.DateTimeFormatter\n\ndef getNextEpochMillis(duration, unit, referenceEpoch) {\n    def startTime = LocalDateTime.ofInstant(\n        Instant.ofEpochMilli(referenceEpoch), \n        ZoneId.systemDefault()\n    )\n    def futureTime\n    def durationLong = duration.toLong()\n\n    if (unit == 'SECONDS') {\n        futureTime = startTime.plusSeconds(durationLong)\n    } else if (unit == 'MINUTES') {\n        futureTime = startTime.plusMinutes(durationLong)\n    } else if (unit == 'HOURS') {\n        futureTime = startTime.plusHours(durationLong)\n    } else if (unit == 'DAYS') {\n        futureTime = startTime.plusDays(durationLong)\n    } else if (unit == 'WEEKS') {\n        futureTime = startTime.plusWeeks(durationLong)\n    } else if (unit == 'MONTHS') {\n        futureTime = startTime.plusMonths(durationLong)\n    }else {\n        throw new IllegalArgumentException(\"Unsupported unit: $unit\")\n    }\n\n    return futureTime.atZone(ZoneId.systemDefault()).toInstant().toEpochMilli()\n}\n\ndef getNextFireTime(expression) {\n    def exp = com.unifyapps.infra.utils.cron.CronUtils.parseUnixToQuartz(expression)\n    return com.unifyapps.infra.utils.cron.CronUtils.getNextExecutionTime(exp)\n}\n\n\ndef epochTime\nif (binding.hasVariable('expression')) {\n    epochTime = getNextFireTime(expression)\n} else if (binding.hasVariable(\"duration\") && binding.hasVariable(\"unit\")) {\n    def referenceEpoch = (binding.hasVariable(\"refEpoch\")) ? refEpoch : System.currentTimeMillis()\n    epochTime = getNextEpochMillis(duration, unit, referenceEpoch)\n} else {\n    return [:]\n}\n\nString nextFireTime = Instant.ofEpochMilli(epochTime)\n                .atZone(ZoneOffset.systemDefault()) \n                .format(DateTimeFormatter.ISO_INSTANT); \n\nreturn [\"nextFireTime\": nextFireTime]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"unit":"{{ n_yjC51.outputs.unit }}",
					"duration":"{{ n_yjC51.outputs.duration }}",
					"expression":"{{ n_yjC51.outputs.expression }}",
					"refEpoch":"{{ n_yjC51.outputs.referenceEpoch }}"
				}
			},
			"skip":false,
			"subTitle":"Calculating next schedule time",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":454,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_U3AnM-1",
			"id":"n_ZYHRr",
			"index":3,
			"inputs":{
				"result":{
					"nextFireTime":"{{ n_eG4zH.outputs.result.nextFireTime }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":0,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"knowledge_v2"
	],
	"version":53
}