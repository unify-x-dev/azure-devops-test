{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1756464213194,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296286735,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfd5e672fcc41fb70f38f",
		"status":"DEPLOYED",
		"version":21,
		"workflowVersion":28
	},
	"edges":[
		{
			"fromNodeId":"_c8Wzl",
			"priority":0,
			"skip":false,
			"toNodeId":"n_zAQ5Q",
			"type":"next"
		},
		{
			"fromNodeId":"n_zAQ5Q",
			"priority":0,
			"skip":false,
			"toNodeId":"n_3BpN2",
			"type":"next"
		},
		{
			"fromNodeId":"n_3BpN2",
			"priority":0,
			"skip":false,
			"toNodeId":"_gbOeH",
			"type":"next"
		},
		{
			"fromNodeId":"_gbOeH",
			"priority":0,
			"skip":false,
			"toNodeId":"n_GPwxo",
			"type":"next"
		},
		{
			"fromNodeId":"n_GPwxo",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_UjFpo",
			"type":"if"
		},
		{
			"fromNodeId":"n_UjFpo",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_IB8QW",
			"type":"if"
		},
		{
			"fromNodeId":"_IB8QW",
			"priority":0,
			"skip":false,
			"toNodeId":"_WGzPg",
			"type":"next"
		},
		{
			"fromNodeId":"_WGzPg",
			"priority":0,
			"skip":false,
			"toNodeId":"_nDTzv",
			"type":"next"
		},
		{
			"fromNodeId":"_nDTzv",
			"priority":0,
			"skip":false,
			"toNodeId":"_eeBEI",
			"type":"next"
		},
		{
			"fromNodeId":"_eeBEI",
			"priority":0,
			"skip":false,
			"toNodeId":"_QkPnp",
			"type":"next"
		},
		{
			"fromNodeId":"_QkPnp",
			"priority":0,
			"skip":false,
			"toNodeId":"_bleiT",
			"type":"next"
		},
		{
			"fromNodeId":"_bleiT",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_jvSeh",
			"type":"if"
		},
		{
			"fromNodeId":"_jvSeh",
			"priority":0,
			"skip":false,
			"toNodeId":"_GwOep",
			"type":"next"
		},
		{
			"fromNodeId":"_GwOep",
			"priority":0,
			"skip":false,
			"toNodeId":"_4JyWp",
			"type":"next"
		},
		{
			"fromNodeId":"_bleiT",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_2KAdI",
			"type":"next"
		},
		{
			"fromNodeId":"_2KAdI",
			"priority":0,
			"skip":false,
			"toNodeId":"_V5ryj",
			"type":"next"
		},
		{
			"fromNodeId":"_V5ryj",
			"priority":0,
			"skip":false,
			"toNodeId":"_Z4UgV",
			"type":"next"
		},
		{
			"fromNodeId":"_Z4UgV",
			"priority":0,
			"skip":false,
			"toNodeId":"_P4h61",
			"type":"next"
		},
		{
			"fromNodeId":"_P4h61",
			"priority":0,
			"skip":false,
			"toNodeId":"_hZi9a",
			"type":"next"
		},
		{
			"fromNodeId":"_hZi9a",
			"priority":0,
			"skip":false,
			"toNodeId":"_vS5Gv",
			"type":"next"
		},
		{
			"fromNodeId":"n_GPwxo",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_vDh6a",
			"type":"next"
		},
		{
			"fromNodeId":"n_vDh6a",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_0ru1F",
			"type":"if"
		},
		{
			"fromNodeId":"_0ru1F",
			"priority":0,
			"skip":false,
			"toNodeId":"_DPFMv",
			"type":"next"
		},
		{
			"fromNodeId":"_DPFMv",
			"priority":0,
			"skip":false,
			"toNodeId":"_u9Vjr",
			"type":"next"
		},
		{
			"fromNodeId":"_4JyWp",
			"priority":0,
			"skip":false,
			"toNodeId":"_oQno5",
			"type":"next"
		},
		{
			"fromNodeId":"_vS5Gv",
			"priority":0,
			"skip":false,
			"toNodeId":"_oQno5",
			"type":"next"
		},
		{
			"fromNodeId":"n_UjFpo",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_oQno5",
			"type":"next"
		},
		{
			"fromNodeId":"_u9Vjr",
			"priority":0,
			"skip":false,
			"toNodeId":"_oQno5",
			"type":"next"
		},
		{
			"fromNodeId":"n_vDh6a",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_oQno5",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"68aef17c8b592a6537a56099",
	"lastModifiedBy":0,
	"lcName":"addtext2sqlspecifictools",
	"modifiedTime":1761722838798,
	"name":"AddText2SqlSpecificTools",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kLPU3-1",
			"id":"_c8Wzl",
			"index":1,
			"inputs":{
				"result":{
					"$ref":"#/definitions/entity|e_code_snippet|e_67a48c5cc6ba6e3a57165fee",
					"$comment":"tools"
				},
				"setup":{
					"dynamic":true,
					"type":"object",
					"additionalProperties":false,
					"required":[
						"caseId",
						"agentId",
						"task",
						"instructionsToAppend"
					],
					"properties":{
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"agentId":{
							"type":"string",
							"title":"Agent Id"
						},
						"messages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"role":{
										"type":"string",
										"title":"role"
									},
									"content":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"required":[]
										},
										"title":"content"
									},
									"timestamp":{
										"type":"string",
										"title":"timestamp"
									}
								},
								"additionalProperties":false
							},
							"title":"messages"
						},
						"textToSQLSettings":{
							"properties":{
								"isOnlyTextToSQLAgent":{
									"type":"boolean",
									"title":"isOnlyTextToSQLAgent"
								},
								"topicIdForOnlyText2SQL":{
									"type":"string",
									"title":"topicIdForOnlyText2SQL"
								},
								"sqlAndChart1LLMCall_Variant":{
									"type":"boolean",
									"title":"sqlAndChart1LLMCall_Variant"
								}
							},
							"type":"object",
							"required":[]
						},
						"currentTopic":{
							"type":"string",
							"title":"Current Topic"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_get_session_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kLPU3-1",
			"id":"n_zAQ5Q",
			"index":2,
			"inputs":{
				"variableSchema":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"tableIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Table Ids"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Get Session Variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":467,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kLPU3-1",
			"id":"n_3BpN2",
			"index":3,
			"inputs":{
				"automationId":"67a48d37f8f1744841dabb63",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"aiAgentId":"{{ _c8Wzl.outputs.agentId }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":449,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kLPU3-1",
			"id":"_gbOeH",
			"index":4,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"$ref":"#/definitions/entity|e_code_snippet|e_679477888163423f74930eba",
									"$comment":"Tool"
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"tools",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"tools",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"id":{
										"type":"string",
										"title":"id"
									},
									"name":{
										"type":"string",
										"title":"name"
									},
									"description":{
										"type":"string",
										"title":"description"
									},
									"toolInputSchema":{
										"type":"object",
										"title":"toolInputSchema"
									},
									"additional":{
										"type":"object",
										"title":"additional"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"tools",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":438,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kLPU3-1",
			"id":"n_GPwxo",
			"index":5,
			"inputs":{
				"filters":[
					{
						"property":"{{ _c8Wzl.outputs.textToSQLSettings.isOnlyTextToSQLAgent  }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"only text2sql",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":757,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_GPwxo@kLPU3-1@y",
			"id":"n_UjFpo",
			"index":6,
			"inputs":{
				"filters":[
					{
						"property":"{{ _c8Wzl.outputs.textToSQLSettings.topicIdForOnlyText2SQL  }}",
						"filter":{
							"operator":"EQUAL",
							"value":"GLOBAL"
						}
					},
					{
						"property":"{{ _c8Wzl.outputs.textToSQLSettings.topicIdForOnlyText2SQL  }}",
						"filter":{
							"operator":"EQUAL",
							"value":"{{ _c8Wzl.outputs.currentTopic  }}"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"Topic=global/current",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				},
				"visibleOptionalFields":[
					"root.parameters.messages.items.role",
					"root.parameters.messages.items.content.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":449,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_UjFpo@n_GPwxo@kLPU3-1@y@y",
			"id":"_IB8QW",
			"index":7,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"userQuery":{
							"type":"string",
							"title":"User Query"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"messages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"role":{
										"type":"string",
										"title":"role"
									},
									"content":{
										"type":"array",
										"items":{
											"type":"object"
										},
										"title":"content"
									}
								},
								"additionalProperties":false
							},
							"title":"messages"
						}
					}
				},
				"code":"def lastUserText = ''\nmessages.reverse().find { msg ->\n    if (msg.role == 'user') {\n        def textMsg = msg.content.findAll { it.type == 'text' && it.text?.trim() }\n        if (textMsg) {\n            lastUserText = textMsg.last().text\n            return true\n        }\n    }\n    return false\n}\nreturn [\"userQuery\": lastUserText ?: ' ']",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"messages":{
						"source":"{{ _c8Wzl.outputs.messages  }}",
						"ua:type":"mappedArray",
						"items":{
							"role":"{{ _c8Wzl.outputs.messages[0].role  }}",
							"content":{
								"source":"{{ _c8Wzl.outputs.messages[0].content  }}",
								"ua:type":"mappedArray",
								"items":"{{ _c8Wzl.outputs.messages[0].content[0]  }}"
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_UjFpo@n_GPwxo@kLPU3-1@y@y",
			"id":"_WGzPg",
			"index":8,
			"inputs":{
				"automationId":"68712e940efd02597703f2f3",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ _c8Wzl.outputs.caseId  }}",
					"aiAgentId":"{{ _c8Wzl.outputs.agentId  }}",
					"userQuery":"{{ _IB8QW.outputs.result.userQuery }}",
					"tableIds":{
						"source":"{{ n_zAQ5Q.outputs.tableIds }}",
						"ua:type":"mappedArray",
						"items":"{{ n_zAQ5Q.outputs.tableIds[0] }}"
					}
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"maxLeaseTimeUnit":"SECONDS",
					"maxWaitDurationUnit":"SECONDS"
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"cacheKey":"{{ _c8Wzl.outputs.caseId }}_{{ _c8Wzl.outputs.agentId }}_{{ _IB8QW.outputs.result.userQuery }}",
					"enabled":true,
					"timeToLive":"300",
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				},
				"timeoutConfig":{
					"enabled":false
				}
			},
			"skip":false,
			"subTitle":"Fetch Metadata",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":320,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_UjFpo@n_GPwxo@kLPU3-1@y@y",
			"id":"_nDTzv",
			"index":9,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_additional_IsDataRAGExecuted",
							"filter":{
								"operator":"EQUAL",
								"value":"True"
							}
						},
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ _c8Wzl.outputs.caseId  }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"service_hub_message",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"sortBy":[
					{
						"field":"cTm",
						"order":"DESC"
					}
				],
				"page":{
					"paginateBy":"OFFSET",
					"limit":10
				},
				"numberOfRecordsToFetch":"MULTIPLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.messages.items.sql_query",
					"root.parameters.messages.items.toolInputs",
					"root.parameters.messages.items.usedMetadata.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":317,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_UjFpo@n_GPwxo@kLPU3-1@y@y",
			"id":"_eeBEI",
			"index":10,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"conversation_history":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"user_query":{
										"type":"string",
										"title":"user_query"
									},
									"sql_query":{
										"type":"string",
										"title":"sql_query"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"conversation_history"
						},
						"AggUsedMd":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Agg Used Md"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"messages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"sql_query":{
										"type":"string",
										"title":"sql_query"
									},
									"toolInputs":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"toolInputs"
									},
									"usedMetadata":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false
										},
										"title":"Used Metadata"
									}
								},
								"required":[]
							},
							"title":"messages"
						}
					},
					"additionalProperties":false
				},
				"compile_static":false,
				"code":"def conversation_history = []\ndef combinedUsedMetadata = []\n\nif (binding.hasVariable('messages')) {\n    def messages = binding.getVariable('messages')\n    for (msg in messages) {\n        def sql_query = msg?.sql_query\n        def user_query = msg?.toolInputs?.query\n        if (sql_query && user_query) {\n            conversation_history << [\n                \"user_query\": user_query,\n                \"sql_query\": sql_query\n            ]\n        }\n    }\n\n    combinedUsedMetadata = messages.collectMany { it.usedMetadata ?: [] }\n}\n\nreturn [\n    \"conversation_history\": conversation_history,\n    \"AggUsedMd\": combinedUsedMetadata\n]\n",
				"parameters":{
					"messages":{
						"source":"{{ _nDTzv.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":{
							"toolInputs":"{{ _nDTzv.outputs.objects[0].properties.content.agentResponse.toolUseDetails.toolInput }}",
							"sql_query":"{{ _nDTzv.outputs.objects[0].properties.additional.sqlQuery }}",
							"usedMetadata":{
								"ua:type":"mappedArray",
								"source":"{{ _nDTzv.outputs.objects[0].properties.additional.usedMetadata }}",
								"items":"{{ _nDTzv.outputs.objects[0].properties.additional.usedMetadata[0] }}"
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.md.items",
					"root.parameters.alreadyUsedMd.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":184,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_UjFpo@n_GPwxo@kLPU3-1@y@y",
			"id":"_QkPnp",
			"index":11,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"metadata":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"metadata"
						},
						"metadata_reduced":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Metadata Reduced"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"md":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"md"
						},
						"alreadyUsedMd":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Already Used Md"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def tableMap = [:]\n\ndef md = binding.hasVariable(\"md\") ? binding.getVariable(\"md\") : []\n\ndef alreadyUsedMd = binding.hasVariable(\"alreadyUsedMd\") ? binding.getVariable(\"alreadyUsedMd\") : []\n\nmd = md+alreadyUsedMd\nmd.each { metadataItem ->\n    def tableName = metadataItem['table_name']\n    if (!tableMap.containsKey(tableName)) {\n        tableMap[tableName] = [\n            'columns': [],\n            'tableDescription': metadataItem['tableDescription'],\n            'tablePrimaryKey': metadataItem['tablePrimaryKey'],\n            'platform_name': metadataItem['platform_name'],\n            'tableNameUI': metadataItem['tableNameUI']\n        ]\n    }    \n    def filteredMetadata = [\n        'column_description': metadataItem?.column_description?.replace(\"\\n\", \"<br>\"),\n        'column_name': metadataItem?.column_name,\n        'column_datatype': metadataItem?.column_datatype,\n        'column_label' : metadataItem?.column_label,\n    ]\n    \n    tableMap[tableName]['columns'] << filteredMetadata\n}\n\ndef resultArray = tableMap.collect { tableName, data ->\n    [\n        'tableName': tableName,\n        'columns': data['columns'],\n        'tableDescription': data['tableDescription'],\n        'tablePrimaryKey': data['tablePrimaryKey'],\n        'platform_name': data['platform_name'],\n        'tableNameUI': data['tableNameUI']\n    ]\n}\ndef reducedResultArray = tableMap.collect { tableName, data ->\n    [\n        'tableName': tableName,\n        'columns': data['columns'].collect { col ->\n            [\n                'column_name': col['column_name'],\n                'column_label': col['column_label']\n                // column_description and column_datatype are not included\n            ]\n        },\n        'tableDescription': data['tableDescription'],\n        'tablePrimaryKey': data['tablePrimaryKey'],\n        'platform_name': data['platform_name'],\n        'tableNameUI': data['tableNameUI']\n    ]\n}\n\nreturn [\n    'metadata': resultArray,\n    'metadata_reduced': reducedResultArray\n]\n\n\nreturn ['metadata': resultArray,'metadata_reduced' : reducedResultArray]",
				"parameters":{
					"md":{
						"ua:type":"mappedArray",
						"source":"{{ _WGzPg.outputs.metadata }}",
						"items":"{{ _WGzPg.outputs.metadata[0] }}"
					},
					"alreadyUsedMd":{
						"source":"{{ _eeBEI.outputs.result.AggUsedMd }}",
						"ua:type":"mappedArray",
						"items":"{{ _eeBEI.outputs.result.AggUsedMd[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"convert metadata",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_UjFpo@n_GPwxo@kLPU3-1@y@y",
			"id":"_bleiT",
			"index":12,
			"inputs":{
				"filters":[
					{
						"property":"{{ _c8Wzl.outputs.textToSQLSettings.sqlAndChart1LLMCall_Variant  }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"1 call variant",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.input_schema.database_metadata.items",
					"root.input_schema.few_shot_examples.items"
				]
			},
			"context":{
				"appName":"template_by_unifyapps",
				"resourceVersion":15,
				"resourceName":"template_by_unifyapps_compile_template",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bleiT@n_UjFpo@n_GPwxo@kLPU3-1@y@y@y",
			"id":"_jvSeh",
			"index":13,
			"inputs":{
				"input_schema":{
					"knowledge_instructions":"{{ _WGzPg.outputs.knowledgeInstructions }}",
					"platformName":"{{ _WGzPg.outputs.platform }}",
					"chartInstructionsGivenByUser":"{{ n_3BpN2.outputs.properties.responseGenerationSettings.chartGenerationSettings.chartInstructions }}",
					"few_shot_examples":{
						"source":"{{ _WGzPg.outputs.fewShotExamples }}",
						"ua:type":"mappedArray",
						"items":"{{ _WGzPg.outputs.fewShotExamples[0] }}"
					},
					"database_metadata":{
						"source":"{{ _QkPnp.outputs.result.metadata }}",
						"ua:type":"mappedArray",
						"items":"{{ _QkPnp.outputs.result.metadata[0] }}"
					}
				},
				"template_id":"e_687e1e8e92a1010506733efd"
			},
			"skip":false,
			"subTitle":"sql+chart",
			"title":"Compile template",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.metadata.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bleiT@n_UjFpo@n_GPwxo@kLPU3-1@y@y@y",
			"id":"_GwOep",
			"index":14,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"executeSQLAdditional":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Execute SQL Additional"
						},
						"executeSQL_ChartInputSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"executeSQL_ChartInputSchema"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"platformName":{
							"type":"string",
							"title":"Platform Name"
						},
						"metadata":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Metadata"
						}
					}
				},
				"code":"return [\n  \n    executeSQL_ChartInputSchema: [ \n      \"type\": \"object\", \n      \"properties\": [ \n        \"sql_query\": [ \n          \"type\": \"string\", \n          \"description\": \"The generated SQL query in MySQL dialect for StarRocks, following all specified instructions.\" \n        ], \n        \"toBlocks\": [ \n          \"type\": \"object\", \n          \"properties\": [ \"yAxisLabel\": [ \"type\": \"string\", \"description\": \"Label for the Y-axis.\" ], \"columns\": [ \"type\": \"array\", \"items\": [ \"type\": \"object\", \"properties\": [ \"label\": [ \"type\": \"string\", \"description\": \"Label for the column.\" ], \"type\": [ \"type\": \"string\", \"description\": \"Data type of the column.\" ], \"value\": [ \"type\": \"string\", \"description\": \"Value for the column.\" ], \"currencyCode\": [ \"type\": \"string\", \"description\": \"Currency code if applicable.\" ] ], \"required\": [\"label\", \"type\", \"value\"] ] ], \"series\": [ \"type\": \"array\", \"items\": [ \"type\": \"object\", \"properties\": [ \"label\": [ \"type\": \"string\", \"description\": \"Series label.\" ], \"key\": [ \"type\": \"string\", \"description\": \"Series key.\" ] ], \"required\": [\"label\", \"key\"] ] ], \"blockType\": [ \"type\": \"string\", \"description\": \"Type of chart block.\" ], \"xAxisValue\": [ \"type\": \"string\", \"description\": \"Value for the X-axis.\" ], \"chartType\": [ \"type\": \"string\", \"description\": \"Type of the chart.\" ], \"xAxisLabel\": [ \"type\": \"string\", \"description\": \"Label for the X-axis.\" ], \"groupBy\": [ \"type\": \"string\", \"description\": \"Group by field.\" ], \"yAxis\": [ \"type\": \"object\", \"properties\": [ \"series\": [ \"type\": \"array\", \"items\": [ \"type\": \"object\", \"properties\": [ \"key\": [ \"type\": \"string\", \"description\": \"Key for the left Y-axis series.\" ], \"label\": [ \"type\": \"string\", \"description\": \"Label for the left Y-axis series.\" ] ], \"required\": [\"key\", \"label\"] ] ] ] ], \"title\": [ \"type\": \"string\", \"description\": \"Title of the chart.\" ] ], \n          \"required\": [\"blockType\", \"title\"]\n        ] \n      ], \n      \"required\": [\"sql_query\", \"toBlocks\"] ]\n  ,\n  \n    executeSQLAdditional: [\n      platformName: platformName,\n      metadata: metadata\n    ]\n  \n]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"platformName":"{{ _WGzPg.outputs.platform }}",
					"metadata":{
						"ua:type":"mappedArray",
						"source":"{{ _WGzPg.outputs.metadata }}",
						"items":"{{ _WGzPg.outputs.metadata[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Default tool Schemas",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bleiT@n_UjFpo@n_GPwxo@kLPU3-1@y@y@y",
			"id":"_4JyWp",
			"index":15,
			"inputs":{
				"itemToAdd":{
					"name":"ExecuteSQLTable",
					"id":"ExecuteSQLTable",
					"description":"{{ _jvSeh.outputs.output }}",
					"toolInputSchema":"{{ _GwOep.outputs.result.executeSQL_ChartInputSchema }}",
					"additional":"{{ _GwOep.outputs.result.executeSQLAdditional }}"
				},
				"insertLocation":"END",
				"listName":"{{ _gbOeH.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"ExecuteSQL,Table tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.metadata.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bleiT@n_UjFpo@n_GPwxo@kLPU3-1@y@y@n",
			"id":"_2KAdI",
			"index":16,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"executeSQLInputSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Execute SQL Input Schema"
						},
						"executeSQLAdditional":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Execute SQL Additional"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"platformName":{
							"type":"string",
							"title":"Platform Name"
						},
						"metadata":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Metadata"
						}
					}
				},
				"code":"return [\n  executeSQLInputSchema: [\n    type: 'object',\n    properties: [\n      sql_query: [\n        type: 'string',\n        description: 'The generated SQL query in MySQL dialect for StarRocks, following all specified instructions.' \n      ]\n    ],\n    required: ['sql_query']\n  ],\n  executeSQLAdditional: [\n    platformName: platformName,\n    metadata: metadata,\n  ]\n]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"platformName":"{{ _WGzPg.outputs.platform }}",
					"metadata":{
						"ua:type":"mappedArray",
						"source":"{{ _QkPnp.outputs.result.metadata_reduced }}",
						"items":"{{ _QkPnp.outputs.result.metadata_reduced[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Default tool Schemas",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.input_schema.database_metadata.items"
				]
			},
			"context":{
				"appName":"template_by_unifyapps",
				"resourceVersion":15,
				"resourceName":"template_by_unifyapps_compile_template",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bleiT@n_UjFpo@n_GPwxo@kLPU3-1@y@y@n",
			"id":"_V5ryj",
			"index":17,
			"inputs":{
				"input_schema":{
					"knowledge_instructions":"{{ _WGzPg.outputs.knowledgeInstructions }}",
					"database_metadata":{
						"source":"{{ _QkPnp.outputs.result.metadata }}",
						"ua:type":"mappedArray"
					},
					"few_shot_examples":{
						"source":"{{ _WGzPg.outputs.fewShotExamples }}",
						"ua:type":"mappedArray"
					},
					"platformName":"{{ _WGzPg.outputs.platform }}"
				},
				"template_id":"e_68720c7852a5f77fa6cff7c1"
			},
			"skip":false,
			"subTitle":"text_to_sql_tool_prompt",
			"title":"Compile template",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bleiT@n_UjFpo@n_GPwxo@kLPU3-1@y@y@n",
			"id":"_Z4UgV",
			"index":18,
			"inputs":{
				"itemToAdd":{
					"name":"ExecuteSQL",
					"id":"ExecuteSQL",
					"toolInputSchema":"{{ _2KAdI.outputs.result.executeSQLInputSchema }}",
					"description":"{{ _V5ryj.outputs.output }}",
					"additional":"{{ _2KAdI.outputs.result.executeSQLAdditional }}"
				},
				"insertLocation":"END",
				"listName":"{{ _gbOeH.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add ExecuteSQL tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"template_by_unifyapps",
				"resourceVersion":438,
				"resourceName":"template_by_unifyapps_compile_template",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bleiT@n_UjFpo@n_GPwxo@kLPU3-1@y@y@n",
			"id":"_P4h61",
			"index":19,
			"inputs":{
				"input_schema":{
					"chartInstructionGivenByUser":"{{ n_3BpN2.outputs.properties.responseGenerationSettings.chartGenerationSettings.chartInstructions }}"
				},
				"template_id":"e_6875059d5670883c65304b26"
			},
			"skip":false,
			"subTitle":"Template by UnifyApps",
			"title":"Compile template",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":449,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bleiT@n_UjFpo@n_GPwxo@kLPU3-1@y@y@n",
			"id":"_hZi9a",
			"index":20,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"generateChartWithBlockToolInputSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Generate Chart With Block Tool Input Schema"
						}
					}
				},
				"code":"return [\n  generateChartWithBlockToolInputSchema: \n    [\n  \n    type: 'object',\n    properties: [\n          toBlocks: [\n            type: 'object',\n            properties: [\n              yAxisLabel: [\n                type: 'string',\n                description: 'Label for the Y-axis.'\n              ],\n              // ,\n              // data: [\n              //   type: 'object',\n              //   properties: [\n              //     text: [\n              //       type: 'string',\n              //       description: 'Main text data for the chart.'\n              //     ]\n              //   ],\n              //   required: ['text']\n              // ],\n              columns: [\n                type: 'array',\n                items: [\n                  type: 'object',\n                  properties: [\n                    label: [\n                      type: 'string',\n                      description: 'Label for the column.'\n                    ],\n                    type: [\n                      type: 'string',\n                      description: 'Data type of the column.'\n                    ],\n                    value: [\n                      type: 'string',\n                      description: 'Value for the column.'\n                    ],\n                    currencyCode: [\n                      type: 'string',\n                      description: 'Currency code if applicable.'\n                    ]\n                  ],\n                  required: ['label', 'type', 'value']\n                ]\n              ],\n              series: [\n                type: 'array',\n                items: [\n                  type: 'object',\n                  properties: [\n                    label: [\n                      type: 'string',\n                      description: 'Series label.'\n                    ],\n                    key: [\n                      type: 'string',\n                      description: 'Series key.'\n                    ]\n                  ],\n                  required: ['label', 'key']\n                ]\n              ],\n              blockType: [\n                type: 'string',\n                description: 'required field. Type of block to be published, either \"Chart\" or \"Table\".'\n              ],\n              xAxisValue: [\n                type: 'string',\n                description: 'Value for the X-axis.'\n              ],\n              chartType: [\n                type: 'string',\n                description: 'Type of the chart.'\n              ],\n              xAxisLabel: [\n                type: 'string',\n                description: 'Label for the X-axis.'\n              ],\n              groupBy: [\n                type: 'string',\n                description: 'Group by field.'\n              ],\n              yAxis: [\n                type: 'object',\n                properties: [\n                  series: [\n                    type: 'array',\n                    items: [\n                      type: 'object',\n                      properties: [\n                        key: [\n                          type: 'string',\n                          description: 'Key for the left Y-axis series.'\n                        ],\n                        label: [\n                          type: 'string',\n                          description: 'Label for the left Y-axis series.'\n                        ]\n                      ],\n                      required: ['key', 'label']\n                    ]\n                  ]\n                ]\n              ],\n              title: [\n                type: 'string',\n                description: 'Title of the chart.'\n              ]\n            ],\n            required: ['blockType']\n          ],\n          chartId: [\n            type: 'string',\n            description: 'Id of the Chart that needs to be published , these charts would be from the output of ExecuteSQL tool.'\n          ]\n        ],\n        required: ['toBlocks', 'chartId']\n      \n]\n\n  \n]",
				"compile_static":false,
				"captureStdOutput":false
			},
			"skip":false,
			"subTitle":"GenerateChartsToolInputSchema",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bleiT@n_UjFpo@n_GPwxo@kLPU3-1@y@y@n",
			"id":"_vS5Gv",
			"index":21,
			"inputs":{
				"itemToAdd":{
					"name":"GenerateChartWithBlocks",
					"id":"GenerateChartWithBlocks",
					"description":"{{ _P4h61.outputs.output }}. DO NOT REPEAT THE SAME INFORMATION IN THE FINAL ANSWER IF THE TOOL HAS BEEN SUCCESSFULLY EXECUTED. Do not give any dummy Chart Link or chart description/information about the chart in the Final Answer. [STRICTLY] IF AT THE END OF THE EXECUTESQL TOOL OUTPUT, TOOL CALL FOR GENERATECHARTWITHBLOCKS AND TABLE 'BLOCKTYPE' IS MENTIONED, THEN STRICTLY MAKE TOOL CALL TO GenerateChartWithBlocks WITH BLOCKTYPE AS TABLE ONLY. ",
					"toolInputSchema":"{{ _hZi9a.outputs.result.generateChartWithBlockToolInputSchema }}"
				},
				"insertLocation":"END",
				"listName":"{{ _gbOeH.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add GenerateCharts tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_GPwxo@kLPU3-1@n",
			"id":"n_vDh6a",
			"index":22,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_3BpN2.outputs.properties.responseGenerationSettings.chartGenerationSettings.generateChartWithBlocks_NewVersion }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"template_by_unifyapps",
				"resourceVersion":438,
				"resourceName":"template_by_unifyapps_compile_template",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_vDh6a@n_GPwxo@kLPU3-1@n@y",
			"id":"_0ru1F",
			"index":23,
			"inputs":{
				"input_schema":{
					"chartInstructionGivenByUser":"{{ n_3BpN2.outputs.properties.responseGenerationSettings.chartGenerationSettings.chartInstructions }}"
				},
				"template_id":"e_6875059d5670883c65304b26"
			},
			"skip":false,
			"subTitle":"Template by UnifyApps",
			"title":"Compile template",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":449,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_vDh6a@n_GPwxo@kLPU3-1@n@y",
			"id":"_DPFMv",
			"index":24,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"generateChartWithBlockToolInputSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Generate Chart With Block Tool Input Schema"
						}
					}
				},
				"code":"return [\n  generateChartWithBlockToolInputSchema: \n    [\n  \n    type: 'object',\n    properties: [\n          toBlocks: [\n            type: 'object',\n            properties: [\n              yAxisLabel: [\n                type: 'string',\n                description: 'Label for the Y-axis.'\n              ],\n              // ,\n              // data: [\n              //   type: 'object',\n              //   properties: [\n              //     text: [\n              //       type: 'string',\n              //       description: 'Main text data for the chart.'\n              //     ]\n              //   ],\n              //   required: ['text']\n              // ],\n              columns: [\n                type: 'array',\n                items: [\n                  type: 'object',\n                  properties: [\n                    label: [\n                      type: 'string',\n                      description: 'Label for the column.'\n                    ],\n                    type: [\n                      type: 'string',\n                      description: 'Data type of the column.'\n                    ],\n                    value: [\n                      type: 'string',\n                      description: 'Value for the column.'\n                    ],\n                    currencyCode: [\n                      type: 'string',\n                      description: 'Currency code if applicable.'\n                    ]\n                  ],\n                  required: ['label', 'type', 'value']\n                ]\n              ],\n              series: [\n                type: 'array',\n                items: [\n                  type: 'object',\n                  properties: [\n                    label: [\n                      type: 'string',\n                      description: 'Series label.'\n                    ],\n                    key: [\n                      type: 'string',\n                      description: 'Series key.'\n                    ]\n                  ],\n                  required: ['label', 'key']\n                ]\n              ],\n              blockType: [\n                type: 'string',\n                description: 'Type of block to be published, either \"Chart\" or \"Table\" (Required field).'\n              ],\n              xAxisValue: [\n                type: 'string',\n                description: 'Value for the X-axis.'\n              ],\n              chartType: [\n                type: 'string',\n                description: 'Type of the chart.'\n              ],\n              xAxisLabel: [\n                type: 'string',\n                description: 'Label for the X-axis.'\n              ],\n              groupBy: [\n                type: 'string',\n                description: 'Group by field.'\n              ],\n              yAxis: [\n                type: 'object',\n                properties: [\n                  series: [\n                    type: 'array',\n                    items: [\n                      type: 'object',\n                      properties: [\n                        key: [\n                          type: 'string',\n                          description: 'Key for the left Y-axis series.'\n                        ],\n                        label: [\n                          type: 'string',\n                          description: 'Label for the left Y-axis series.'\n                        ]\n                      ],\n                      required: ['key', 'label']\n                    ]\n                  ]\n                ]\n              ],\n              title: [\n                type: 'string',\n                description: 'Title of the chart.'\n              ]\n            ],\n            required: ['blockType']\n          ],\n          chartId: [\n            type: 'string',\n            description: 'Id of the Chart that needs to be published , these charts would be from the output of ReferFromKnowledgeDDA tool.'\n          ]\n        ],\n        required: ['toBlocks', 'chartId']\n      \n]\n\n  \n]",
				"compile_static":false,
				"captureStdOutput":false
			},
			"skip":false,
			"subTitle":"GenerateChartsToolInputSchema",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_vDh6a@n_GPwxo@kLPU3-1@n@y",
			"id":"_u9Vjr",
			"index":25,
			"inputs":{
				"itemToAdd":{
					"name":"GenerateChartWithBlocks",
					"id":"GenerateChartWithBlocks",
					"description":"{{ _0ru1F.outputs.output }}. ",
					"toolInputSchema":"{{ _DPFMv.outputs.result.generateChartWithBlockToolInputSchema }}"
				},
				"insertLocation":"END",
				"listName":"{{ _gbOeH.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add GenerateCharts tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.result.tools.source",
					"root.result.tools.ua:type",
					"root.result.tools.items.id",
					"root.result.tools.items.name",
					"root.result.tools.items.description"
				]
			},
			"context":{
				"appName":"callables",
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"kLPU3-1",
			"id":"_oQno5",
			"index":26,
			"inputs":{
				"result":{
					"tools":{
						"source":"{{ _gbOeH.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"id":"{{ _gbOeH.outputs.items[0].id }}",
							"name":"{{ _gbOeH.outputs.items[0].name }}",
							"description":"{{ _gbOeH.outputs.items[0].description }}",
							"toolInputSchema":"{{ _gbOeH.outputs.items[0].toolInputSchema }}",
							"additional":"{{ _gbOeH.outputs.items[0].additional }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":43523,
	"schemaReferences":[
		"entity|e_code_snippet|e_679477888163423f74930eba",
		"entity|e_code_snippet|e_67a48c5cc6ba6e3a57165fee"
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":30
}