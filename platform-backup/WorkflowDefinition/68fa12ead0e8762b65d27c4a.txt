{
	"appsUsed":[
		
	],
	"createdTime":1761219306778,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1761291252853,
		"deployedBy":115477,
		"deployedDefinitionId":"68fb2bf4efa5e92eae864930",
		"status":"DEPLOYED",
		"version":10,
		"workflowVersion":20
	},
	"edges":[
		{
			"fromNodeId":"n_PQRFu",
			"priority":0,
			"skip":false,
			"toNodeId":"n_R9Gq8",
			"type":"next"
		},
		{
			"fromNodeId":"n_R9Gq8",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Lzq6H",
			"type":"next"
		},
		{
			"fromNodeId":"n_Lzq6H",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_h8DaG",
			"type":"if"
		},
		{
			"fromNodeId":"n_h8DaG",
			"priority":0,
			"skip":false,
			"toNodeId":"n_txMg9",
			"type":"next"
		},
		{
			"fromNodeId":"n_txMg9",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2kbkq",
			"type":"if"
		},
		{
			"fromNodeId":"n_txMg9",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_BKo2D",
			"type":"next"
		},
		{
			"fromNodeId":"n_2kbkq",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qDjU3",
			"type":"next"
		},
		{
			"fromNodeId":"_BKo2D",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qDjU3",
			"type":"next"
		},
		{
			"fromNodeId":"n_Lzq6H",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qDjU3",
			"type":"next"
		},
		{
			"fromNodeId":"n_qDjU3",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_I5HTd",
			"type":"if"
		},
		{
			"fromNodeId":"n_I5HTd",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nQDPb",
			"type":"next"
		},
		{
			"fromNodeId":"n_qDjU3",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nQDPb",
			"type":"next"
		}
	],
	"id":"68fa12ead0e8762b65d27c4a",
	"lastModifiedBy":115477,
	"lcName":"best practices | check issue",
	"modifiedTime":1761291929791,
	"name":"Best Practices | Check Issue",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"callables",
				"resourceVersion":1053,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_z6eK1-1",
			"id":"n_PQRFu",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"entityVersion":{
							"type":"integer",
							"title":"entityVersion"
						},
						"entities":{
							"type":"object",
							"properties":{
								"blockIds":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"blockIds"
								},
								"variables":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"variables"
								},
								"functions":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"functions"
								},
								"dataSources":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"dataSources"
								}
							},
							"title":"entities",
							"additionalProperties":false
						},
						"entityType":{
							"type":"string",
							"title":"entityType"
						},
						"entityId":{
							"type":"string",
							"title":"entityId"
						},
						"checkId":{
							"type":"string",
							"title":"checkId"
						},
						"status":{
							"type":"string",
							"title":"status"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"data_sources":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"id":{
										"type":"string",
										"title":"id"
									},
									"schema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"schema"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Data Sources"
						},
						"checks":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"checkId":{
										"type":"string",
										"title":"checkId"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Checks"
						},
						"page_schema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"page_schema"
						},
						"id":{
							"type":"string",
							"title":"id"
						},
						"entityType":{
							"type":"string",
							"title":"entityType"
						},
						"page_version":{
							"type":"integer",
							"title":"page_version"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"additional":{
				"xsdSchemaConfig":{}
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":1061,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_z6eK1-1",
			"id":"n_R9Gq8",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"entityVersion":{
											"type":"integer",
											"title":"entityVersion"
										},
										"entities":{
											"type":"object",
											"properties":{
												"blockIds":{
													"type":"array",
													"items":{
														"type":"string"
													},
													"title":"blockIds"
												},
												"variables":{
													"type":"array",
													"items":{
														"type":"string"
													},
													"title":"variables"
												},
												"functions":{
													"type":"array",
													"items":{
														"type":"string"
													},
													"title":"functions"
												},
												"dataSources":{
													"type":"array",
													"items":{
														"type":"string"
													},
													"title":"dataSources"
												}
											},
											"title":"entities",
											"additionalProperties":false
										},
										"entityType":{
											"type":"string",
											"title":"entityType"
										},
										"entityId":{
											"type":"string",
											"title":"entityId"
										},
										"checkId":{
											"type":"string",
											"title":"checkId"
										},
										"status":{
											"type":"string",
											"title":"status"
										}
									},
									"additionalProperties":false
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"Output",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"Output",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"entityVersion":{
										"type":"integer",
										"title":"entityVersion"
									},
									"entities":{
										"type":"object",
										"properties":{
											"blockIds":{
												"type":"array",
												"items":{
													"type":"string"
												},
												"title":"blockIds"
											},
											"variables":{
												"type":"array",
												"items":{
													"type":"string"
												},
												"title":"variables"
											},
											"functions":{
												"type":"array",
												"items":{
													"type":"string"
												},
												"title":"functions"
											},
											"dataSources":{
												"type":"array",
												"items":{
													"type":"string"
												},
												"title":"dataSources"
											}
										},
										"title":"entities",
										"additionalProperties":false
									},
									"entityType":{
										"type":"string",
										"title":"entityType"
									},
									"entityId":{
										"type":"string",
										"title":"entityId"
									},
									"checkId":{
										"type":"string",
										"title":"checkId"
									},
									"status":{
										"type":"string",
										"title":"status"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":791,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_z6eK1-1",
			"id":"n_Lzq6H",
			"index":3,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_PQRFu.outputs.checks[0].checkId }}",
						"filter":{
							"operator":"EQUAL",
							"value":"CHECK_1"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				},
				"visibleOptionalFields":[
					"root.parameters.pages.items.id",
					"root.parameters.pages.items.page_schema"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":947,
				"resourceName":"code_by_unifyapps_javascript",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_Lzq6H@_z6eK1-1@y",
			"id":"n_h8DaG",
			"index":4,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"outputList":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"pageID":{
										"type":"string",
										"title":"pageID"
									},
									"status":{
										"type":"string",
										"title":"status"
									},
									"blocksIDs":{
										"type":"array",
										"items":{
											"type":"string"
										},
										"title":"blocksIDs"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"outputList"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"page_schema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"page_schema"
						},
						"id":{
							"type":"string",
							"title":"id"
						}
					}
				},
				"code":"// `page` is assumed to be provided\nconst outputList = [];\n\n/**\n * Recursive function to traverse all blocks and nested blocks\n * to find \"Repeatable\" components and check their pagination.\n */\nlet checkBlocks;\n\n// Public entry point signature — keeps full map for recursion\ncheckBlocks = (blocksMap, pageId) => {\n  return checkBlocksCore(blocksMap, pageId, blocksMap);\n};\n\n// Internal recursive with fullMap carried along\nconst checkBlocksCore = (blocksToCheckMap, pageId, fullBlocksMap) => {\n  const results = [];\n\n  Object.entries(blocksToCheckMap || {}).forEach(([blockId, blockData]) => {\n    const comp = blockData?.component;\n    if (!comp) return;\n\n    // 1. is Repeatable?\n    if (comp.componentType === \"Repeatable\") {\n      // 2. pagination?\n      const hasPagination = comp?.content?.addOns?.page != null;\n      results.push({\n        pageId: pageId,\n        blockId: blockId || \"\",\n        ComponentName: blockData?.displayName || \"\",\n        status: hasPagination ? \"Pass\" : \"Fail\",\n      });\n    }\n\n    // 3. nested via content.blockIds\n    const nestedIds = comp?.content?.blockIds || [];\n    nestedIds.forEach((nestedId) => {\n      const nestedBlockData = fullBlocksMap[nestedId];\n      if (nestedBlockData) {\n        results.push(\n          ...checkBlocksCore({ [nestedId]: nestedBlockData }, pageId, fullBlocksMap)\n        );\n      }\n    });\n\n    // 4. nested via slots\n    const slots = comp?.slots || {};\n    Object.values(slots).forEach((slotData) => {\n      const slotBlockId = slotData?.blockId;\n      if (slotBlockId) {\n        const slotBlockData = fullBlocksMap[slotBlockId];\n        if (slotBlockData) {\n          results.push(\n            ...checkBlocksCore({ [slotBlockId]: slotBlockData }, pageId, fullBlocksMap)\n          );\n        }\n      }\n    });\n  });\n\n  return results;\n};\n\n// --- Process the Single Page ---\nconst pageId = page?.id || \"\";\nconst schema = page?.page_schema || {};\nconst blocks = schema?.blocks || {}; // full map\n\n// Run\nconst pageResults = checkBlocks(blocks, pageId);\noutputList.push(...pageResults);\n\n// --- Filter & Output ---\nconst failedBlocks = outputList.filter((r) => r.status === \"Fail\");\nlet finalOutput = {};\n\nif (failedBlocks.length > 0) {\n  finalOutput = {\n    pageID: pageId,\n    status: \"failed\",\n    blocksIDs: failedBlocks.map((b) => b.componentId),\n  };\n}\n\n// return result\nreturn finalOutput;\n",
				"isAsync":false,
				"parameters":{}
			},
			"skip":false,
			"subTitle":"CHECK_1",
			"title":"Execute Javascript",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":791,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_Lzq6H@_z6eK1-1@y",
			"id":"n_txMg9",
			"index":5,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ n_h8DaG.outputs.result.outputList }})",
						"filter":{
							"operator":"EQUAL",
							"value":"0"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.entities.blockIds.items",
					"root.itemToAdd.entities.variables.items",
					"root.itemToAdd.entities.functions.items",
					"root.itemToAdd.entities.dataSources.items"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":1028,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_txMg9@n_Lzq6H@_z6eK1-1@y@y",
			"id":"n_2kbkq",
			"index":6,
			"inputs":{
				"itemToAdd":{
					"entityVersion":"{{ n_PQRFu.outputs.page_version }}",
					"entityType":"{{ n_PQRFu.outputs.entityType }}",
					"entityId":"{{ n_PQRFu.outputs.id }}",
					"checkId":"{{ n_PQRFu.outputs.checks[0].checkId }}",
					"status":"successful"
				},
				"insertLocation":"END",
				"listName":"{{ n_R9Gq8.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.entities.blockIds.items",
					"root.itemToAdd.entities.variables.items",
					"root.itemToAdd.entities.functions.items",
					"root.itemToAdd.entities.dataSources.items"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":1028,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_txMg9@n_Lzq6H@_z6eK1-1@y@n",
			"id":"_BKo2D",
			"index":7,
			"inputs":{
				"itemToAdd":{
					"entityVersion":"{{ n_PQRFu.outputs.page_version }}",
					"entityType":"{{ n_PQRFu.outputs.entityType }}",
					"entityId":"{{ n_PQRFu.outputs.id }}",
					"checkId":"{{ n_PQRFu.outputs.checks[0].checkId }}",
					"status":"{{ n_h8DaG.outputs.result.outputList[0].status }}",
					"entities":{
						"blockIds":{
							"source":"{{ n_h8DaG.outputs.result.outputList[0].blocksIDs }}",
							"ua:type":"mappedArray",
							"items":"{{ n_h8DaG.outputs.result.outputList[0].blocksIDs[0] }}"
						}
					}
				},
				"insertLocation":"END",
				"listName":"{{ n_R9Gq8.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":791,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_z6eK1-1",
			"id":"n_qDjU3",
			"index":8,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_PQRFu.outputs.checks[0].checkId }}",
						"filter":{
							"operator":"EQUAL",
							"value":"CHECK_9"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_qDjU3@_z6eK1-1@y",
			"id":"n_I5HTd",
			"index":9,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"datasourceId":{
										"type":"string",
										"title":"datasourceId"
									},
									"datasourceName":{
										"type":"string",
										"title":"datasourceName"
									},
									"interfacePageId":{
										"type":"string",
										"title":"Page Id"
									},
									"status":{
										"type":"boolean",
										"title":"status"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"output"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"DataSource":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"schema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Schema"
									},
									"id":{
										"type":"string",
										"title":"Id"
									}
								},
								"additionalProperties":false,
								"required":[
									"schema",
									"id"
								]
							},
							"title":"Data Source"
						}
					}
				},
				"code":"def input = DataSource\n\n// Process input\ndef output = input.collect { item ->\n    def schema = item.schema\n    def advOptions = schema?.advancedOptions\n    def timing = advOptions?.timing\n    \n    def isAutomatic = advOptions?.runBehaviour == \"automatic\"\n    def onPageLoad = timing?.runQueryOnPageLoad as Boolean\n    \n    def status = (isAutomatic && onPageLoad) ? \"Pass\" : \"Fail\"\n    \n    [\n        datasourceId    : item.id,\n        datasourceName  : schema.name,\n        status          : status,\n        interfacePageId : schema.interfacePageId  // added\n    ]\n}\n\n// Print output\nreturn [output: output]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"DataSource":{
						"source":"{{ n_Ib7o1.outputs.DataSource }}",
						"ua:type":"mappedArray",
						"items":{
							"schema":"{{ n_Ib7o1.outputs.DataSource[0].schema }}",
							"id":"{{ n_Ib7o1.outputs.DataSource[0].id }}"
						}
					}
				}
			},
			"skip":true,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1089,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_z6eK1-1",
			"id":"n_nQDPb",
			"index":10,
			"inputs":{
				"result":{
					"entityVersion":"{{ n_R9Gq8.outputs.items[0].entityVersion }}",
					"entityType":"{{ n_R9Gq8.outputs.items[0].entityType }}",
					"entityId":"{{ n_R9Gq8.outputs.items[0].entityId }}",
					"checkId":"{{ n_R9Gq8.outputs.items[0].checkId }}",
					"status":"{{ n_R9Gq8.outputs.items[0].status }}",
					"entities":{
						"blockIds":{
							"ua:type":"mappedArray",
							"source":"{{ n_R9Gq8.outputs.items[0].entities.blockIds }}",
							"items":"{{ n_R9Gq8.outputs.items[0].entities.blockIds[0] }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":115477,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":23
}