{
	"appsUsed":[
		
	],
	"createdTime":1761219306778,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1761220121942,
		"deployedBy":115477,
		"deployedDefinitionId":"68fa16192f9999274c827a0d",
		"status":"DEPLOYED",
		"version":2,
		"workflowVersion":3
	},
	"edges":[
		{
			"fromNodeId":"n_PQRFu",
			"priority":0,
			"skip":false,
			"toNodeId":"n_h8DaG",
			"type":"next"
		},
		{
			"fromNodeId":"n_h8DaG",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nQDPb",
			"type":"next"
		}
	],
	"id":"68fa12ead0e8762b65d27c4a",
	"lastModifiedBy":115477,
	"lcName":"best practices | check issue",
	"modifiedTime":1761228324371,
	"name":"Best Practices | Check Issue",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"callables",
				"resourceVersion":1053,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_z6eK1-1",
			"id":"n_PQRFu",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"status"
					],
					"properties":{
						"entityVersion":{
							"type":"integer",
							"title":"entityVersion"
						},
						"entities":{
							"type":"object",
							"properties":{
								"blockIds":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"blockIds"
								},
								"variables":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"variables"
								},
								"functions":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"functions"
								},
								"dataSources":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"dataSources"
								}
							},
							"title":"entities",
							"additionalProperties":false
						},
						"entityType":{
							"type":"string",
							"title":"entityType"
						},
						"entityId":{
							"type":"string",
							"title":"entityId"
						},
						"checkId":{
							"type":"string",
							"title":"checkId"
						},
						"status":{
							"type":"string",
							"title":"status"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"data_sources":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Data Sources"
						},
						"checks":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Checks"
						},
						"page":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"page_schema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"page_schema"
									},
									"id":{
										"type":"string",
										"title":"Id"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Page"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_z6eK1-1",
			"id":"n_h8DaG",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"componentId":{
										"type":"string",
										"title":"componentId"
									},
									"ComponentName":{
										"type":"string",
										"title":"ComponentName"
									},
									"status":{
										"type":"string",
										"title":"status"
									},
									"pageId":{
										"type":"string",
										"title":"Page Id"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"output"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"Pages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"page_schema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"page_schema"
									},
									"id":{
										"type":"string",
										"title":"id"
									}
								},
								"additionalProperties":false,
								"required":[
									"page_schema",
									"id"
								]
							},
							"title":"Pages"
						}
					}
				},
				"code":"def inputArray = Pages\ndef output = []\n\n// Recursive function to traverse blocks\ndef checkBlocks\ncheckBlocks = { blocksMap, pageId ->\n    def results = []\n    blocksMap.each { blockId, blockData ->\n        def comp = blockData?.component\n        if (!comp) return\n\n        if (comp?.componentType == \"Repeatable\") {\n            def hasPagination = comp?.content?.addOns?.page != null\n            results << [\n                pageId        : pageId,\n                componentId   : blockId ?: \"\",\n                ComponentName : blockData?.displayName ?: \"\",\n                status        : hasPagination ? \"Pass\" : \"Fail\"\n            ]\n        }\n\n        // If block has nested blocks via content.blockIds, check recursively\n        def nestedIds = comp?.content?.blockIds ?: []\n        nestedIds.each { nestedId ->\n            def nestedBlock = blocksMap[nestedId]\n            if (nestedBlock) {\n                results.addAll(checkBlocks([(nestedId): nestedBlock], pageId))\n            }\n        }\n    }\n    return results\n}\n\ninputArray.each { pageObj ->\n    def pageId = pageObj?.id ?: \"\"\n    def schema = pageObj?.page_schema ?: [:]\n    def blocks = schema?.blocks ?: [:]\n\n    def pageResults = checkBlocks(blocks, pageId)\n    output.addAll(pageResults)   // only add when repeatables exist\n}\n\nreturn [output: output]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"Pages":{
						"source":"{{ n_NIGU9.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"page_schema":"{{ n_NIGU9.outputs.items[0].page_schema }}",
							"id":"{{ n_NIGU9.outputs.items[0].id }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1089,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_z6eK1-1",
			"id":"n_nQDPb",
			"index":3,
			"inputs":{
				"result":{
					"entityVersion":1,
					"entityType":"1",
					"entityId":"1",
					"checkId":"1",
					"status":"1",
					"entities":{
						"blockIds":{
							"source":"1",
							"ua:type":"mappedArray",
							"items":"1"
						},
						"variables":{
							"source":"1",
							"ua:type":"mappedArray",
							"items":"1"
						},
						"functions":{
							"source":"1",
							"ua:type":"mappedArray",
							"items":"1"
						},
						"dataSources":{
							"source":"1",
							"ua:type":"mappedArray",
							"items":"1"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":115477,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":4
}