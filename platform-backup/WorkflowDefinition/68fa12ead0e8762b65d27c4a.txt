{
	"appsUsed":[
		
	],
	"createdTime":1761219306778,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1761284135547,
		"deployedBy":115477,
		"deployedDefinitionId":"68fb10279bb45819e17a8d9b",
		"status":"DEPLOYED",
		"version":6,
		"workflowVersion":9
	},
	"edges":[
		{
			"fromNodeId":"n_PQRFu",
			"priority":0,
			"skip":false,
			"toNodeId":"n_h8DaG",
			"type":"next"
		},
		{
			"fromNodeId":"n_h8DaG",
			"priority":0,
			"skip":false,
			"toNodeId":"n_txMg9",
			"type":"next"
		},
		{
			"fromNodeId":"n_txMg9",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nQDPb",
			"type":"if"
		},
		{
			"fromNodeId":"n_txMg9",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_z1p2M",
			"type":"next"
		}
	],
	"id":"68fa12ead0e8762b65d27c4a",
	"lastModifiedBy":115477,
	"lcName":"best practices | check issue",
	"modifiedTime":1761286525650,
	"name":"Best Practices | Check Issue",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"callables",
				"resourceVersion":1053,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_z6eK1-1",
			"id":"n_PQRFu",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"status"
					],
					"properties":{
						"entityVersion":{
							"type":"integer",
							"title":"entityVersion"
						},
						"entities":{
							"type":"object",
							"properties":{
								"blockIds":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"blockIds"
								},
								"variables":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"variables"
								},
								"functions":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"functions"
								},
								"dataSources":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"dataSources"
								}
							},
							"title":"entities",
							"additionalProperties":false
						},
						"entityType":{
							"type":"string",
							"title":"entityType"
						},
						"entityId":{
							"type":"string",
							"title":"entityId"
						},
						"checkId":{
							"type":"string",
							"title":"checkId"
						},
						"status":{
							"type":"string",
							"title":"status"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"data_sources":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Data Sources"
						},
						"checks":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"checkId":{
										"type":"string",
										"title":"checkId"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Checks"
						},
						"page":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"page_schema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"page_schema"
									},
									"id":{
										"type":"string",
										"title":"Id"
									},
									"entityType":{
										"type":"string",
										"title":"entityType"
									},
									"page_version":{
										"type":"string",
										"title":"page_version"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Page"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				},
				"visibleOptionalFields":[
					"root.parameters.pages.items.id",
					"root.parameters.pages.items.page_schema"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":947,
				"resourceName":"code_by_unifyapps_javascript",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_z6eK1-1",
			"id":"n_h8DaG",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"outputList":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"pageID":{
										"type":"string",
										"title":"pageID"
									},
									"status":{
										"type":"string",
										"title":"status"
									},
									"blocksIDs":{
										"type":"array",
										"items":{
											"type":"string"
										},
										"title":"blocksIDs"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"outputList"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"pages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"page_schema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"page_schema"
									},
									"id":{
										"type":"string",
										"title":"id"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Pages"
						}
					}
				},
				"code":"// `page` is assumed to be provided\nconst outputList = [];\n\n/**\n * Recursive function to traverse all blocks and nested blocks\n * to find \"Repeatable\" components and check their pagination.\n */\nlet checkBlocks;\n\n// Public entry point signature â€” keeps full map for recursion\ncheckBlocks = (blocksMap, pageId) => {\n  return checkBlocksCore(blocksMap, pageId, blocksMap);\n};\n\n// Internal recursive with fullMap carried along\nconst checkBlocksCore = (blocksToCheckMap, pageId, fullBlocksMap) => {\n  const results = [];\n\n  Object.entries(blocksToCheckMap || {}).forEach(([blockId, blockData]) => {\n    const comp = blockData?.component;\n    if (!comp) return;\n\n    // 1. is Repeatable?\n    if (comp.componentType === \"Repeatable\") {\n      // 2. pagination?\n      const hasPagination = comp?.content?.addOns?.page != null;\n      results.push({\n        pageId: pageId,\n        blockId: blockId || \"\",\n        ComponentName: blockData?.displayName || \"\",\n        status: hasPagination ? \"Pass\" : \"Fail\",\n      });\n    }\n\n    // 3. nested via content.blockIds\n    const nestedIds = comp?.content?.blockIds || [];\n    nestedIds.forEach((nestedId) => {\n      const nestedBlockData = fullBlocksMap[nestedId];\n      if (nestedBlockData) {\n        results.push(\n          ...checkBlocksCore({ [nestedId]: nestedBlockData }, pageId, fullBlocksMap)\n        );\n      }\n    });\n\n    // 4. nested via slots\n    const slots = comp?.slots || {};\n    Object.values(slots).forEach((slotData) => {\n      const slotBlockId = slotData?.blockId;\n      if (slotBlockId) {\n        const slotBlockData = fullBlocksMap[slotBlockId];\n        if (slotBlockData) {\n          results.push(\n            ...checkBlocksCore({ [slotBlockId]: slotBlockData }, pageId, fullBlocksMap)\n          );\n        }\n      }\n    });\n  });\n\n  return results;\n};\n\n// --- Process the Single Page ---\nconst pageId = page?.id || \"\";\nconst schema = page?.page_schema || {};\nconst blocks = schema?.blocks || {}; // full map\n\n// Run\nconst pageResults = checkBlocks(blocks, pageId);\noutputList.push(...pageResults);\n\n// --- Filter & Output ---\nconst failedBlocks = outputList.filter((r) => r.status === \"Fail\");\nlet finalOutput = {};\n\nif (failedBlocks.length > 0) {\n  finalOutput = {\n    pageID: pageId,\n    status: \"failed\",\n    blocksIDs: failedBlocks.map((b) => b.componentId),\n  };\n}\n\n// return result\nreturn finalOutput;\n",
				"isAsync":false,
				"parameters":{
					"pages":{
						"source":"{{ n_PQRFu.outputs.page }}",
						"ua:type":"mappedArray",
						"items":{
							"page_schema":"{{ n_PQRFu.outputs.page[0].page_schema }}",
							"id":"{{ n_PQRFu.outputs.page[0].id }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"CHECK_1",
			"title":"Execute Javascript",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":791,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_z6eK1-1",
			"id":"n_txMg9",
			"index":3,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ n_h8DaG.outputs.result.outputList }})",
						"filter":{
							"operator":"EQUAL",
							"value":"0"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1089,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_txMg9@_z6eK1-1@y",
			"id":"n_nQDPb",
			"index":4,
			"inputs":{
				"result":{
					"entityType":"{{ n_PQRFu.outputs.page[0].entityType }}",
					"entityId":"{{ n_PQRFu.outputs.page[0].id }}",
					"checkId":"{{ n_PQRFu.outputs.checks[0].checkId }}",
					"status":"successful",
					"entities":{
						"blockIds":{
							"source":"{{ n_h8DaG.outputs.result.outputList[0].blockId }}",
							"ua:type":"mappedArray",
							"items":"{{ n_h8DaG.outputs.result.outputList[0].blockId[0] }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1089,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_txMg9@_z6eK1-1@n",
			"id":"_z1p2M",
			"index":5,
			"inputs":{
				"result":{
					"entityType":"{{ n_PQRFu.outputs.page[0].entityType }}",
					"entityId":"{{ n_h8DaG.outputs.result.outputList[0].pageId }}",
					"checkId":"{{ n_PQRFu.outputs.checks[0].checkId }}",
					"status":"{{ n_h8DaG.outputs.result.outputList[0].status }}",
					"entities":{
						"blockIds":{
							"source":"{{ n_h8DaG.outputs.result.outputList[0].blockId }}",
							"ua:type":"mappedArray",
							"items":"{{ n_h8DaG.outputs.result.outputList[0].blockId[0] }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":115477,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":13
}