{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1761384803458,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1761681886381,
		"deployedBy":23949,
		"deployedDefinitionId":"690121de2a483b60c43bebb0",
		"status":"DEPLOYED",
		"version":38,
		"workflowVersion":120
	},
	"edges":[
		{
			"fromNodeId":"n_1ceQS",
			"priority":0,
			"skip":false,
			"toNodeId":"n_BJWbh",
			"type":"next"
		},
		{
			"fromNodeId":"n_BJWbh",
			"priority":0,
			"skip":false,
			"toNodeId":"n_25xfN",
			"type":"next"
		},
		{
			"fromNodeId":"n_25xfN",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"n_25xfN@1",
			"type":"branch"
		},
		{
			"fromNodeId":"n_25xfN@1",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nJ4Q8",
			"type":"next"
		},
		{
			"fromNodeId":"n_nJ4Q8",
			"priority":0,
			"skip":false,
			"toNodeId":"n_zpFkD",
			"type":"next"
		},
		{
			"fromNodeId":"n_zpFkD",
			"priority":0,
			"skip":false,
			"toNodeId":"n_sD6lJ",
			"type":"loop"
		},
		{
			"fromNodeId":"n_sD6lJ",
			"priority":0,
			"skip":false,
			"toNodeId":"_wPsWL",
			"type":"next"
		},
		{
			"fromNodeId":"_wPsWL",
			"priority":0,
			"skip":false,
			"toNodeId":"_WeDSA",
			"type":"loop"
		},
		{
			"fromNodeId":"_WeDSA",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_wPsWL",
			"type":"next"
		},
		{
			"fromNodeId":"_wPsWL",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_zpFkD",
			"type":"next"
		},
		{
			"fromNodeId":"n_25xfN",
			"name":"2",
			"priority":0,
			"skip":false,
			"toNodeId":"n_25xfN@2",
			"type":"branch"
		},
		{
			"fromNodeId":"n_25xfN@2",
			"priority":0,
			"skip":false,
			"toNodeId":"n_oh9u9",
			"type":"next"
		},
		{
			"fromNodeId":"n_oh9u9",
			"priority":0,
			"skip":false,
			"toNodeId":"n_HKPw8",
			"type":"next"
		},
		{
			"fromNodeId":"n_HKPw8",
			"priority":0,
			"skip":false,
			"toNodeId":"n_RvCMd",
			"type":"next"
		},
		{
			"fromNodeId":"n_RvCMd",
			"priority":0,
			"skip":false,
			"toNodeId":"n_oC2OU",
			"type":"next"
		},
		{
			"fromNodeId":"n_oC2OU",
			"priority":0,
			"skip":false,
			"toNodeId":"n_7RZds",
			"type":"next"
		},
		{
			"fromNodeId":"n_7RZds",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_aqVAB",
			"type":"if"
		},
		{
			"fromNodeId":"n_aqVAB",
			"priority":0,
			"skip":false,
			"toNodeId":"n_WeSaM",
			"type":"next"
		},
		{
			"fromNodeId":"n_7RZds",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_kmkER",
			"type":"next"
		},
		{
			"fromNodeId":"n_kmkER",
			"priority":0,
			"skip":false,
			"toNodeId":"_2DfTp",
			"type":"next"
		},
		{
			"fromNodeId":"_2DfTp",
			"priority":0,
			"skip":false,
			"toNodeId":"_hOc8A",
			"type":"next"
		},
		{
			"fromNodeId":"_hOc8A",
			"priority":0,
			"skip":false,
			"toNodeId":"_RTHV4",
			"type":"next"
		},
		{
			"fromNodeId":"n_zpFkD",
			"priority":0,
			"skip":false,
			"toNodeId":"_e0xcO",
			"type":"next"
		},
		{
			"fromNodeId":"n_WeSaM",
			"priority":0,
			"skip":false,
			"toNodeId":"_e0xcO",
			"type":"next"
		},
		{
			"fromNodeId":"_RTHV4",
			"priority":0,
			"skip":false,
			"toNodeId":"_e0xcO",
			"type":"next"
		},
		{
			"fromNodeId":"n_25xfN",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"_e0xcO",
			"type":"branch"
		},
		{
			"fromNodeId":"_e0xcO",
			"priority":0,
			"skip":false,
			"toNodeId":"n_XUOp8",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			
		]
	},
	"id":"68fc996304853878c428ae4b",
	"lastModifiedBy":27,
	"lcName":"best practices | fetch issues",
	"modifiedTime":1761821808032,
	"name":"Best Practices | Fetch Issues",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"callables",
				"resourceVersion":1060,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_vMiRK-1",
			"id":"n_1ceQS",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"results":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"checkId":{
										"type":"string",
										"title":"checkId"
									},
									"status":{
										"type":"string",
										"title":"status"
									},
									"entityId":{
										"type":"string",
										"title":"entityId"
									},
									"checkTitle":{
										"type":"string",
										"title":"checkTitle"
									},
									"checkDescription":{
										"type":"string",
										"title":"checkDescription"
									},
									"checkImpact":{
										"type":"string",
										"title":"checkImpact"
									},
									"checkCategory":{
										"type":"string",
										"title":"checkCategory"
									},
									"checkHeader":{
										"type":"string",
										"title":"Check Header"
									},
									"impactedEntityId":{
										"type":"string",
										"title":"impactedEntityId"
									},
									"impactedEntityName":{
										"type":"string",
										"title":"impactedEntityName"
									},
									"impactedEntityType":{
										"type":"string",
										"title":"impactedEntityType"
									},
									"impactedEntityIconKey":{
										"type":"string",
										"title":"Impacted Entity Icon Key"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"results"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"entityId":{
							"type":"string",
							"title":"entityId"
						},
						"entityType":{
							"type":"string",
							"title":"entityType"
						},
						"status":{
							"type":"string",
							"title":"status"
						},
						"category":{
							"type":"string",
							"title":"category"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":1066,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_vMiRK-1",
			"id":"n_BJWbh",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"checkCategory":{
											"type":"string",
											"title":"checkCategory"
										},
										"checkDescription":{
											"type":"string",
											"title":"checkDescription"
										},
										"checkHeader":{
											"type":"string",
											"title":"checkHeader"
										},
										"checkId":{
											"type":"string",
											"title":"checkId"
										},
										"checkImpact":{
											"type":"string",
											"title":"checkImpact"
										},
										"checkTitle":{
											"type":"string",
											"title":"checkTitle"
										},
										"entityId":{
											"type":"string",
											"title":"entityId"
										},
										"status":{
											"type":"string",
											"title":"status"
										},
										"impactedEntityId":{
											"type":"string",
											"title":"impactedEntityId"
										},
										"impactedEntityName":{
											"type":"string",
											"title":"impactedEntityName"
										},
										"impactedEntityType":{
											"type":"string",
											"title":"impactedEntityType"
										},
										"impactedEntityIconKey":{
											"type":"string",
											"title":"Impacted Entity Icon Key"
										}
									},
									"additionalProperties":false,
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"results",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"results",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"checkCategory":{
										"type":"string",
										"title":"checkCategory"
									},
									"checkDescription":{
										"type":"string",
										"title":"checkDescription"
									},
									"checkHeader":{
										"type":"string",
										"title":"checkHeader"
									},
									"checkId":{
										"type":"string",
										"title":"checkId"
									},
									"checkImpact":{
										"type":"string",
										"title":"checkImpact"
									},
									"checkTitle":{
										"type":"string",
										"title":"checkTitle"
									},
									"entityId":{
										"type":"string",
										"title":"entityId"
									},
									"status":{
										"type":"string",
										"title":"status"
									},
									"impactedEntityId":{
										"type":"string",
										"title":"impactedEntityId"
									},
									"impactedEntityName":{
										"type":"string",
										"title":"impactedEntityName"
									},
									"impactedEntityType":{
										"type":"string",
										"title":"impactedEntityType"
									},
									"impactedEntityIconKey":{
										"type":"string",
										"title":"Impacted Entity Icon Key"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_vMiRK-1",
			"id":"n_25xfN",
			"index":3,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"name":"Interface Flow",
							"conditions":{
								"filters":[
									{
										"property":"{{ n_1ceQS.outputs.entityType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"e_interface"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"2",
						"inputs":{
							"name":"Page Flow",
							"conditions":{
								"filters":[
									{
										"property":"{{ n_1ceQS.outputs.entityType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"e_component"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_25xfN@_vMiRK-1@1",
			"id":"n_25xfN@1",
			"index":4,
			"inputs":{
				"name":"Interface Flow",
				"conditions":{
					"filters":[
						{
							"property":"{{ n_1ceQS.outputs.entityType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"e_interface"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":4581,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_25xfN@_vMiRK-1@1",
			"id":"n_nJ4Q8",
			"index":5,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_interfaceId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_1ceQS.outputs.entityId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_component",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"MULTIPLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":865,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_25xfN@_vMiRK-1@1",
			"id":"n_zpFkD",
			"index":6,
			"inputs":{
				"repeatMode":"BATCH",
				"listSource":"{{ n_nJ4Q8.outputs.objects }}",
				"captureIterations":false,
				"batchSize":10
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":928,
				"resourceName":"callables_call_automation_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_zpFkD@n_25xfN@_vMiRK-1@1@l",
			"id":"n_sD6lJ",
			"index":7,
			"inputs":{
				"automationId":"68fc996304853878c428ae4b",
				"runtimeConnections":{},
				"synchronous":true,
				"distributeWorkflowLoad":false,
				"parametersList":{
					"source":"{{ n_zpFkD.outputs.item }}",
					"ua:type":"mappedArray",
					"items":{
						"entityId":"{{ n_zpFkD.outputs.item[0].id }}",
						"entityType":"{{ n_zpFkD.outputs.item[0].entityType }}",
						"version":"{{ n_zpFkD.outputs.item[0].version }}",
						"status":"{{ n_1ceQS.outputs.status }}",
						"category":"{{ n_1ceQS.outputs.category }}"
					}
				},
				"version":"-1"
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":865,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_zpFkD@n_25xfN@_vMiRK-1@1@l",
			"id":"_wPsWL",
			"index":8,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_sD6lJ.outputs.result }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.checkCategory",
					"root.itemsToAdd.items.checkDescription",
					"root.itemsToAdd.items.checkHeader",
					"root.itemsToAdd.items.checkId",
					"root.itemsToAdd.items.checkImpact",
					"root.itemsToAdd.items.checkTitle",
					"root.itemsToAdd.items.entityId",
					"root.itemsToAdd.items.status",
					"root.itemsToAdd.items.impactedEntityId",
					"root.itemsToAdd.items.impactedEntityName",
					"root.itemsToAdd.items.impactedEntityType",
					"root.itemsToAdd.items.entityId",
					"root.itemsToAdd.items.status"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":990,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_wPsWL@n_zpFkD@n_25xfN@_vMiRK-1@1@l@l",
			"id":"_WeDSA",
			"index":9,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"source":"{{ _wPsWL.outputs.item.results }}",
					"items":{
						"checkCategory":"{{ _wPsWL.outputs.item.results[0].checkCategory }}",
						"checkDescription":"{{ _wPsWL.outputs.item.results[0].checkDescription }}",
						"checkHeader":"{{ _wPsWL.outputs.item.results[0].checkHeader }}",
						"checkId":"{{ _wPsWL.outputs.item.results[0].checkId }}",
						"checkImpact":"{{ _wPsWL.outputs.item.results[0].checkImpact }}",
						"checkTitle":"{{ _wPsWL.outputs.item.results[0].checkTitle }}",
						"entityId":"{{ _wPsWL.outputs.item.results[0].entityId }}",
						"status":"{{ _wPsWL.outputs.item.results[0].status }}",
						"impactedEntityId":"{{ _wPsWL.outputs.item.results[0].impactedEntityId }}",
						"impactedEntityName":"{{ _wPsWL.outputs.item.results[0].impactedEntityName }}",
						"impactedEntityType":"{{ _wPsWL.outputs.item.results[0].impactedEntityType }}"
					}
				},
				"listName":"{{ n_BJWbh.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":0,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_25xfN@_vMiRK-1@2",
			"id":"n_25xfN@2",
			"index":10,
			"inputs":{
				"name":"Page Flow",
				"conditions":{
					"filters":[
						{
							"property":"{{ n_1ceQS.outputs.entityType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"e_component"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":4581,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_25xfN@_vMiRK-1@2",
			"id":"n_oh9u9",
			"index":11,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"id",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_1ceQS.outputs.entityId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_component",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Fetch Page",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":4583,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_25xfN@_vMiRK-1@2",
			"id":"n_HKPw8",
			"index":12,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_interfacePageId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_oh9u9.outputs.id }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_data_source",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"MULTIPLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Fetch Page DataSources",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":4581,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_25xfN@_vMiRK-1@2",
			"id":"n_RvCMd",
			"index":13,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_entityId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_oh9u9.outputs.id }}"
							}
						},
						{
							"property":"properties_entityType",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_oh9u9.outputs.entityType }}"
							}
						},
						{
							"property":"properties_entityVersion",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_oh9u9.outputs.version }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"nocode_reports",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":100,
					"offset":0
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Fetch Nocode Reports",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":4581,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_25xfN@_vMiRK-1@2",
			"id":"n_oC2OU",
			"index":14,
			"inputs":{
				"object_type":"best_practices_checks_master",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":50000,
					"offset":0
				},
				"numberOfRecordsToFetch":"MULTIPLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Fetch BP checks",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":791,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_25xfN@_vMiRK-1@2",
			"id":"n_7RZds",
			"index":15,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ n_RvCMd.outputs.properties.checks }})",
						"filter":{
							"operator":"GT",
							"value":"0"
						}
					},
					{
						"property":"{{ __ENV__.outputs.GLOBAL_CHECK_REPORT_VERSION }}",
						"filter":{
							"operator":"EQUAL",
							"value":"{{ n_RvCMd.outputs.properties.globalReportVersion }}"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				},
				"visibleOptionalFields":[
					"root.parameters.reportArr.items",
					"root.parameters.masterArr.items",
					"root.parameters.dataSources.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":1025,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_7RZds@n_25xfN@_vMiRK-1@2@y",
			"id":"n_aqVAB",
			"index":16,
			"inputs":{
				"output":{
					"type":"object",
					"ua:__linkedVariable__":"n_BJWbh.outputs",
					"properties":{
						"items":{
							"type":"array",
							"title":"results",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"checkCategory":{
										"type":"string",
										"title":"checkCategory"
									},
									"checkDescription":{
										"type":"string",
										"title":"checkDescription"
									},
									"checkHeader":{
										"type":"string",
										"title":"checkHeader"
									},
									"checkId":{
										"type":"string",
										"title":"checkId"
									},
									"checkImpact":{
										"type":"string",
										"title":"checkImpact"
									},
									"checkTitle":{
										"type":"string",
										"title":"checkTitle"
									},
									"entityId":{
										"type":"string",
										"title":"entityId"
									},
									"status":{
										"type":"string",
										"title":"status"
									},
									"impactedEntityId":{
										"type":"string",
										"title":"impactedEntityId"
									},
									"impactedEntityName":{
										"type":"string",
										"title":"impactedEntityName"
									},
									"impactedEntityType":{
										"type":"string",
										"title":"impactedEntityType"
									},
									"impactedEntityIconKey":{
										"type":"string",
										"title":"Impacted Entity Icon Key"
									}
								},
								"required":[
									"impactedEntityIconKey"
								]
							}
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"reportArr":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"reportArr"
						},
						"masterArr":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"masterArr"
						},
						"status":{
							"type":"string",
							"title":"status"
						},
						"category":{
							"type":"string",
							"title":"category"
						},
						"page":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"page"
						},
						"dataSources":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"dataSources"
						}
					}
				},
				"code":"def joinAndFilter(reportArr, masterArr, page, dataSources, String status = null, String category = null) {\n    // 1) Normalize filters\n    def effectiveStatus   = (status   == \"null\" || status   == \"All\") ? null : status\n    def effectiveCategory = (category == \"null\" || category == \"All\") ? null : category\n\n    // 2) Build lookup maps safely\n    def masterById       = (masterArr     ?: []).findAll { it != null && it.id != null }.collectEntries { [ (it.id): it ] }\n    def dataSourcesById  = (dataSources   ?: []).findAll { it != null && it.id != null }.collectEntries { [ (it.id): it ] }\n    def pageBlocks       = page?.blocks         ?: [:]\n    def pageVariables    = page?.pageVariables  ?: [:]\n    def pageFunctions    = page?.pageFunctions  ?: [:]\n\n    // 3) Filter + explode reports to rows\n    def results = (reportArr ?: [])\n        .findAll { rep ->\n            def m = masterById[ rep?.check_id ]\n            def okStatus   = (effectiveStatus   == null) || rep?.status == effectiveStatus\n            def okCategory = (effectiveCategory == null) || m?.properties?.category == effectiveCategory\n            okStatus && okCategory\n        }\n        .collectMany { rep ->\n            def m = masterById[ rep?.check_id ]\n            def baseInfo = [\n                checkId          : rep?.check_id,\n                status           : rep?.status,\n                checkTitle       : m?.properties?.title,\n                checkDescription : m?.properties?.description,\n                checkImpact      : m?.properties?.impact,\n                checkCategory    : m?.properties?.category,\n                checkHeader      : m?.properties?.main_header\n            ]\n\n            // Parse targets array and group by type\n            def targets = rep?.targets ?: []\n            \n            def blockIds      = targets.findAll { it?.targetType == 'block' }      .collect { it?.targetId }\n            def dataSourceIds = targets.findAll { it?.targetType == 'dataSource' } .collect { it?.targetId }\n            def variableIds   = targets.findAll { it?.targetType == 'variable' }   .collect { it?.targetId }\n            def functionIds   = targets.findAll { it?.targetType == 'function' }   .collect { it?.targetId }\n            def pageIds       = targets.findAll { it?.targetType == 'page' }       .collect { it?.targetId }\n\n            // Create results for each entity type\n            def blockResults = blockIds.collect { id ->\n                def b = pageBlocks[id]\n                baseInfo + [\n                    impactedEntityId   : id,\n                    impactedEntityName : b?.displayName,\n                    impactedEntityType : 'block'\n                ]\n            }\n\n            def dataSourceResults = dataSourceIds.collect { id ->\n                def d = dataSourcesById[id]\n                baseInfo + [\n                    impactedEntityId   : id,\n                    impactedEntityName : d?.properties?.name,\n                    impactedEntityType : 'dataSource'\n                ]\n            }\n\n            def variableResults = variableIds.collect { id ->\n                def v = pageVariables[id]\n                baseInfo + [\n                    impactedEntityId   : id,\n                    impactedEntityName : v?.name,\n                    impactedEntityType : 'variable'\n                ]\n            }\n\n            def functionResults = functionIds.collect { id ->\n                def f = pageFunctions[id]\n                baseInfo + [\n                    impactedEntityId   : id,\n                    impactedEntityName : f?.name,\n                    impactedEntityType : 'function'\n                ]\n            }\n\n            def pageResults = pageIds.collect { id ->\n                baseInfo + [\n                    impactedEntityId   : id,\n                    impactedEntityName : page?.name ?: id,\n                    impactedEntityType : 'page'\n                ]\n            }\n\n            // Combine all results\n            def combined = blockResults + dataSourceResults + variableResults + functionResults + pageResults\n            \n            // If no targets, return a row with nulls\n            combined.isEmpty()\n                ? [ baseInfo + [impactedEntityId:null, impactedEntityName:null, impactedEntityType:null] ]\n                : combined\n        }\n\n    [ items: results ]\n}\n\n// Check if 'dataSources' variable exists before calling the function\ndef safeDataSources = binding.hasVariable('dataSources') ? dataSources : []\n\n// Call the function\ndef output = joinAndFilter(reportArr, masterArr, page, safeDataSources, status, category)",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"status":"{{ n_1ceQS.outputs.status }}",
					"category":"{{ n_1ceQS.outputs.category }}",
					"page":"{{ n_oh9u9.outputs.properties }}",
					"reportArr":{
						"source":"{{ n_RvCMd.outputs.properties.checks }}",
						"ua:type":"mappedArray",
						"items":"{{ n_RvCMd.outputs.properties.checks[0] }}"
					},
					"masterArr":{
						"source":"{{ n_oC2OU.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ n_oC2OU.outputs.objects[0] }}"
					},
					"dataSources":{
						"source":"{{ n_HKPw8.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ n_HKPw8.outputs.objects[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.checkCategory",
					"root.itemsToAdd.items.checkDescription",
					"root.itemsToAdd.items.checkHeader",
					"root.itemsToAdd.items.checkId",
					"root.itemsToAdd.items.checkImpact",
					"root.itemsToAdd.items.checkTitle",
					"root.itemsToAdd.items.entityId",
					"root.itemsToAdd.items.status",
					"root.itemsToAdd.items.impactedEntityId",
					"root.itemsToAdd.items.impactedEntityName",
					"root.itemsToAdd.items.impactedEntityType"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":986,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_7RZds@n_25xfN@_vMiRK-1@2@y",
			"id":"n_WeSaM",
			"index":17,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"source":"{{ n_aqVAB.outputs.result.items }}",
					"items":{
						"checkCategory":"{{ n_aqVAB.outputs.result.items[0].checkCategory }}",
						"checkDescription":"{{ n_aqVAB.outputs.result.items[0].checkDescription }}",
						"checkHeader":"{{ n_aqVAB.outputs.result.items[0].checkHeader }}",
						"checkId":"{{ n_aqVAB.outputs.result.items[0].checkId }}",
						"checkImpact":"{{ n_aqVAB.outputs.result.items[0].checkImpact }}",
						"checkTitle":"{{ n_aqVAB.outputs.result.items[0].checkTitle }}",
						"entityId":"{{ n_oh9u9.outputs.id }}",
						"status":"{{ n_aqVAB.outputs.result.items[0].status }}",
						"impactedEntityId":"{{ n_aqVAB.outputs.result.items[0].impactedEntityId }}",
						"impactedEntityName":"{{ n_aqVAB.outputs.result.items[0].impactedEntityName }}",
						"impactedEntityType":"{{ n_aqVAB.outputs.result.items[0].impactedEntityType }}",
						"impactedEntityIconKey":"{{ n_aqVAB.outputs.result.items[0].impactedEntityIconKey }}"
					}
				},
				"listName":"{{ n_BJWbh.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1122,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_7RZds@n_25xfN@_vMiRK-1@2@n",
			"id":"n_kmkER",
			"index":18,
			"inputs":{
				"automationId":"68fd199b9e1ba9260c2c19b9",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"pageId":"{{ n_oh9u9.outputs.id }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":4581,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_7RZds@n_25xfN@_vMiRK-1@2@n",
			"id":"_2DfTp",
			"index":19,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_entityId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_oh9u9.outputs.id }}"
							}
						},
						{
							"property":"properties_entityType",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_oh9u9.outputs.entityType }}"
							}
						},
						{
							"property":"properties_entityVersion",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_oh9u9.outputs.version }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"nocode_reports",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":100,
					"offset":0
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Fetch Nocode Reports",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				},
				"visibleOptionalFields":[
					"root.parameters.reportArr.items",
					"root.parameters.masterArr.items",
					"root.parameters.dataSources.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":1025,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_7RZds@n_25xfN@_vMiRK-1@2@n",
			"id":"_hOc8A",
			"index":20,
			"inputs":{
				"output":{
					"type":"object",
					"ua:__linkedVariable__":"n_BJWbh.outputs",
					"properties":{
						"items":{
							"type":"array",
							"title":"results",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"checkCategory":{
										"type":"string",
										"title":"checkCategory"
									},
									"checkDescription":{
										"type":"string",
										"title":"checkDescription"
									},
									"checkHeader":{
										"type":"string",
										"title":"checkHeader"
									},
									"checkId":{
										"type":"string",
										"title":"checkId"
									},
									"checkImpact":{
										"type":"string",
										"title":"checkImpact"
									},
									"checkTitle":{
										"type":"string",
										"title":"checkTitle"
									},
									"entityId":{
										"type":"string",
										"title":"entityId"
									},
									"status":{
										"type":"string",
										"title":"status"
									},
									"impactedEntityId":{
										"type":"string",
										"title":"impactedEntityId"
									},
									"impactedEntityName":{
										"type":"string",
										"title":"impactedEntityName"
									},
									"impactedEntityType":{
										"type":"string",
										"title":"impactedEntityType"
									},
									"impactedEntityIconKey":{
										"type":"string",
										"title":"Impacted Entity Icon Key"
									}
								},
								"required":[
									"impactedEntityIconKey"
								]
							}
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"reportArr":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"reportArr"
						},
						"masterArr":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"masterArr"
						},
						"status":{
							"type":"string",
							"title":"status"
						},
						"category":{
							"type":"string",
							"title":"category"
						},
						"page":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"page"
						},
						"dataSources":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"dataSources"
						}
					}
				},
				"code":"def joinAndFilter(reportArr, masterArr, page, dataSources, String status = null, String category = null) {\n    // 1) Normalize filters\n    def effectiveStatus   = (status   == \"null\" || status   == \"All\") ? null : status\n    def effectiveCategory = (category == \"null\" || category == \"All\") ? null : category\n\n    // 2) Build lookup maps safely\n    def masterById       = (masterArr     ?: []).findAll { it != null && it.id != null }.collectEntries { [ (it.id): it ] }\n    def dataSourcesById  = (dataSources   ?: []).findAll { it != null && it.id != null }.collectEntries { [ (it.id): it ] }\n    def pageBlocks       = page?.blocks         ?: [:]\n    def pageVariables    = page?.pageVariables  ?: [:]\n    def pageFunctions    = page?.pageFunctions  ?: [:]\n\n    // 3) Filter + explode reports to rows\n    def results = (reportArr ?: [])\n        .findAll { rep ->\n            def m = masterById[ rep?.check_id ]\n            def okStatus   = (effectiveStatus   == null) || rep?.status == effectiveStatus\n            def okCategory = (effectiveCategory == null) || m?.properties?.category == effectiveCategory\n            okStatus && okCategory\n        }\n        .collectMany { rep ->\n            def m = masterById[ rep?.check_id ]\n            def baseInfo = [\n                checkId          : rep?.check_id,\n                status           : rep?.status,\n                checkTitle       : m?.properties?.title,\n                checkDescription : m?.properties?.description,\n                checkImpact      : m?.properties?.impact,\n                checkCategory    : m?.properties?.category,\n                checkHeader      : m?.properties?.main_header\n            ]\n\n            // Parse targets array and group by type\n            def targets = rep?.targets ?: []\n            \n            def blockIds      = targets.findAll { it?.targetType == 'block' }      .collect { it?.targetId }\n            def dataSourceIds = targets.findAll { it?.targetType == 'dataSource' } .collect { it?.targetId }\n            def variableIds   = targets.findAll { it?.targetType == 'variable' }   .collect { it?.targetId }\n            def functionIds   = targets.findAll { it?.targetType == 'function' }   .collect { it?.targetId }\n            def pageIds       = targets.findAll { it?.targetType == 'page' }       .collect { it?.targetId }\n\n            // Create results for each entity type\n            def blockResults = blockIds.collect { id ->\n                def b = pageBlocks[id]\n                baseInfo + [\n                    impactedEntityId   : id,\n                    impactedEntityName : b?.displayName,\n                    impactedEntityType : 'block'\n                ]\n            }\n\n            def dataSourceResults = dataSourceIds.collect { id ->\n                def d = dataSourcesById[id]\n                baseInfo + [\n                    impactedEntityId   : id,\n                    impactedEntityName : d?.properties?.name,\n                    impactedEntityType : 'dataSource'\n                ]\n            }\n\n            def variableResults = variableIds.collect { id ->\n                def v = pageVariables[id]\n                baseInfo + [\n                    impactedEntityId   : id,\n                    impactedEntityName : v?.name,\n                    impactedEntityType : 'variable'\n                ]\n            }\n\n            def functionResults = functionIds.collect { id ->\n                def f = pageFunctions[id]\n                baseInfo + [\n                    impactedEntityId   : id,\n                    impactedEntityName : f?.name,\n                    impactedEntityType : 'function'\n                ]\n            }\n\n            def pageResults = pageIds.collect { id ->\n                baseInfo + [\n                    impactedEntityId   : id,\n                    impactedEntityName : page?.name ?: id,\n                    impactedEntityType : 'page'\n                ]\n            }\n\n            // Combine all results\n            def combined = blockResults + dataSourceResults + variableResults + functionResults + pageResults\n            \n            // If no targets, return a row with nulls\n            combined.isEmpty()\n                ? [ baseInfo + [impactedEntityId:null, impactedEntityName:null, impactedEntityType:null] ]\n                : combined\n        }\n\n    [ items: results ]\n}\n\n// Check if 'dataSources' variable exists before calling the function\ndef safeDataSources = binding.hasVariable('dataSources') ? dataSources : []\n\n// Call the function\ndef output = joinAndFilter(reportArr, masterArr, page, safeDataSources, status, category)",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"status":"{{ n_1ceQS.outputs.status }}",
					"category":"{{ n_1ceQS.outputs.category }}",
					"page":"{{ n_oh9u9.outputs.properties }}",
					"reportArr":{
						"source":"{{ _2DfTp.outputs.properties.checks }}",
						"ua:type":"mappedArray",
						"items":"{{ _2DfTp.outputs.properties.checks[0] }}"
					},
					"masterArr":{
						"source":"{{ n_oC2OU.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ n_oC2OU.outputs.objects[0] }}"
					},
					"dataSources":{
						"source":"{{ n_HKPw8.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ n_HKPw8.outputs.objects[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.checkCategory",
					"root.itemsToAdd.items.checkDescription",
					"root.itemsToAdd.items.checkHeader",
					"root.itemsToAdd.items.checkId",
					"root.itemsToAdd.items.checkImpact",
					"root.itemsToAdd.items.checkTitle",
					"root.itemsToAdd.items.entityId",
					"root.itemsToAdd.items.status",
					"root.itemsToAdd.items.impactedEntityId",
					"root.itemsToAdd.items.impactedEntityName",
					"root.itemsToAdd.items.impactedEntityType"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":986,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_7RZds@n_25xfN@_vMiRK-1@2@n",
			"id":"_RTHV4",
			"index":21,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"source":"{{ _hOc8A.outputs.result.items }}",
					"items":{
						"checkCategory":"{{ _hOc8A.outputs.result.items[0].checkCategory }}",
						"checkDescription":"{{ _hOc8A.outputs.result.items[0].checkDescription }}",
						"checkHeader":"{{ _hOc8A.outputs.result.items[0].checkHeader }}",
						"checkId":"{{ _hOc8A.outputs.result.items[0].checkId }}",
						"checkImpact":"{{ _hOc8A.outputs.result.items[0].checkImpact }}",
						"checkTitle":"{{ _hOc8A.outputs.result.items[0].checkTitle }}",
						"entityId":"{{ n_oh9u9.outputs.id }}",
						"status":"{{ _hOc8A.outputs.result.items[0].status }}",
						"impactedEntityId":"{{ _hOc8A.outputs.result.items[0].impactedEntityId }}",
						"impactedEntityName":"{{ _hOc8A.outputs.result.items[0].impactedEntityName }}",
						"impactedEntityType":"{{ _hOc8A.outputs.result.items[0].impactedEntityType }}",
						"impactedEntityIconKey":"{{ _hOc8A.outputs.result.items[0].impactedEntityIconKey }}"
					}
				},
				"listName":"{{ n_BJWbh.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				},
				"visibleOptionalFields":[
					"root.parameters.items.items.checkCategory",
					"root.parameters.items.items.checkDescription",
					"root.parameters.items.items.checkHeader",
					"root.parameters.items.items.checkId",
					"root.parameters.items.items.checkImpact",
					"root.parameters.items.items.checkTitle",
					"root.parameters.items.items.entityId",
					"root.parameters.items.items.status",
					"root.parameters.items.items.impactedEntityId",
					"root.parameters.items.items.impactedEntityName",
					"root.parameters.items.items.impactedEntityType",
					"root.parameters.items.items.impactedEntityIconKey"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":1025,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_vMiRK-1",
			"id":"_e0xcO",
			"index":22,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"sortedResults":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"checkId":{
										"type":"string",
										"title":"checkId"
									},
									"status":{
										"type":"string",
										"title":"status"
									},
									"entityId":{
										"type":"string",
										"title":"entityId"
									},
									"checkTitle":{
										"type":"string",
										"title":"checkTitle"
									},
									"checkDescription":{
										"type":"string",
										"title":"checkDescription"
									},
									"checkImpact":{
										"type":"string",
										"title":"checkImpact"
									},
									"checkCategory":{
										"type":"string",
										"title":"checkCategory"
									},
									"checkHeader":{
										"type":"string",
										"title":"Check Header"
									},
									"impactedEntityId":{
										"type":"string",
										"title":"impactedEntityId"
									},
									"impactedEntityName":{
										"type":"string",
										"title":"impactedEntityName"
									},
									"impactedEntityType":{
										"type":"string",
										"title":"impactedEntityType"
									},
									"impactedEntityIconKey":{
										"type":"string",
										"title":"Impacted Entity Icon Key"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"sortedResults"
						}
					}
				},
				"input":{
					"type":"object",
					"ua:__linkedVariable__":"n_BJWbh.outputs",
					"properties":{
						"items":{
							"type":"array",
							"title":"results",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"checkCategory":{
										"type":"string",
										"title":"checkCategory"
									},
									"checkDescription":{
										"type":"string",
										"title":"checkDescription"
									},
									"checkHeader":{
										"type":"string",
										"title":"checkHeader"
									},
									"checkId":{
										"type":"string",
										"title":"checkId"
									},
									"checkImpact":{
										"type":"string",
										"title":"checkImpact"
									},
									"checkTitle":{
										"type":"string",
										"title":"checkTitle"
									},
									"entityId":{
										"type":"string",
										"title":"entityId"
									},
									"status":{
										"type":"string",
										"title":"status"
									},
									"impactedEntityId":{
										"type":"string",
										"title":"impactedEntityId"
									},
									"impactedEntityName":{
										"type":"string",
										"title":"impactedEntityName"
									},
									"impactedEntityType":{
										"type":"string",
										"title":"impactedEntityType"
									},
									"impactedEntityIconKey":{
										"type":"string",
										"title":"Impacted Entity Icon Key"
									}
								},
								"required":[]
							}
						}
					}
				},
				"code":"def sortResults(safeResults) {\n    if (!safeResults) return [ sortedResults: [] ]\n\n    // Define the sorting order for impact levels\n    def impactOrder = [critical: 1, medium: 2, low: 3]\n\n    // Sort by impact priority (default lowest if unknown)\n    def sortedResults = safeResults.sort { a, b ->\n        def aRank = impactOrder[a.checkImpact?.toLowerCase()] ?: 4\n        def bRank = impactOrder[b.checkImpact?.toLowerCase()] ?: 4\n        aRank <=> bRank\n    }\n\n    [ sortedResults: sortedResults ]\n}\n\ndef safeItems = binding.hasVariable('items') ? items : []\ndef output = sortResults(safeItems)",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"items":{
						"source":"{{ n_BJWbh.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"checkCategory":"{{ n_BJWbh.outputs.items[0].checkCategory }}",
							"checkDescription":"{{ n_BJWbh.outputs.items[0].checkDescription }}",
							"checkHeader":"{{ n_BJWbh.outputs.items[0].checkHeader }}",
							"checkId":"{{ n_BJWbh.outputs.items[0].checkId }}",
							"checkImpact":"{{ n_BJWbh.outputs.items[0].checkImpact }}",
							"checkTitle":"{{ n_BJWbh.outputs.items[0].checkTitle }}",
							"entityId":"{{ n_BJWbh.outputs.items[0].entityId }}",
							"status":"{{ n_BJWbh.outputs.items[0].status }}",
							"impactedEntityId":"{{ n_BJWbh.outputs.items[0].impactedEntityId }}",
							"impactedEntityName":"{{ n_BJWbh.outputs.items[0].impactedEntityName }}",
							"impactedEntityType":"{{ n_BJWbh.outputs.items[0].impactedEntityType }}",
							"impactedEntityIconKey":"{{ n_BJWbh.outputs.items[0].impactedEntityIconKey }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.result.results.source",
					"root.result.results.ua:type"
				]
			},
			"context":{
				"appName":"callables",
				"resourceVersion":1096,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_vMiRK-1",
			"id":"n_XUOp8",
			"index":23,
			"inputs":{
				"result":{
					"results":{
						"ua:type":"mappedArray",
						"source":"{{ _e0xcO.outputs.result.sortedResults }}",
						"items":{
							"checkId":"{{ _e0xcO.outputs.result.sortedResults[0].checkId }}",
							"status":"{{ _e0xcO.outputs.result.sortedResults[0].status }}",
							"entityId":"{{ _e0xcO.outputs.result.sortedResults[0].entityId }}",
							"checkTitle":"{{ _e0xcO.outputs.result.sortedResults[0].checkTitle }}",
							"checkDescription":"{{ _e0xcO.outputs.result.sortedResults[0].checkDescription }}",
							"checkImpact":"{{ _e0xcO.outputs.result.sortedResults[0].checkImpact }}",
							"checkCategory":"{{ _e0xcO.outputs.result.sortedResults[0].checkCategory }}",
							"checkHeader":"{{ _e0xcO.outputs.result.sortedResults[0].checkHeader }}",
							"impactedEntityId":"{{ _e0xcO.outputs.result.sortedResults[0].impactedEntityId }}",
							"impactedEntityName":"{{ _e0xcO.outputs.result.sortedResults[0].impactedEntityName }}",
							"impactedEntityType":"{{ _e0xcO.outputs.result.sortedResults[0].impactedEntityType }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":23949,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		"BPC"
	],
	"version":132
}