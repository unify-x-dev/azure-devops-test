{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1741603795998,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296252716,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfd3cd60dd816d7799066",
		"status":"DEPLOYED",
		"version":61,
		"workflowVersion":82
	},
	"edges":[
		{
			"fromNodeId":"1QWEb",
			"priority":0,
			"skip":false,
			"toNodeId":"53LAF",
			"type":"next"
		},
		{
			"fromNodeId":"53LAF",
			"priority":0,
			"skip":false,
			"toNodeId":"n_WI3dW",
			"type":"next"
		},
		{
			"fromNodeId":"n_WI3dW",
			"priority":0,
			"skip":false,
			"toNodeId":"CVd2b",
			"type":"next"
		},
		{
			"fromNodeId":"CVd2b",
			"priority":0,
			"skip":false,
			"toNodeId":"iNEXV",
			"type":"next"
		},
		{
			"fromNodeId":"iNEXV",
			"priority":0,
			"skip":false,
			"toNodeId":"dlP7F",
			"type":"next"
		},
		{
			"fromNodeId":"dlP7F",
			"priority":0,
			"skip":false,
			"toNodeId":"blwFr",
			"type":"next"
		},
		{
			"fromNodeId":"blwFr",
			"priority":0,
			"skip":false,
			"toNodeId":"XEurK",
			"type":"next"
		},
		{
			"fromNodeId":"XEurK",
			"priority":0,
			"skip":false,
			"toNodeId":"B9QoO",
			"type":"loop"
		},
		{
			"fromNodeId":"B9QoO",
			"priority":0,
			"skip":false,
			"toNodeId":"9HGH7",
			"type":"next"
		},
		{
			"fromNodeId":"9HGH7",
			"priority":0,
			"skip":false,
			"toNodeId":"umjeU",
			"type":"next"
		},
		{
			"fromNodeId":"umjeU",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"XEurK",
			"type":"next"
		},
		{
			"fromNodeId":"XEurK",
			"priority":0,
			"skip":false,
			"toNodeId":"GpwdU",
			"type":"next"
		},
		{
			"fromNodeId":"GpwdU",
			"priority":0,
			"skip":false,
			"toNodeId":"_RPm7m",
			"type":"next"
		},
		{
			"fromNodeId":"_RPm7m",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"bLByu",
			"type":"if"
		},
		{
			"fromNodeId":"bLByu",
			"priority":0,
			"skip":false,
			"toNodeId":"_DiOSl",
			"type":"next"
		},
		{
			"fromNodeId":"_RPm7m",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_DiOSl",
			"type":"next"
		},
		{
			"fromNodeId":"_DiOSl",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_ZwPKS",
			"type":"if"
		},
		{
			"fromNodeId":"_ZwPKS",
			"priority":0,
			"skip":false,
			"toNodeId":"_VOjtS",
			"type":"next"
		},
		{
			"fromNodeId":"_DiOSl",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_VOjtS",
			"type":"next"
		},
		{
			"fromNodeId":"_VOjtS",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_s2zTx",
			"type":"if"
		},
		{
			"fromNodeId":"_s2zTx",
			"priority":0,
			"skip":false,
			"toNodeId":"n_kf9OP",
			"type":"next"
		},
		{
			"fromNodeId":"_VOjtS",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_kf9OP",
			"type":"next"
		},
		{
			"fromNodeId":"n_kf9OP",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"JDjJY",
			"type":"if"
		},
		{
			"fromNodeId":"JDjJY",
			"priority":0,
			"skip":false,
			"toNodeId":"ycolC",
			"type":"next"
		},
		{
			"fromNodeId":"n_kf9OP",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"ycolC",
			"type":"next"
		},
		{
			"fromNodeId":"ycolC",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"fGbtb",
			"type":"if"
		},
		{
			"fromNodeId":"fGbtb",
			"priority":0,
			"skip":false,
			"toNodeId":"n_rkOxU",
			"type":"next"
		},
		{
			"fromNodeId":"ycolC",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_rkOxU",
			"type":"next"
		},
		{
			"fromNodeId":"n_rkOxU",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_bCGAQ",
			"type":"if"
		},
		{
			"fromNodeId":"n_bCGAQ",
			"priority":0,
			"skip":false,
			"toNodeId":"8TlBa",
			"type":"next"
		},
		{
			"fromNodeId":"n_rkOxU",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"8TlBa",
			"type":"next"
		},
		{
			"fromNodeId":"8TlBa",
			"priority":0,
			"skip":false,
			"toNodeId":"yTLSW",
			"type":"next"
		},
		{
			"fromNodeId":"yTLSW",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"D0Iyk",
			"type":"if"
		},
		{
			"fromNodeId":"D0Iyk",
			"priority":0,
			"skip":false,
			"toNodeId":"aTor7",
			"type":"next"
		},
		{
			"fromNodeId":"aTor7",
			"priority":0,
			"skip":false,
			"toNodeId":"n_jAtZ5",
			"type":"next"
		},
		{
			"fromNodeId":"yTLSW",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_jAtZ5",
			"type":"next"
		},
		{
			"fromNodeId":"n_jAtZ5",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"VEbuL",
			"type":"next"
		},
		{
			"fromNodeId":"VEbuL",
			"priority":0,
			"skip":false,
			"toNodeId":"Tt9tK",
			"type":"next"
		},
		{
			"fromNodeId":"n_jAtZ5",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_3o9Av",
			"type":"if"
		},
		{
			"fromNodeId":"Tt9tK",
			"priority":0,
			"skip":false,
			"toNodeId":"_3o9Av",
			"type":"next"
		},
		{
			"fromNodeId":"_3o9Av",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"A6B1S",
			"type":"if"
		},
		{
			"fromNodeId":"A6B1S",
			"priority":0,
			"skip":false,
			"toNodeId":"n_xowax",
			"type":"next"
		},
		{
			"fromNodeId":"_3o9Av",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_xowax",
			"type":"next"
		},
		{
			"fromNodeId":"n_xowax",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_ZvAlF",
			"type":"if"
		},
		{
			"fromNodeId":"_ZvAlF",
			"priority":0,
			"skip":false,
			"toNodeId":"VrXFO",
			"type":"next"
		},
		{
			"fromNodeId":"n_xowax",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"VrXFO",
			"type":"next"
		},
		{
			"fromNodeId":"VrXFO",
			"priority":0,
			"skip":false,
			"toNodeId":"Yxde1",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"67ce5eefdd8cc819cebcc949",
	"lastModifiedBy":0,
	"lcName":"add default tools",
	"modifiedTime":1761722799283,
	"name":"Add Default Tools",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":125,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"1QWEb",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"tools":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"id":{
										"type":"string",
										"title":"id"
									},
									"name":{
										"type":"string",
										"title":"name"
									},
									"description":{
										"type":"string",
										"title":"description"
									},
									"toolInputSchema":{
										"type":"object",
										"title":"toolInputSchema"
									},
									"additional":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Additional"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"tools"
						}
					},
					"additionalProperties":false,
					"$comment":"tools",
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"aiAgentId":{
							"type":"string",
							"title":"Ai Agent Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":220,
				"resourceName":"variable_by_unifyapps_get_session_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"53LAF",
			"index":2,
			"inputs":{
				"variableSchema":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"ua_voice_system_prompt_enabled":{
							"type":"boolean",
							"title":"Ua Voice System Prompt Enabled"
						},
						"workflow_agent_response_schema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Workflow Agent Response Schema"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Get Session Variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":458,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"n_WI3dW",
			"index":3,
			"inputs":{
				"automationId":"67a48d37f8f1744841dabb63",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"aiAgentId":"{{ 1QWEb.outputs.aiAgentId }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2,
				"resourceName":"storage_by_unifyapps_get_record_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"CVd2b",
			"index":4,
			"inputs":{
				"object_type":"e_ai_agent_conversation_state",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"id":"{{ 1QWEb.outputs.caseId }}",
				"readThroughSessionVariables":true
			},
			"skip":false,
			"subTitle":"convstate",
			"title":"Fetch record by ID",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":12,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"iNEXV",
			"index":5,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"id":{
											"type":"string",
											"title":"id"
										},
										"name":{
											"type":"string",
											"title":"name"
										},
										"description":{
											"type":"string",
											"title":"description"
										},
										"toolInputSchema":{
											"type":"object",
											"title":"toolInputSchema"
										},
										"additional":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Additional"
										}
									},
									"additionalProperties":false,
									"$comment":"Tool",
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"tools",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"tools",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"id":{
										"type":"string",
										"title":"id"
									},
									"name":{
										"type":"string",
										"title":"name"
									},
									"description":{
										"type":"string",
										"title":"description"
									},
									"toolInputSchema":{
										"type":"object",
										"title":"toolInputSchema"
									},
									"additional":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Additional"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":127,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"dlP7F",
			"index":6,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"defaultTools":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Default Tools"
						}
					}
				},
				"code":"return [\"defaultTools\":[\"utility_by_unifyapps_generate_public_url\"]]",
				"compile_static":false,
				"captureStdOutput":false
			},
			"skip":false,
			"subTitle":"default tools",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":438,
				"resourceName":"storage_by_unifyapps_get_records_by_ids",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"m6DdW-1",
			"id":"blwFr",
			"index":7,
			"inputs":{
				"object_type":"e_node_builder_resource_record",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"ids":{
					"source":"{{ dlP7F.outputs.result.defaultTools }}",
					"ua:type":"mappedArray",
					"items":"{{ dlP7F.outputs.result.defaultTools[0] }}"
				},
				"translationsOption":"DEFAULT",
				"readThroughSessionVariables":true
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"cacheKey":"{{ dlP7F.outputs.result.defaultTools }}",
					"enabled":true,
					"timeToLive":"8600",
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Get records by IDs",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":129,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"XEurK",
			"index":8,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ blwFr.outputs.objects }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":132,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"XEurK@m6DdW-1@l",
			"id":"B9QoO",
			"index":9,
			"inputs":{
				"automationId":"67ce9e65a1b3c17a52011efb",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"resourceName":"{{ XEurK.outputs.item.properties.name }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":132,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"XEurK@m6DdW-1@l",
			"id":"9HGH7",
			"index":10,
			"inputs":{
				"automationId":"67a48baef8f1744841dab839",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ 1QWEb.outputs.caseId }}",
					"actions":{
						"items":{
							"context":"{{ B9QoO.outputs.context }}",
							"input":"{{ B9QoO.outputs.input }}",
							"id":"{{ B9QoO.outputs.id }}",
							"name":"{{ B9QoO.outputs.name }}",
							"description":"{{ B9QoO.outputs.description }}"
						},
						"ua:type":"mappedArray"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":126,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"XEurK@m6DdW-1@l",
			"id":"umjeU",
			"index":11,
			"inputs":{
				"itemToAdd":{
					"id":"{{ 9HGH7.outputs.tools[0].id }}",
					"name":"{{ 9HGH7.outputs.tools[0].name }}",
					"description":"{{ 9HGH7.outputs.tools[0].description }}",
					"toolInputSchema":"{{ 9HGH7.outputs.tools[0].toolInputSchema }}"
				},
				"insertLocation":"END",
				"listName":"{{ iNEXV.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"GpwdU",
			"index":12,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"analyzeFileToolSchema"
					],
					"properties":{
						"clarifyToolInputSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Clarify Tool Input Schema"
						},
						"answerWithRefToolInputSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"answerWithRefToolInputSchema"
						},
						"ingestKnowledgeToolSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Ingest Knowledge Tool Schema"
						},
						"generateChartsToolInputSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Generate Charts Tool Input Schema"
						},
						"analyzeFileToolSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Analyze File Tool Schema"
						},
						"generateAndPublishPDFFile":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Generate And Publish PDF File"
						},
						"generateAndPublishExcelFile":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Generate And Publish Excel File"
						},
						"workflow_agent_response_schema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Workflow Agent Response Schema"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"preferredMarkupLanguage":{
							"type":"string",
							"title":"Preferred Markup Language"
						},
						"workflow_agent_response_schema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Workflow Agent Response Schema"
						}
					}
				},
				"code":"def clarifyQueryInputDescription = \"A string containing the message that requests clarification from the user regarding their query.\"\nif(binding.hasVariable('preferredMarkupLanguage')){\n    clarifyQueryInputDescription += (\" This query can be only in \" + preferredMarkupLanguage + \" Format \")\n}\nreturn [\n        \"clarifyToolInputSchema\": [\n                'type': 'object',\n                'properties': [\n                        'query': [\n                                'type': 'string',\n                                'description':  clarifyQueryInputDescription\n                        ]\n                ],\n                'required': [\n                        'query'\n                ]\n        ],\n        \"answerWithRefToolInputSchema\": [\n                'type': 'object',\n                'properties': [\n                        'chunkIds': [\n                                'type': 'array',\n                                'items': [\n                                        'type': 'integer',\n                                        'description': 'An integer representing a chunk ID from which the final answer is generated.'\n                                ],\n                                'description': 'An array of reference chunk IDs from which answer is generated (Only If you have used `ReferFromKnowledge` tool before)'\n                        ]\n                ],\n                'required': [\n                        'chunkIds'\n                ]\n        ],\n\n        \"generateChartsToolInputSchema\": [\n                'type': 'object',\n                'properties': [\n                        'chartId': [\n                                'type': 'string',\n                                \"description\":\"Id of the Chart that needs to be published , these charts would be from the output of referFromKnowledge tool\"\n                        ],\n                        'chartName': [\n                                'type': 'string',\n                                \"description\":\"Name of the Chart that needs to be published, if not specified choose a suitable name\"\n                        ],\n                        'chartType': [\n                                'type': 'array',\n                                'items': [\n                                        'type': 'string',\n                                        \"description\": \"Type of the Chart that needs to be published , supported formats are TABLE, PIE, BAR, COLUMN, LINE, DUAL_AXES. A TABLE is used when we need to show data as Tables, Stat Card or Key Value without any charts/ trends. A PIE chart can be used to represent data as proportions or percentages of parts to a whole. A BAR chart can be used to compare multiple data sets across different categories, allowing for direct comparison of groups within the same context, additionally there is a groupBy field based on which multiple bars are generated. A COLUMN chart (vertical columns) can be used to visually compare and contrast multiple sets of data across different categories, use groupBy field for an effective side-by-side comparison. A LINE chart displays information as a series of data points joint by straight line segment, primarily to show trends. There is a groupBy field based on which multiple lines are generated. A DUAL_AXES chart can be used whenever two different metrics with different types of values and distinct value ranges or different units and scales, need to be plotted on the same chart, at least 3 columns with one of them being an independent variable is required. Ensure that you use DUAL_AXES when 2 different metrics with different scales need to be plotted against an independent variable (eg. dates). If user requested for different chart type not mentioned in the supported format, politely deny the request.\"\n                                ]\n                        ]\n                        // ,\n                        // \"columnData\": [\n                        //         \"type\": \"array\",\n                        //         \"items\": [\n                        //                 \"type\":\"string\",\n                        //                 \"description\": \"name of the column in the table\"\n                        //         ]\n                        // ],\n                        // \"rowData\": [\n                        //         \"type\": \"array\",\n                        //         \"items\": [\n                        //                 \"type\":\"object\",\n                        //                 \"description\": \"This contains the key value pair for each column name defined in the columnData\"\n                        //         ]\n                        // ]\n                ],\n        ],\n\n        \"ingestKnowledgeToolSchema\": [\n                'type': 'object',\n                'properties': [\n                        'fileDetails': [\n                                'type': 'object',\n                                'description': 'A file details custom object which will have all the required details to access the file',\n                                'properties': [\n                                        'sourceType':['type':'string',\"description\":\"value of this field can be either URL OR CLOUD_STORAGE\"],\n                                        'source': ['type':'string', \"description\":\"if sourceType is URL , then this will be the url of the file or if sourceType is CLOUD_STORAGE then this will be the key in s3\"],\n                                        'name':['type':'string'],\n                                        'fileType':['type':'string', 'description':'mimeType of the file that needs to be ingested'],\n                                        'fileSize':['type':'number']]\n                        ]\n                ],\n                'required': [\n                        'fileDetails'\n                ]\n        ],\n        \"analyzeFileToolSchema\": [\n                'type': 'object',\n                'properties': [\n                        'fileDetails': [\n                                'type': 'array',\n                                'description': 'An array of file detail objects, each containing the required metadata to analyze the file.',\n                                'items': [\n                                        'type': 'object',\n                                        'properties': [\n                                                'sourceType':['type':'string',\"description\":\"value of this field can be either URL OR CLOUD_STORAGE\"],\n                                                'source': ['type':'string', \"description\":\"if sourceType is URL , then this will be the url of the file or if sourceType is CLOUD_STORAGE then this will be the key in s3\"],\n                                                'name':['type':'string'],\n                                                'fileType':['type':'string', 'description':'mimeType of the file that needs to be analyzed'],\n                                                'fileSize':['type':'number']\n                                        ]\n                                ]\n                        ]\n                ],\n                'required': [\n                        'fileDetails'\n                ]\n        ],\n        \"generateAndPublishPDFFile\": [\n                \"type\": \"object\",\n                \"properties\": [\n                        \"htmlContent\": [\n                                \"type\": \"string\",\n                                \"description\": \"Content of the PDF File in HTML format you need to generate and publish to user.\"\n                        ]\n                ]\n        ],\n        \"generateAndPublishExcelFile\": [\n        \"type\": \"object\",\n        \"properties\": [\n                \"columns\": [\n                \"type\": \"array\",\n                \"description\": \"List of column headers for the Excel sheet.\",\n                \"items\": [\n                        \"type\": \"string\"\n                ]\n                ],\n                \"rows\": [\n                \"type\": \"array\",\n                \"description\": \"List of row data where each row is an array of values matching the column order.\",\n                \"items\": [\n                        \"type\": \"object\"\n                ]\n                ],\n                \"fileName\": [\n                \"type\": \"string\",\n                \"description\": \"Name of the Excel file to generate (without extension).\"\n                ]\n        ]\n        ],\n        \"workflow_agent_response_schema\": binding.hasVariable(\"workflow_agent_response_schema\") ? workflow_agent_response_schema : [:]\n\n]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"preferredMarkupLanguage":"=IF(ISBLANK({{ CVd2b.outputs.properties.triggerDetails.preferredMarkupLanguage }}), \"MARKDOWN\", {{ CVd2b.outputs.properties.triggerDetails.preferredMarkupLanguage }})",
					"workflow_agent_response_schema":"{{ 53LAF.outputs.workflow_agent_response_schema }}"
				}
			},
			"skip":false,
			"subTitle":"Default tool Schemas",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"_RPm7m",
			"index":13,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.ingestKnowledge }}",
						"filter":{
							"operator":"EXISTS"
						}
					},
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.ingestKnowledge }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Ingest Knowledge?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_RPm7m@m6DdW-1@y",
			"id":"bLByu",
			"index":14,
			"inputs":{
				"itemToAdd":{
					"name":"IngestKnowledge",
					"id":"IngestKnowledge",
					"toolInputSchema":"{{ GpwdU.outputs.result.ingestKnowledgeToolSchema }}",
					"description":"USE THIS TOOL ONLY FOR NEW FILE INGESTION.\nThis tool should be used EXCLUSIVELY when:\n  1. A new file needs to be added to the agent's knowledge base that isn't already indexed.\n  2. The user explicitly requests to ingest or index a new document.\n  3. The file has been directly provided by the user OR has been downloaded from the previous tool usage output.\nDO NOT use this tool when:\n  1. Referencing information from files already in the knowledge base.\n  2. A filename is merely mentioned in conversation.\n  3. Answering questions about already-indexed content.\nBefore using this tool, verify the file is not already indexed by checking existing knowledge references"
				},
				"insertLocation":"END",
				"listName":"{{ iNEXV.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add ingest knowledge as a tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"_DiOSl",
			"index":15,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.createPPTX }}",
						"filter":{
							"operator":"EXISTS"
						}
					},
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.createPPTX }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Create PPTX?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DiOSl@m6DdW-1@y",
			"id":"_ZwPKS",
			"index":16,
			"inputs":{
				"itemToAdd":{
					"id":"generate_and_publish_pptx_file",
					"name":"generate_and_publish_pptx_file",
					"description":"Call this tool if you user explicitly mentioned to generate / create a PPTX. If this tool return success, It means this tool has also published the file to the user.",
					"toolInputSchema":"{{ GpwdU.outputs.result.generateAndPublishPDFFile }}"
				},
				"insertLocation":"END",
				"listName":"{{ iNEXV.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add Create PPTX File as a tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"_VOjtS",
			"index":17,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.createPDF }}",
						"filter":{
							"operator":"EXISTS"
						}
					},
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.createPDF }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Create PDF?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_VOjtS@m6DdW-1@y",
			"id":"_s2zTx",
			"index":18,
			"inputs":{
				"itemToAdd":{
					"id":"generate_and_publish_pdf_file",
					"name":"generate_and_publish_pdf_file",
					"description":"Call this tool if you user explicitly mentioned to generate / create a PDF. If this tool return success, It means this tool has also published the file to the user.",
					"toolInputSchema":"{{ GpwdU.outputs.result.generateAndPublishPDFFile }}"
				},
				"insertLocation":"END",
				"listName":"{{ iNEXV.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add Create PDF File as a tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"n_kf9OP",
			"index":19,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.analyseFile }}",
						"filter":{
							"operator":"MISSING"
						}
					},
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.analyseFile }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_kf9OP@m6DdW-1@y",
			"id":"JDjJY",
			"index":20,
			"inputs":{
				"itemToAdd":{
					"id":"AnalyseFile",
					"name":"AnalyseFile",
					"description":"File Analysis Tool - Analyzes uploaded files and extracts their content, metadata, and insights.\nSUPPORTED FILE TYPES:\nDocuments: TXT, RTF, MD (always use tool)\nDocuments: DOCX, PDF (only use tool if file size > 2MB)\nSpreadsheets: XLSX, CSV, XLS, ODS\nPresentations: PPTX, PPT, ODP\nAudio: MP3, WAV, FLAC, AAC\nUSAGE REQUIREMENTS:\nOnly use when complete file metadata is available (name, type, source, sourceType, size)\nFor DOCX and PDF files: Only use tool if file size > 2MB, otherwise analyze directly\nDO NOT guess or hallucinate missing file details\nPrefer this tool over IngestKnowledge for supported file types (when size requirements are met)\nDO NOT USE FOR:\nImage files (PNG, JPG, JPEG, GIF, SVG, etc.) - answer directly without tools\nVideo files - use IngestKnowledge instead\nFiles with incomplete metadata\nDOCX and PDF files ≤ 2MB - analyze directly without tools\nFALLBACK STRATEGY:\nIf this tool fails → use IngestKnowledge\nIf unsupported file type → use IngestKnowledge\nIf image file → no tool needed, analyze directly\nIf DOCX/PDF ≤ 2MB → analyze directly without tools\nEXAMPLE USAGE:\nUser uploads 'report.pdf' (3MB) → Use AnalyseFile\nUser uploads 'document.docx' (300KB) → Analyze directly, no tool\nUser uploads 'data.txt' (any size) → Use AnalyseFile\nUser uploads 'presentation.pptx' (any size) → Use AnalyseFile\nUser uploads 'image.png' → Answer directly, no tool\nUser uploads 'video.mp4' → Use IngestKnowledge\nUser uploads 'presentation.pptx' with complete metadata → Use AnalyseFile \nUser uploads 'audio.wav' with complete metadata → Use AnalyseFile \nUser uploads 'data.xlsx' with complete metadata → Use AnalyseFile\nIf the user explicitly asks to *upload* a file, DO NOT call this tool. \nInstead, first check if a dedicated upload tool (e.g., sharepoint_upload_a_file) is available and use that. \nIf the upload tool requires a path or folder location, you MUST ask the user to provide it before calling the tool. \nOnly use AnalyseFile when the user explicitly wants a file analysed (not uploaded). \nIf no suitable upload tool exists, ask the user for clarification instead of directly using AnalyseFile.",
					"toolInputSchema":"{{ GpwdU.outputs.result.analyzeFileToolSchema }}"
				},
				"insertLocation":"END",
				"listName":"{{ iNEXV.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add AnalyseFile as a tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":317,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"ycolC",
			"index":21,
			"inputs":{
				"filters":[
					{
						"property":"{{ 53LAF.outputs.ua_voice_system_prompt_enabled }}",
						"filter":{
							"operator":"NOT_EQUAL",
							"value":"true"
						}
					},
					{
						"property":"{{ n_WI3dW.outputs.properties.responseGenerationSettings.chartGenerationSettings.generateChartWithBlocks_NewVersion }}",
						"filter":{
							"operator":"NOT_EQUAL",
							"value":"true"
						}
					},
					{
						"filters":[
							{
								"property":"{{ n_WI3dW.outputs.properties.defaultTools.generateChartTool }}",
								"filter":{
									"operator":"MISSING"
								}
							},
							{
								"property":"{{ n_WI3dW.outputs.properties.defaultTools.generateChartTool }}",
								"filter":{
									"operator":"EQUAL",
									"value":"true"
								}
							}
						],
						"operator":"OR"
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"ycolC@m6DdW-1@y",
			"id":"fGbtb",
			"index":22,
			"inputs":{
				"itemToAdd":{
					"toolInputs":[],
					"name":"GenerateCharts",
					"id":"GenerateCharts",
					"toolInputSchema":"{{ GpwdU.outputs.result.generateChartsToolInputSchema }}",
					"description":"[STRICTLY] If `chartId` is present pass that as tool input instead of creating columnData and rowData\nThis tool is designed to create visual data representations, such as charts or tables that complement final answers to user queries. Follow these steps:\n\n1. Determine the chart/table generation method:\na. If the ReferFromKnowledge tool has been used previously, use the chartId from the existing context if available.\nb. If not, generate a chart/table from columnNames and rowData.\n\n2. Process the input data:\n- For method 1a (using chartId): Locate the relevant chart information in the existing context.\n- For method 1b (generating new chart): Parse the columnData and rowData from the input.\n\n\n```json\n{\n\"chartGenerationMethod\": \"chartId\" | \"newChart\",\n// If using chartId:\n\"chartId\": \"string\",\n\n// If generating new chart:\n\"columnData\": [\"string\"],\n\"rowData\": [\n{\n// key-value pairs based on columnData\n}\n]\n}\n```\n\n```\n\"columnData\": [\n\"name\",\n\"age\",\n\"state\"\n],\n\"rowData\": [\n{\n\"age\": 40,\n\"name\": \"Jake\",\n\"state\": \"MP\"\n},\n{\n\"age\": 21,\n\"name\": \"Bob\",\n\"state\": \"MP\"\n},\n{\n\"age\": 30,\n\"name\": \"Joy\",\n\"state\": \"TS\"\n},\n{\n\"age\": 25,\n\"name\": \"John\",\n\"state\": \"UP\"\n},\n{\n\"age\": 35,\n\"name\": \"Coop\",\n\"state\": \"TS\"\n}\n]\n```\n[STRICTLY] Always give a neutral message after chart generation such as:\n\"You can refer the the generated output above for [user query].\" STRICTLY do not message generated chart in your output message. (Use this instead of \"You can see the response in the generated chart.\")\n[STRICTLY] If `chartId` is present pass that as tool input instead of creating columnData and rowData\nIf the GenerateCharts tool has been called, do not include the same data/information sent to it to be published in the final answer. This is necessary to avoid repetition of data."
				},
				"insertLocation":"END",
				"listName":"{{ iNEXV.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"generateChartsTool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":447,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"n_rkOxU",
			"index":23,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.createExcel }}",
						"filter":{
							"operator":"EXISTS"
						}
					},
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.createExcel }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":534,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_rkOxU@m6DdW-1@y",
			"id":"n_bCGAQ",
			"index":24,
			"inputs":{
				"itemToAdd":{
					"id":"generate_and_publish_excel_file",
					"name":"generate_and_publish_excel_file",
					"description":"This tool creates a new Excel file from tabular data provided by the user. Follow these steps precisely:\n1. Data Processing Requirements:\na. **IMPORTANT**: Both columns AND rows data must be generated\nb. **IMPORTANT**: Row data is absolutely required - do not generate empty rows\n2. Required Output Format\n```json\n{ \"columns\": [\"column1\", \"column2\", \"column3\"], \"rows\": [ { \"column1\": \"value1\", \"column2\": \"value2\", \"column3\": \"value3\" }, { \"column1\": \"value4\", \"column2\": \"value5\", \"column3\": \"value6\" } ], \"fileName\": \"filename\" }\n```\n3. Data Structure Rules:\na. columns: Array of column header names (strings)\nb. rows: Array of objects where each object represents one row\nc. Each row object must contain key-value pairs matching the column names\nd. fileName: String for the output file name (without extension)\n4. Example Implementation:\nInput data: name|age|state\\nJake|40|MP\\nBob|21|MP\\nJoy|30|TS\nOutput:\n```json\n{ \"columns\": [\"name\", \"age\", \"state\"], \"rows\": [ { \"name\": \"Jake\", \"age\": 40, \"state\": \"MP\" }, { \"name\": \"Bob\", \"age\": 21, \"state\": \"MP\" }, { \"name\": \"Joy\", \"age\": 30, \"state\": \"TS\" } ], \"fileName\": \"demo\" }\n```\n**IMPORTANT** No Matter what you need to generate rows data, without rows that this tool can't be used.\nAfter successful generation, provide only this neutral message: \"You can refer to the generated output above for [user query].\"",
					"toolInputSchema":"{{ GpwdU.outputs.result.generateAndPublishExcelFile }}"
				},
				"insertLocation":"END",
				"listName":"{{ iNEXV.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":313,
				"resourceName":"variable_by_unifyapps_get_session_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"8TlBa",
			"index":25,
			"inputs":{
				"variableSchema":{
					"type":"object",
					"properties":{
						"ai_agent_default_tools":{
							"type":"object",
							"properties":{
								"webSearch":{
									"type":"boolean",
									"title":"Web Search"
								}
							},
							"additionalProperties":false,
							"title":"Ai Agent Default Tools",
							"required":[]
						},
						"topicExecutionSettings":{
							"type":"object",
							"properties":{
								"thinkToolDisabled":{
									"type":"boolean",
									"title":"Think Tool Disabled"
								}
							},
							"additionalProperties":false,
							"title":"Topic Execution Settings",
							"required":[]
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"websearch",
			"title":"Get Session Variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":117,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"yTLSW",
			"index":26,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.websearch }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					},
					{
						"property":"{{ 8TlBa.outputs.ai_agent_default_tools.webSearch }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"websearch",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":119,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yTLSW@m6DdW-1@y",
			"id":"D0Iyk",
			"index":27,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"toolInputSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Tool Input Schema"
						}
					},
					"additionalProperties":false,
					"required":[
						"toolInputSchema"
					]
				},
				"compile_static":false,
				"code":"return [\n  \"toolInputSchema\": [\n    'type':'object',\n    'properties':[\n      'query':[\n        'type':'string'\n      ]\n    ],\n    'required':[\n      'query'\n    ]\n  ]\n]"
			},
			"skip":false,
			"subTitle":"web search tool",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory",
					"root.itemToAdd.toolInputs.items.possibleValues.items"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":120,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yTLSW@m6DdW-1@y",
			"id":"aTor7",
			"index":28,
			"inputs":{
				"itemToAdd":{
					"toolInputSchema":"{{ D0Iyk.outputs.result.toolInputSchema }}",
					"id":"WebSearch",
					"name":"WebSearch",
					"description":"This is a tool for web search by given query."
				},
				"insertLocation":"END",
				"listName":"{{ iNEXV.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"web search tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":438,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"n_jAtZ5",
			"index":29,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_WI3dW.outputs.properties.topicExecutionSettings.thinkToolDisabled }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					},
					{
						"property":"{{ 8TlBa.outputs.topicExecutionSettings.thinkToolDisabled }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					},
					{
						"property":"1",
						"filter":{
							"operator":"EQUAL",
							"value":"1"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":119,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_jAtZ5@m6DdW-1@n",
			"id":"VEbuL",
			"index":30,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"toolInputSchema"
					],
					"properties":{
						"toolInputSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Tool Input Schema"
						}
					}
				},
				"code":"return [\n  \"toolInputSchema\": [\n    'type':'object',\n    'properties':[\n      'thought':[\n        'type':'string',\n        'description': 'A thought to think about.'\n      ]\n    ],\n    'required':[\n      'thought'\n    ]\n  ]\n]",
				"compile_static":false,
				"captureStdOutput":false
			},
			"skip":false,
			"subTitle":"think tool",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory",
					"root.itemToAdd.toolInputs.items.possibleValues.items"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":120,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_jAtZ5@m6DdW-1@n",
			"id":"Tt9tK",
			"index":31,
			"inputs":{
				"itemToAdd":{
					"toolInputSchema":"{{ VEbuL.outputs.result.toolInputSchema }}",
					"id":"think",
					"name":"think",
					"description":"Use the tool to think about something. It will not obtain new information or change the database, but just append the thought to the log. Use it when complex reasoning or some cache memory is needed."
				},
				"insertLocation":"END",
				"listName":"{{ iNEXV.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"think tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":117,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"_3o9Av",
			"index":32,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.clarifyFromUser }}",
						"filter":{
							"operator":"EXISTS"
						}
					},
					{
						"property":"{{ n_WI3dW.outputs.properties.defaultTools.clarifyFromUser }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"clarifyFromUser?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_3o9Av@m6DdW-1@y",
			"id":"A6B1S",
			"index":33,
			"inputs":{
				"itemToAdd":{
					"name":"ClarifyFromUser",
					"description":"We can use this tool when we need to clarify or ask anything from the end user",
					"id":"Clarify",
					"toolInputs":{
						"items":{
							"fieldName":"query",
							"fieldDescription":"Query that needs to be asked to the user , provide the complete question you want to ask the user , provide options as well if available",
							"fieldType":"string",
							"mandatory":true
						},
						"ua:type":"mappedArray"
					},
					"toolInputSchema":"{{ GpwdU.outputs.result.clarifyToolInputSchema }}"
				},
				"insertLocation":"END",
				"listName":"{{ iNEXV.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add clarify as a tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":447,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"n_xowax",
			"index":34,
			"inputs":{
				"filters":[
					{
						"property":"{{ 1QWEb.outputs.aiAgentId }}",
						"filter":{
							"operator":"EQUAL",
							"value":"workflow_agent_mini_agent"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_xowax@m6DdW-1@y",
			"id":"_ZvAlF",
			"index":35,
			"inputs":{
				"itemToAdd":{
					"id":"OutputGeneratorTool",
					"name":"OutputGeneratorTool",
					"description":"Use this tool to generate the final output in correct schema as mentioned.",
					"toolInputSchema":"{{ GpwdU.outputs.result.workflow_agent_response_schema }}",
					"toolInputs":{
						"items":{
							"fieldName":"query",
							"fieldDescription":"Query that needs to be asked to the user , provide the complete question you want to ask the user , provide options as well if available",
							"fieldType":"string",
							"mandatory":true
						},
						"ua:type":"mappedArray"
					}
				},
				"insertLocation":"END",
				"listName":"{{ iNEXV.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add clarify as a tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"VrXFO",
			"index":36,
			"inputs":{
				"itemToAdd":{
					"toolInputs":[
						{
							"possibleValues":[
								"1",
								"2",
								"33",
								"40",
								"120"
							],
							"fieldDescription":"List of chunk ids which are always numeric",
							"fieldName":"chunkIds",
							"fieldType":"array",
							"mandatory":true
						},
						{
							"fieldName":"chartId",
							"fieldType":"integer",
							"mandatory":false,
							"fieldDescription":"The chartId of the chart to be published"
						}
					],
					"name":"PublishCitations",
					"description":"Use this tool to Publish citations Provide a list of reference chunk IDs in the input of this tool and call this tool ONLY if you have used the `ReferFromKnowledge` tool to retrieve information and with the Final Answer",
					"id":"PublishCitations",
					"toolInputSchema":"{{ GpwdU.outputs.result.answerWithRefToolInputSchema }}"
				},
				"insertLocation":"END",
				"listName":"{{ iNEXV.outputs.items[0] }}"
			},
			"skip":true,
			"subTitle":"Publish Citations",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.result.tools.source",
					"root.result.tools.ua:type",
					"root.result.tools.items.id",
					"root.result.tools.items.name",
					"root.result.tools.items.description"
				]
			},
			"context":{
				"appName":"callables",
				"resourceVersion":130,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"m6DdW-1",
			"id":"Yxde1",
			"index":37,
			"inputs":{
				"result":{
					"tools":{
						"source":"{{ iNEXV.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"id":"{{ iNEXV.outputs.items[0].id }}",
							"name":"{{ iNEXV.outputs.items[0].name }}",
							"description":"{{ iNEXV.outputs.items[0].description }}",
							"toolInputSchema":"{{ iNEXV.outputs.items[0].toolInputSchema }}",
							"additional":"{{ iNEXV.outputs.items[0].additional }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1866,
	"schemaReferences":[
		"entity|e_code_snippet|e_67a48c5cc6ba6e3a57165fee",
		"entity|e_code_snippet|e_679477888163423f74930eba"
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"AI Agent"
	],
	"version":84
}