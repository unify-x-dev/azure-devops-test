{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1722519345366,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296180818,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfcf40c3d19149a9e3489",
		"status":"DEPLOYED",
		"version":121,
		"workflowVersion":170
	},
	"edges":[
		{
			"fromNodeId":"xRtoy",
			"priority":0,
			"skip":false,
			"toNodeId":"MRd5o",
			"type":"next"
		},
		{
			"fromNodeId":"MRd5o",
			"priority":0,
			"skip":false,
			"toNodeId":"MU5aT",
			"type":"next"
		},
		{
			"fromNodeId":"MU5aT",
			"priority":0,
			"skip":false,
			"toNodeId":"7OLXd",
			"type":"next"
		},
		{
			"fromNodeId":"7OLXd",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"8tmTa",
			"type":"if"
		},
		{
			"fromNodeId":"8tmTa",
			"priority":0,
			"skip":false,
			"toNodeId":"Vm2Rw",
			"type":"next"
		},
		{
			"fromNodeId":"Vm2Rw",
			"priority":0,
			"skip":false,
			"toNodeId":"7d1Cv",
			"type":"next"
		},
		{
			"fromNodeId":"7d1Cv",
			"priority":0,
			"skip":false,
			"toNodeId":"6pk6u",
			"type":"next"
		},
		{
			"fromNodeId":"7OLXd",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"6pk6u",
			"type":"next"
		},
		{
			"fromNodeId":"6pk6u",
			"priority":0,
			"skip":false,
			"toNodeId":"Zgmh8",
			"type":"next"
		},
		{
			"fromNodeId":"Zgmh8",
			"priority":0,
			"skip":false,
			"toNodeId":"P0JOZ",
			"type":"next"
		},
		{
			"fromNodeId":"P0JOZ",
			"name":"error",
			"priority":0,
			"skip":false,
			"toNodeId":"zbYRy",
			"type":"error"
		},
		{
			"fromNodeId":"P0JOZ",
			"priority":0,
			"skip":false,
			"toNodeId":"IdP95",
			"type":"next"
		},
		{
			"fromNodeId":"zbYRy",
			"priority":0,
			"skip":false,
			"toNodeId":"IdP95",
			"type":"next"
		},
		{
			"fromNodeId":"IdP95",
			"priority":0,
			"skip":false,
			"toNodeId":"2pvTs",
			"type":"next"
		},
		{
			"fromNodeId":"2pvTs",
			"priority":0,
			"skip":false,
			"toNodeId":"zRzEU",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"66ab8f31a1c8b020e8374cd1",
	"lastModifiedBy":0,
	"lcName":"generic_co_pilot_fetch_message_content",
	"modifiedTime":1761722704573,
	"name":"GENERIC_CO_PILOT_Fetch_Message_Content",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":46,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"BNIP8-1",
			"id":"xRtoy",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"caseId"
						},
						"createdTime":{
							"type":"integer",
							"title":"createdTime"
						},
						"messageId":{
							"type":"string",
							"title":"messageId"
						},
						"message":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"data":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"data",
										"required":[]
									},
									"blockType":{
										"type":"string",
										"title":"blockType"
									},
									"appearance":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Appearance"
									}
								},
								"additionalProperties":false
							},
							"title":"message",
							"required":[]
						},
						"hasAttachments":{
							"type":"boolean",
							"title":"hasAttachments",
							"default":false
						},
						"feedback":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Feedback"
						},
						"contextMessageId":{
							"type":"string",
							"title":"Context Message Id"
						},
						"attachments":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Attachments"
						},
						"messageType":{
							"type":"string",
							"title":"Message Type"
						},
						"interfaceDetails":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Interface Details"
						},
						"additional":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Additional"
						},
						"fromCustomerUserId":{
							"type":"string",
							"title":"From Customer User Id"
						},
						"searchQueryId":{
							"type":"string",
							"title":"Search Query Id"
						},
						"previewDetails":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Preview Details"
						}
					},
					"additionalProperties":false,
					"required":[
						"additional"
					]
				},
				"setup":{
					"type":"object",
					"properties":{
						"messageId":{
							"type":"string",
							"title":"Message Id"
						},
						"copilotType":{
							"type":"string",
							"title":"Copilot Type"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger from automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2,
				"resourceName":"storage_by_unifyapps_get_record_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"BNIP8-1",
			"id":"MRd5o",
			"index":2,
			"inputs":{
				"object_type":"service_hub_message",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"id":"{{ xRtoy.outputs.messageId }}",
				"readThroughSessionVariables":true
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch record by ID",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":1989,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"BNIP8-1",
			"id":"MU5aT",
			"index":3,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_messageId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ MRd5o.outputs.id }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"service_hub_user_feedback",
				"page":{
					"limit":20,
					"offset":0
				},
				"numberOfRecordsToFetch":"SINGLE",
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Feedback",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":47,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"BNIP8-1",
			"id":"7OLXd",
			"index":4,
			"inputs":{
				"filters":[
					{
						"property":"{{ xRtoy.outputs.copilotType }}",
						"filter":{
							"operator":"EQUAL",
							"value":"CODE_GENERATOR"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":15,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7OLXd@BNIP8-1@y",
			"id":"8tmTa",
			"index":5,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"value":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Value"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"jsonString":"{{ MRd5o.outputs.properties.content.text }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":52,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7OLXd@BNIP8-1@y",
			"id":"Vm2Rw",
			"index":6,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"messageType":{
							"type":"string",
							"title":"messageType"
						},
						"caseId":{
							"type":"string",
							"title":"caseId"
						},
						"createdTime":{
							"type":"integer",
							"title":"createdTime"
						},
						"messageId":{
							"type":"string",
							"title":"messageId"
						},
						"message":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"data":{
										"type":"object",
										"properties":{
											"citations":{
												"type":"array",
												"items":{
													"type":"object",
													"properties":{},
													"additionalProperties":false
												},
												"title":"citations",
												"required":[]
											},
											"text":{
												"type":"string",
												"title":"text"
											}
										},
										"title":"data",
										"additionalProperties":false
									},
									"blockType":{
										"type":"string",
										"title":"blockType"
									}
								},
								"additionalProperties":false
							},
							"title":"message"
						},
						"feedback":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Feedback"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"msg":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Msg"
						},
						"chunkMetadata":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Chunk Metadata"
						},
						"answer":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Answer"
						},
						"formattedMessages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Formatted Messages"
						},
						"groovyCode":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Groovy Code"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"// {\n//       \"caseId\": \"e_669e09ea287ae33f8e7b4050\",\n//       \"createdTime\": 1721760193534,\n//       \"messageId\": \"e_669ff9c11f47916aaa86efc7\",\n//       \"message\": [\n//         {\n//           \"data\": {\n//             \"text\": \"It looks like you're testing. How can I help you with your SQL queries or data analysis today?\"\n//           },\n//           \"blockType\": \"Typography\"\n//         }\n//       ],\n//       \"messageContent\": [\n//         {\n//           \"data\": {\n//             \"text\": \"It looks like you're testing. How can I help you with your SQL queries or data analysis today?\"\n//           },\n//           \"blockType\": \"Typography\"\n//         }\n//       ]\n//     }\n\n    def messageDTO = [\"caseId\": msg.properties.caseId, \"createdTime\": msg.get(\"createdTime\"), \"messageId\": msg.get(\"id\")]\n\n    def messages = []\n    def jsonContent = [\n    \"text\": \"I've created this groovy code for you based on the input prompt.\"\n]\n    def messageStructText = [\"blockType\":\"Typography\", \"data\":jsonContent]\n    messages.add(messageStructText)\n    def messageStruct = [\"blockType\":\"Form\", \"data\":[\"value\":groovyCode]]\n    messages.add(messageStruct)\n    if(binding.hasVariable('chunkMetadata')){\n    messages.add([\"blockType\": \"Citation\", \"data\" : [\"citations\": getCitations(chunkMetadata)]])\n    }\n    messageDTO.put(\"message\", messages)\n    messageDTO.put(\"messageContent\", msg.properties.content.text)\n    messageDTO.put(\"hasAttachments\", msg.properties.hasAttachments)\n        messageDTO.put(\"feedback\", msg.properties.feedback)\n\nreturn messageDTO;\n\n\ndef getCitations(def chunkMetadata) {\n    def citations = []\n    for(chunk in chunkMetadata) {\n        def citation = [:]\n        if(chunk.get(\"channelName\")!= null) {\n            citation = [\"appName\": \"slack\", \"referenceUrl\":\"\", \"knowledgeSourceType\": \"APPLICATION\", \"title\":chunk.get(\"channelName\") ]\n        } else if(chunk.get(\"websiteUrl\")!= null){\n citation = [ \"referenceUrl\":chunk.get(\"websiteUrl\"), \"knowledgeSourceType\": \"WEBSITE\"]\n        } else if(chunk.get(\"webViewUrl\")!= null){\n            citation = [ \"referenceUrl\":chunk.get(\"webViewUrl\"), \"knowledgeSourceType\": \"APPLICATION\", \"appName\": \"gdrive\", \"title\": chunk.get(\"name\")]\n        }\n\n        citations << citation\n    }\n\n    return citations\n}\n",
				"isAsync":false,
				"parameters":{
					"msg":"{{ MRd5o.outputs }}",
					"groovyCode":"{{ 8tmTa.outputs.result.value }}"
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":33,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7OLXd@BNIP8-1@y",
			"id":"7d1Cv",
			"index":7,
			"inputs":{
				"result":{
					"hasAttachments":"false",
					"message":{
						"ua:type":"mappedArray",
						"items":{
							"blockType":"{{ Vm2Rw.outputs.result.message[0].blockType }}",
							"data":"{{ Vm2Rw.outputs.result.message[0].data }}"
						},
						"source":"{{ Vm2Rw.outputs.result.message }}"
					},
					"caseId":"{{ Vm2Rw.outputs.result.caseId }}",
					"createdTime":"{{ Vm2Rw.outputs.result.createdTime }}",
					"messageId":"{{ Vm2Rw.outputs.result.messageId }}",
					"feedback":"{{ Vm2Rw.outputs.result.feedback }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Return data to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":12,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"BNIP8-1",
			"id":"6pk6u",
			"index":8,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"chunkMetadata":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Chunk Metadata"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"jsonString":"{{ MRd5o.outputs.properties.content.html }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialize string to json object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":118,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"BNIP8-1",
			"id":"Zgmh8",
			"index":9,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"data":{
											"type":"object",
											"properties":{
												"text":{
													"type":"string",
													"title":"text"
												}
											},
											"title":"data",
											"additionalProperties":false
										},
										"blockType":{
											"type":"string",
											"title":"blockType"
										}
									},
									"additionalProperties":false
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"List",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"List",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"data":{
										"type":"object",
										"properties":{
											"text":{
												"type":"string",
												"title":"text"
											}
										},
										"title":"data",
										"additionalProperties":false
									},
									"blockType":{
										"type":"string",
										"title":"blockType"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":15,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"MANUAL",
			"groupId":"BNIP8-1",
			"id":"P0JOZ",
			"index":10,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"Response":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"data":{
										"type":"object",
										"properties":{
											"text":{
												"type":"string",
												"title":"text"
											}
										},
										"title":"data",
										"additionalProperties":false
									},
									"blockType":{
										"type":"string",
										"title":"blockType"
									}
								},
								"additionalProperties":false
							},
							"title":"Response"
						},
						"status":{
							"type":"string",
							"title":"status"
						}
					},
					"additionalProperties":false
				},
				"jsonString":"{{ MRd5o.outputs.properties.content.text }}"
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"MANUAL"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":117,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"P0JOZ@BNIP8-1@error",
			"id":"zbYRy",
			"index":11,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"ui:submitButtonOptions":{
						"norender":true
					}
				},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"text":{
							"type":"string",
							"title":"Text"
						}
					},
					"required":[]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"text":{
							"type":"string",
							"title":"Text"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":54,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"BNIP8-1",
			"id":"IdP95",
			"index":12,
			"inputs":{
				"automationId":"66e598f208d0f101e7cd4734",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"messageId":"{{ MRd5o.outputs.properties.messageId }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":52,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"BNIP8-1",
			"id":"2pvTs",
			"index":13,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"messageType":{
							"type":"string",
							"title":"messageType"
						},
						"caseId":{
							"type":"string",
							"title":"caseId"
						},
						"createdTime":{
							"type":"integer",
							"title":"createdTime"
						},
						"messageId":{
							"type":"string",
							"title":"messageId"
						},
						"message":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"data":{
										"type":"object",
										"properties":{
											"citations":{
												"type":"array",
												"items":{
													"type":"object",
													"properties":{},
													"additionalProperties":false
												},
												"title":"citations",
												"required":[]
											},
											"text":{
												"type":"string",
												"title":"text"
											}
										},
										"title":"data",
										"additionalProperties":false
									},
									"blockType":{
										"type":"string",
										"title":"blockType"
									},
									"appearance":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Appearance"
									}
								},
								"additionalProperties":false
							},
							"title":"message",
							"required":[]
						},
						"feedback":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Feedback"
						},
						"contextMessageId":{
							"type":"string",
							"title":"Context Message Id"
						},
						"attachments":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Attachments"
						},
						"hasAttachments":{
							"type":"boolean",
							"title":"Has Attachments"
						},
						"interfaceDetails":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Interface Details"
						},
						"additional":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Additional"
						},
						"fromCustomerUserId":{
							"type":"string",
							"title":"From Customer User Id"
						},
						"searchQueryId":{
							"type":"string",
							"title":"Search Query Id"
						},
						"previewDetails":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Preview Details"
						}
					},
					"additionalProperties":false,
					"required":[
						"additional",
						"fromCustomerUserId",
						"searchQueryId"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"msg":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Msg"
						},
						"chunkMetadata":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Chunk Metadata"
						},
						"answer":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Answer"
						},
						"formattedMessages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Formatted Messages"
						},
						"feedback":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Feedback"
						},
						"attachments":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Attachments"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import org.jsoup.Jsoup\nimport org.jsoup.nodes.Document\n\n    def messageDTO = [\"caseId\": msg.properties.caseId, \"createdTime\": msg.get(\"createdTime\"), \"messageId\": msg.get(\"id\")]\n    if(msg.properties.additional !=null) {\n        messageDTO.put(\"contextMessageId\", msg.properties.additional.contextMessageId)\n          messageDTO.put(\"additional\", msg.properties.additional)\n    }\n    def messageStruct = [\"blockType\":\"Typography\", \"data\":[\"text\":msg.properties.content?.text]]\n     if (msg.properties.type == 'bot') {\n        def type = detectHtmlContent(msg.properties.content?.text) ? \"HTML\" : \"MARKDOWN\"\n    messageStruct = [\"blockType\":\"Typography\", \"data\":[\"type\": type,\"text\":msg.properties.content?.text]]\n     } else {\n            messageStruct = [\"blockType\":\"Typography\", \"data\":[\"type\": msg.properties.content?.type,\"text\":msg.properties.content?.text]]\n     }\n    def messages = []\n    messages.add(messageStruct)\n    if(binding.hasVariable('chunkMetadata')) {\n        messages.add([\"blockType\": \"Citation\", \"data\" : [\"citations\": getCitations(chunkMetadata)]])\n    }\n    if(msg.properties.content?.choiceList != null) {\n        messages.add(getChoicesContent(msg.properties.content?.choiceList))\n    }\n    def counter = 1\n    def hasAttachment = false\n    def attachmentList = []\n    if(binding.hasVariable(\"attachments\") && attachments) {\n        if (msg.properties.type == 'fan') {\n            hasAttachment = true\n            attachmentList.addAll(getFanAttachments(attachments))\n        } else {\n            messages.addAll(getBrandAttachments(attachments))\n        }        \n    }\n\n    messageDTO.put(\"message\", messages)\n    if(binding.hasVariable('formattedMessages')){\n        messageDTO.put('message', formattedMessages)\n    }\n      if(msg.properties.content?.coPilotBlocks != null && msg.properties.content?.coPilotBlocks.size() > 0){\n        messages.addAll(msg.properties.content?.coPilotBlocks.blocks)\n         messageDTO.put('message', messages)\n    }\n        if(msg.properties.containsKey(\"searchQueryId\")) {\n    messageDTO.put(\"searchQueryId\", msg.properties.get(\"searchQueryId\"))\n}\n    messageDTO.put(\"messageContent\", msg.properties.content?.text)\n    messageDTO.put(\"interfaceDetails\", msg.properties.content?.interfaceDetails)\n    messageDTO.put(\"previewDetails\", msg.properties.content?.previewDetails)\n    messageDTO.put(\"messageType\", msg.properties.type.capitalize())\n    if(msg.properties.additional?.temporaryMessage){\n        def additional = messageDTO.additional;\n        if(additional == null) {\n            additional = [:]\n        }\n        // additional.put(\"internalMessageType\", \"THOUGHT\")\n        messageDTO.put(\"additional\", additional)\n    }\n    messageDTO.put(\"hasAttachments\", hasAttachment)\n    messageDTO.put(\"fromCustomerUserId\", msg.properties.get(\"fromCustomerUserId\"))\n    messageDTO.put(\"attachments\", attachmentList)\n\n    if(binding.hasVariable('feedback')) {\n    if(feedback!=null) {\n    messageDTO.put(\"feedback\", feedback)\n    }\n    }\n    return messageDTO;\n\n\ndef getCitations(def chunkMetadata) {\n    def citations = []\n    for(chunk in chunkMetadata) {\n        def citation = [:]\n        if(chunk.get(\"channelName\")!= null) {\n            citation = [\"appName\": \"slack\", \"referenceUrl\": chunk.get(\"referenceUrl\"), \"knowledgeSourceType\": \"APPLICATION\", \"title\": chunk.get(\"channelName\")]\n        } else if(chunk.get(\"websiteUrl\") != null){\n citation = [ \"referenceUrl\":chunk.get(\"websiteUrl\"), \"knowledgeSourceType\": \"WEBSITE\", \"title\": chunk.get(\"title\")]\n        } else if(chunk.get(\"webViewUrl\") != null){\n            citation = [ \"referenceUrl\":chunk.get(\"webViewUrl\"), \"knowledgeSourceType\": \"APPLICATION\", \"appName\": \"gdrive\"]\n        } else if(chunk.get(\"appName\") != null){\n            citation = [ \"knowledgeSourceType\": \"APPLICATION\", \"referenceUrl\":chunk.get(\"referenceUrl\"), \"name\" : chunk.get(\"name\"), \"appName\": chunk.get(\"appName\")]\n        }\n        else if(chunk.get(\"kind\") != null){\n            citation = [ \"knowledgeSourceType\": \"APPLICATION\", \"referenceUrl\":chunk.get(\"referenceUrl\"), \"name\" : chunk.get(\"name\"), \"appName\": \"gdrive\"]\n        }\n        else {\n            citation = [ \"knowledgeSourceType\": \"FILE\", \"referenceUrl\":chunk.get(\"referenceUrl\"), \"name\" : chunk.get(\"name\"), \"source\": chunk.get(\"source\")]\n        }\n        citation[\"chunkContents\"] = chunk[\"chunkContents\"]\n        citation[\"id\"] = chunk[\"id\"]\n        citation[\"author\"] = chunk[\"author\"]\n        citation[\"date\"] = chunk[\"date\"]\n\n        citations << citation\n    }\n\n    return citations\n}\n\ndef getFanAttachments(def attachments) {\n    def attachmentData = []\n    attachments.each { attachment -> \n            attachmentData <<  [id: attachment.id, 'name': attachment.name, url: attachment.data, fileType: attachment.fileType, mimeType: attachment.mimeType]\n    }\n    return attachmentData\n}\n\ndef getBrandAttachments(def attachments) {\n    def imageOrVideoData = []\n    def otherData = []\n    attachments.each { attachment -> \n        if (attachment.mimeType.contains(\"image\")) {\n            def imageOrVideo = [id: attachment.id, 'name': attachment.name, url: attachment.data, fileType: attachment.fileType, mimeType: attachment.mimeType]\n            if (attachment.caption != null && attachment.caption != \"\") {\n                imageOrVideo['caption'] = attachment.caption\n                imageOrVideo['showCaption'] = true\n            } else {\n                imageOrVideo['showCaption'] = false\n            }\n            imageOrVideoData << imageOrVideo\n        } else {\n            otherData <<  [id: attachment.id, 'name': attachment.name, url: attachment.data, fileType: attachment.fileType, mimeType: attachment.mimeType]\n        } \n    }\n    def returnData = []\n    if (imageOrVideoData) {\n        returnData.add([\"blockType\":\"Media\", \"data\":imageOrVideoData])\n    }\n    if (otherData) {\n        returnData.add([\"blockType\":\"Media\", \"data\":otherData])\n    }\n    return returnData\n}\n\n\ndef getChoicesContent(def choices) {\n    def data = [:]\n    int i=0\n    for (choice in choices) {\n        data.put(\"\"+i,getChoice(choice))\n        i++;\n    }\n    def result = [\n        \"blockType\":\"Stack\",\n        \"appearance\":[\n            \"alignItems\":\"flex-start\",\n            \"wrapContent\":true,\n            \"styles\":[\n                \"gap\":[\"all\":\"gap-md\"],\n                \"width\":\"w-full\" \n            ],\n            \"justifyContent\":\"flex-start\",\n            \"direction\":\"row\"\n        ],\n        \"data\":data\n    ]\n return result\n}\n\ndef detectHtmlContent(String text) {\n    try {\n        // Parse the text with Jsoup\n        Document document = Jsoup.parse(text)\n\n        // Check if the body contains any HTML elements\n        return !document.body().children().isEmpty()\n    } catch (Exception e) {\n        // If parsing fails, consider it not HTML\n        return false\n    }\n}\n\nreturn [\"html\": detectHtmlContent(text)]\n\ndef getChoice(def option) {\n    def optionId = option.id\n    if (!optionId) {\n        optionId = option.title\n    }\n    def events = []\n    if (option.url) {\n        def event = [\n            \"action\": [\n                \"actionType\": \"navigate\",\n                \"payload\": [\n                    \"path\": option.url,\n                    \"history\": \"push\",\n                    \"preserveSearchParams\": false,\n                    \"target\": \"_blank\"\n                ]\n            ],\n            \"id\": option.id,\n            \"eventType\": \"onClick\"\n        ]\n        events << event\n    }\n\n    def resp = [\n        \"content\":[\n            \"value\":option.title\n        ],\n        \"appearance\":[\n            \"color\":\"neutral\",\n            \"size\":\"sm\",\n            \"variant\":\"outline\",\n            /*\"styles\": [\n                \"width\":\"w-full\"\n            ]*/\n        ],\n        \"blockType\":\"Button\"\n    ]\n\n    if(option.url) {\n        resp.put('events', events)\n    }\n    return resp\n}\n",
				"parameters":{
					"chunkMetadata":{
						"ua:type":"mappedArray",
						"source":"{{ 6pk6u.outputs.result.chunkMetadata }}",
						"items":"{{ 6pk6u.outputs.result.chunkMetadata[0] }}"
					},
					"formattedMessages":{
						"ua:type":"mappedArray",
						"source":"{{ P0JOZ.outputs.result.Response }}",
						"items":"{{ P0JOZ.outputs.result.Response[0] }}"
					},
					"msg":"{{ MRd5o.outputs }}",
					"feedback":"{{ MU5aT.outputs.properties }}",
					"attachments":{
						"source":"{{ IdP95.outputs.attachments }}",
						"ua:type":"mappedArray",
						"items":"{{ IdP95.outputs.attachments[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":33,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"BNIP8-1",
			"id":"zRzEU",
			"index":14,
			"inputs":{
				"result":{
					"hasAttachments":"{{ 2pvTs.outputs.result.hasAttachments }}",
					"message":{
						"ua:type":"mappedArray",
						"items":{
							"data":"{{ 2pvTs.outputs.result.message[0].data }}",
							"blockType":"{{ 2pvTs.outputs.result.message[0].blockType }}",
							"appearance":"{{ 2pvTs.outputs.result.message[0].appearance }}"
						},
						"source":"{{ 2pvTs.outputs.result.message }}"
					},
					"caseId":"{{ 2pvTs.outputs.result.caseId }}",
					"createdTime":"{{ 2pvTs.outputs.result.createdTime }}",
					"messageId":"{{ 2pvTs.outputs.result.messageId }}",
					"feedback":"{{ 2pvTs.outputs.result.feedback }}",
					"contextMessageId":"{{ 2pvTs.outputs.result.contextMessageId }}",
					"attachments":{
						"source":"{{ 2pvTs.outputs.result.attachments }}",
						"ua:type":"mappedArray",
						"items":"{{ 2pvTs.outputs.result.attachments[0] }}"
					},
					"messageType":"{{ 2pvTs.outputs.result.messageType }}",
					"interfaceDetails":"{{ 2pvTs.outputs.result.interfaceDetails }}",
					"additional":"{{ 2pvTs.outputs.result.additional }}",
					"fromCustomerUserId":"{{ 2pvTs.outputs.result.fromCustomerUserId }}",
					"searchQueryId":"{{ 2pvTs.outputs.result.searchQueryId }}",
					"previewDetails":"{{ 2pvTs.outputs.result.previewDetails }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Return data to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1728,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"AI Agent"
	],
	"version":172
}