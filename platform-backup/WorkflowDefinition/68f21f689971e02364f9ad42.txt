{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1761468834693,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1761469228335,
		"deployedBy":39717,
		"deployedDefinitionId":"68fde32c22a8224e27f3d083",
		"status":"DEPLOYED",
		"version":3,
		"workflowVersion":92
	},
	"edges":[
		{
			"fromNodeId":"n_zdNF1",
			"priority":0,
			"skip":false,
			"toNodeId":"BVoEZ",
			"type":"next"
		},
		{
			"fromNodeId":"BVoEZ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_3YZD5",
			"type":"next"
		},
		{
			"fromNodeId":"n_3YZD5",
			"priority":0,
			"skip":false,
			"toNodeId":"n_V9AVu",
			"type":"next"
		},
		{
			"fromNodeId":"n_V9AVu",
			"name":"error",
			"priority":0,
			"skip":false,
			"toNodeId":"n_PVfte",
			"type":"error"
		},
		{
			"fromNodeId":"n_PVfte",
			"priority":0,
			"skip":false,
			"toNodeId":"_5b16V",
			"type":"next"
		},
		{
			"fromNodeId":"_5b16V",
			"priority":0,
			"skip":false,
			"toNodeId":"_IBUz5",
			"type":"next"
		},
		{
			"fromNodeId":"n_V9AVu",
			"priority":0,
			"skip":false,
			"toNodeId":"n_lU9dX",
			"type":"next"
		},
		{
			"fromNodeId":"_IBUz5",
			"priority":0,
			"skip":false,
			"toNodeId":"n_lU9dX",
			"type":"next"
		},
		{
			"fromNodeId":"n_lU9dX",
			"priority":0,
			"skip":false,
			"toNodeId":"_dOm8a",
			"type":"next"
		},
		{
			"fromNodeId":"_dOm8a",
			"name":"error",
			"priority":0,
			"skip":false,
			"toNodeId":"_9wjA1",
			"type":"error"
		},
		{
			"fromNodeId":"_9wjA1",
			"priority":0,
			"skip":false,
			"toNodeId":"_zohHv",
			"type":"next"
		},
		{
			"fromNodeId":"_zohHv",
			"priority":0,
			"skip":false,
			"toNodeId":"_p3OTb",
			"type":"next"
		},
		{
			"fromNodeId":"_dOm8a",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nXuOP",
			"type":"next"
		},
		{
			"fromNodeId":"_p3OTb",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nXuOP",
			"type":"next"
		},
		{
			"fromNodeId":"n_nXuOP",
			"priority":0,
			"skip":false,
			"toNodeId":"n_8P4XI",
			"type":"next"
		},
		{
			"fromNodeId":"n_8P4XI",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ePDTm",
			"type":"next"
		},
		{
			"fromNodeId":"n_ePDTm",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ZFRD7",
			"type":"next"
		},
		{
			"fromNodeId":"n_ZFRD7",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Pys1i",
			"type":"next"
		},
		{
			"fromNodeId":"n_Pys1i",
			"priority":0,
			"skip":false,
			"toNodeId":"n_do71L",
			"type":"next"
		}
	],
	"id":"68f21f689971e02364f9ad42",
	"lastModifiedBy":39717,
	"lcName":"mask v2",
	"modifiedTime":1761473187302,
	"name":"Mask V2",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"callables",
				"resourceVersion":49,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_zdNF1",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"result_batch":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"details":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"entity":{
													"type":"string",
													"title":"entity"
												},
												"mask":{
													"type":"object",
													"properties":{
														"end":{
															"type":"integer",
															"title":"end"
														},
														"operator":{
															"type":"string",
															"title":"operator"
														},
														"start":{
															"type":"integer",
															"title":"start"
														},
														"text":{
															"type":"string",
															"title":"text"
														}
													},
													"title":"mask",
													"additionalProperties":false
												},
												"original":{
													"type":"object",
													"properties":{
														"end":{
															"type":"integer",
															"title":"end"
														},
														"start":{
															"type":"integer",
															"title":"start"
														},
														"text":{
															"type":"string",
															"title":"text"
														}
													},
													"title":"original",
													"additionalProperties":false
												}
											},
											"additionalProperties":false
										},
										"title":"details"
									},
									"maskedText":{
										"type":"string",
										"title":"maskedText"
									},
									"original":{
										"type":"string",
										"title":"original"
									},
									"proceed":{
										"type":"boolean",
										"title":"proceed"
									}
								},
								"additionalProperties":false
							},
							"title":"result_batch"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"text_list":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"text_list"
						},
						"signal_id":{
							"type":"string",
							"title":"Signal Id"
						},
						"instanceId":{
							"type":"string",
							"title":"Instance Id"
						},
						"runTimetype":{
							"type":"string",
							"title":"Run Timetype"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":219,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"BVoEZ",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"execId":{
							"type":"string",
							"title":"Exec Id"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"execId":{
							"type":"string",
							"title":"Exec Id"
						}
					}
				},
				"code":"return [\"hostName\":com.unifyapps.infra.utils.EnvUtils.getHostName()]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"execId":"{{ __RUN__.outputs.executionId }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":35,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_3YZD5",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"maskedText":{
							"type":"string",
							"title":"Masked Text"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"text"
					],
					"properties":{
						"text":{
							"type":"string",
							"title":"Text"
						}
					}
				},
				"configurationMode":"DEFAULT",
				"code":"from presidio_analyzer import AnalyzerEngine\nfrom presidio_anonymizer import AnonymizerEngine\nfrom presidio_anonymizer.entities import OperatorConfig\n\n# Initialize engines\nanalyzer = AnalyzerEngine()\nanonymizer = AnonymizerEngine()\n\n# Example input text\ntext = \"My name is John Doe, my email is john.doe@example.com and my phone number is +1-202-555-0173.\"\n\n# Detect PII: PERSON, EMAIL_ADDRESS, PHONE_NUMBER\nanalyzer_results = analyzer.analyze(\n    text=text,\n    entities=[\"PERSON\", \"EMAIL_ADDRESS\", \"PHONE_NUMBER\"],\n    language=\"en\"\n)\n\n# Mask all 3 types of PII\nanonymized_result = anonymizer.anonymize(\n    text=text,\n    analyzer_results=analyzer_results,\n    operators={\n        \"PERSON\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 8, \"from_end\": False}),\n        \"EMAIL_ADDRESS\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 12, \"from_end\": False}),\n        \"PHONE_NUMBER\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 10, \"from_end\": False})\n    }\n)\n\nresult = {\"maskedText\": anonymized_result.text}\nprint(result)\n",
				"isAsync":false,
				"python_version":"3.12",
				"captureStdOutput":false,
				"parameters":{
					"text":""
				}
			},
			"skip":true,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.text_list.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":160,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"MANUAL",
			"groupId":"_5bsax-1",
			"id":"n_V9AVu",
			"index":4,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"text_list":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"text":{
										"type":"string",
										"title":"Text"
									},
									"language":{
										"type":"string",
										"title":"Language"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Text List"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"text_list":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Text List"
						}
					}
				},
				"configurationMode":"TEMPLATE",
				"code":"from langdetect import detect, DetectorFactory, LangDetectException\nfrom concurrent.futures import ThreadPoolExecutor, as_completed\nDetectorFactory.seed = 0\n\ndef detect_language(text):\n    if not text or not text.strip():\n        return {\"text\": text, \"language\": \"en\"}\n    try:\n        lang = detect(text)\n        return {\"text\": text, \"language\": lang}\n    except LangDetectException:\n        return {\"text\": text, \"language\": \"en\"}\n\n# Parallel processing\nwith ThreadPoolExecutor(max_workers=4) as executor:\n    final_text_list = list(executor.map(detect_language, text_list))\n\nresult = {\"text_list\": final_text_list}",
				"isAsync":false,
				"python_version":"3.12",
				"entityId":"e_68fdd937ce98a64729908bd1",
				"captureStdOutput":false,
				"parameters":{
					"text_list":{
						"source":"{{ n_zdNF1.outputs.text_list }}",
						"ua:type":"mappedArray",
						"items":"{{ n_zdNF1.outputs.text_list[0] }}"
					}
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"maxLeaseTimeUnit":"SECONDS",
					"maxWaitDurationUnit":"SECONDS"
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"count":10,
					"enabled":true,
					"initialDelay":200
				},
				"stepError":"MANUAL",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				},
				"timeoutConfig":{
					"enabled":false
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":880,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"CONTINUE",
			"groupId":"n_V9AVu@_5bsax-1@error",
			"id":"n_PVfte",
			"index":5,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"error_for_masking",
				"skipIfBlank":false,
				"record":{
					"signalId":"{{ n_zdNF1.outputs.signal_id }}",
					"executionId":"{{ __RUN__.outputs.executionId }}",
					"error":"{{ n_V9AVu.outputs }}"
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"maxLeaseTimeUnit":"SECONDS",
					"maxWaitDurationUnit":"SECONDS"
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				},
				"timeoutConfig":{
					"enabled":false
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.signal_payload.result_batch.items.details.items.entity",
					"root.signal_payload.result_batch.items.details.items.mask.end",
					"root.signal_payload.result_batch.items.details.items.mask.operator",
					"root.signal_payload.result_batch.items.details.items.mask.start",
					"root.signal_payload.result_batch.items.details.items.mask.text",
					"root.signal_payload.result_batch.items.details.items.original.end",
					"root.signal_payload.result_batch.items.details.items.original.start",
					"root.signal_payload.result_batch.items.details.items.original.text",
					"root.signal_payload.result_batch.items.maskedText",
					"root.signal_payload.result_batch.items.original",
					"root.signal_payload.result_batch.items.proceed"
				]
			},
			"context":{
				"appName":"signals_by_unifyapps",
				"resourceVersion":109,
				"resourceName":"signals_by_unifyapps_emit_signal",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_V9AVu@_5bsax-1@error",
			"id":"_5b16V",
			"index":6,
			"inputs":{
				"automation_id":"68f0ba4a32e3cc2f6745096f",
				"with_signal_id":true,
				"waitingInstanceRuntimeType":"{{ n_zdNF1.outputs.runTimetype }}",
				"waitingInstanceId":"{{ n_zdNF1.outputs.instanceId }}",
				"signal_id":"{{ n_zdNF1.outputs.signal_id }}",
				"nodeId":"n_ewODT"
			},
			"skip":true,
			"subTitle":"Signals by UnifyApps",
			"title":"Emit signal",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.result.result_batch.source",
					"root.result.result_batch.ua:type",
					"root.result.result_batch.items.details.source",
					"root.result.result_batch.items.details.ua:type",
					"root.result.result_batch.items.details.items.entity",
					"root.result.result_batch.items.details.items.mask.end",
					"root.result.result_batch.items.details.items.mask.operator",
					"root.result.result_batch.items.details.items.mask.start",
					"root.result.result_batch.items.details.items.mask.text",
					"root.result.result_batch.items.details.items.original.end",
					"root.result.result_batch.items.details.items.original.start",
					"root.result.result_batch.items.details.items.original.text",
					"root.result.result_batch.items.maskedText",
					"root.result.result_batch.items.original"
				]
			},
			"context":{
				"appName":"callables",
				"resourceVersion":49,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_V9AVu@_5bsax-1@error",
			"id":"_IBUz5",
			"index":7,
			"inputs":{
				"result":{
					"result_batch":{
						"source":"None",
						"ua:type":"mappedArray",
						"items":{
							"details":{
								"source":"None",
								"ua:type":"mappedArray",
								"items":{
									"entity":"None",
									"mask":{
										"end":"None",
										"operator":"None",
										"start":"None",
										"text":"None"
									},
									"original":{
										"end":"None",
										"start":"None",
										"text":"None"
									}
								}
							},
							"original":"None",
							"maskedText":"None"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":163,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_lU9dX",
			"index":8,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"startTime":{
							"type":"string",
							"title":"Start Time"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"startTime":"{{ __RUN__.outputs.executionId }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"startTime":{
							"type":"string",
							"title":"Start Time"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				},
				"visibleOptionalFields":[
					"root.parameters.text_list.items.text",
					"root.parameters.text_list.items.language"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":35,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"MANUAL",
			"groupId":"_5bsax-1",
			"id":"_dOm8a",
			"index":9,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"result_batch":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"original":{
										"type":"string",
										"title":"original"
									},
									"maskedText":{
										"type":"string",
										"title":"maskedText"
									},
									"details":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"entity":{
													"type":"string",
													"title":"entity"
												},
												"original":{
													"type":"object",
													"properties":{
														"text":{
															"type":"string",
															"title":"text"
														},
														"start":{
															"type":"integer",
															"title":"start"
														},
														"end":{
															"type":"integer",
															"title":"end"
														}
													},
													"title":"original",
													"additionalProperties":false
												},
												"detection":{
													"type":"object",
													"properties":{
														"score":{
															"type":"number",
															"title":"score"
														},
														"why":{
															"type":"object",
															"properties":{
																"recognizer":{
																	"type":"string",
																	"title":"recognizer"
																},
																"original_score":{
																	"type":"number",
																	"title":"original_score"
																},
																"textual_explanation":{
																	"type":"string",
																	"title":"textual_explanation"
																},
																"pattern_name":{
																	"type":"string",
																	"title":"pattern_name"
																},
																"pattern":{
																	"type":"string",
																	"title":"pattern"
																},
																"validation_result":{
																	"type":"boolean",
																	"title":"validation_result"
																}
															},
															"title":"why",
															"additionalProperties":false
														}
													},
													"title":"detection",
													"additionalProperties":false
												},
												"mask":{
													"type":"object",
													"properties":{
														"operator":{
															"type":"string",
															"title":"operator"
														},
														"text":{
															"type":"string",
															"title":"text"
														},
														"start":{
															"type":"integer",
															"title":"start"
														},
														"end":{
															"type":"integer",
															"title":"end"
														}
													},
													"title":"mask",
													"additionalProperties":false
												}
											},
											"additionalProperties":false
										},
										"title":"details"
									}
								},
								"additionalProperties":false
							},
							"title":"result_batch"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"text_list":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"text":{
										"type":"string",
										"title":"Text"
									},
									"language":{
										"type":"string",
										"title":"Language"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Text List"
						}
					}
				},
				"configurationMode":"TEMPLATE",
				"code":"import logging\nimport json\nfrom typing import List, Dict, Any, Optional\nfrom collections import defaultdict, deque\n\nfrom presidio_analyzer import AnalyzerEngine, RecognizerRegistry, Pattern, PatternRecognizer\nfrom presidio_analyzer.nlp_engine import NlpEngineProvider\nfrom presidio_anonymizer import AnonymizerEngine\nfrom presidio_anonymizer.entities import OperatorConfig\n\n\n\n# Initialize engines\nanalyzer = AnalyzerEngine()\nanonymizer = AnonymizerEngine()\nPRESIDIO_NLP_ENGINE = \"spacy\"\nPRESIDIO_SUPPORTED_MODELS = [\n  {\"lang_code\": \"de\", \"model_name\": \"de_core_news_lg\"},\n  {\"lang_code\": \"el\", \"model_name\": \"el_core_news_lg\"},\n  {\"lang_code\": \"en\", \"model_name\": \"en_core_web_lg\"}, \n  {\"lang_code\": \"es\", \"model_name\": \"es_core_news_lg\"} \n]\nPRESIDIO_LANGUAGE_IDENTIFIER = [\n  \"de\",\"el\",\"en\",\"es\"\n]\n\n# Define masking operators\noperators = {\n    \"PERSON\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 8, \"from_end\": False}),\n    \"EMAIL_ADDRESS\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 12, \"from_end\": False}),\n    \"EMAIL\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 12, \"from_end\": False}),\n    \"PHONE_NUMBER\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 10, \"from_end\": False}),\n    \"PHONE_NUMBER_REGEX\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 10, \"from_end\": False}),\n    \"PHONE_NUMBER_RECOGNIZER\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 10, \"from_end\": False}),\n    \"PHONE\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 10, \"from_end\": False}),\n}\nclass AnonymizationManager:\n    _instance = None\n\n    def __init__(self):\n        if AnonymizationManager._instance is not None:\n            raise RuntimeError(\"Use the 'instance()' method to get an instance.\")\n\n        # Initialize engines\n        self._anonymizer_instance = AnonymizerEngine()\n        self._nlp_engine = self._create_nlp_engine()\n        self._registry = self._create_registry()\n        self._analyzer_instance = self._create_analyzer_engine()\n        self._entities = self._get_supported_entities()\n\n    @classmethod\n    def instance(cls):\n        if cls._instance is None:\n            cls._instance = cls()\n        return cls._instance\n\n    def _create_nlp_engine(self):\n        analyzer_config = {\n            \"nlp_engine_name\": PRESIDIO_NLP_ENGINE,\n            \"models\": PRESIDIO_SUPPORTED_MODELS,\n        }\n        return NlpEngineProvider(nlp_configuration=analyzer_config).create_engine()\n\n    def _create_registry(self):\n        registry = RecognizerRegistry(supported_languages=PRESIDIO_LANGUAGE_IDENTIFIER)\n\n        registry.load_predefined_recognizers(\n            nlp_engine=self._nlp_engine,\n            languages=PRESIDIO_LANGUAGE_IDENTIFIER\n        )\n\n        self._load_custom_patterns(registry)\n\n        return registry\n\n    def _load_custom_patterns(self, registry):\n        patterns = [\n            (\"PHONE_NUMBER_REGEX\", r\"(([+]{1}[1-9]{1}[0-9]{0,2}[ ]{1}([1-9]{1}[0-9]{1,4}){1}[ ]{1}([1-9]{1}[0-9]{2,6}){1}([ -][0-9]{1,5})?)|([0]{1}[1-9]{1}[0-9]{1,4}[ ]{1}[0-9]{1,8}([ -][0-9]{1,8})?)?)\"),\n            (\"PHONE_NUMBER_RECOGNIZER\", r\"(?:\\+\\d{1,2}\\s*)?(?:\\(\\d{3}\\)|\\d{3})[-.\\s]?\\d{3}[-.\\s]?\\d{4}\"),\n            (\"EMAIL\", r\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\"),\n            (\"PHONE_NUMBER\", r\"(\\+[0-9]{1,3}\\s*)?[0-9]{6,16}\"),\n        ]\n\n        for idx, (name, regex) in enumerate(patterns):\n            pattern_name = f\"{name}_{idx}\" if idx > 0 else name\n            for lan in PRESIDIO_LANGUAGE_IDENTIFIER:\n                pattern = PatternRecognizer(\n                    supported_entity=name,\n                    supported_language=lan,\n                    patterns=[Pattern(name=pattern_name, regex=regex, score=0.6)],\n                )\n                registry.add_recognizer(pattern)\n\n    def _create_analyzer_engine(self):\n        return AnalyzerEngine(\n            nlp_engine=self._nlp_engine,\n            registry=self._registry,\n            supported_languages=PRESIDIO_LANGUAGE_IDENTIFIER,\n        )\n\n    def _get_supported_entities(self):\n        entities=[]\n        for lan in PRESIDIO_LANGUAGE_IDENTIFIER:\n            all_entities = self._analyzer_instance.get_supported_entities(language=lan)\n            # Return entities that we have operators for\n            entities.append(entity for entity in all_entities if entity in operators)\n        \n        return entities\n\n    def get_instances(self):\n        return self._analyzer_instance, self._anonymizer_instance, self._entities\n\n    @staticmethod\n    def _explain(result) -> Optional[Dict[str, Any]]:\n        if not getattr(result, \"analysis_explanation\", None):\n            return None\n        try:\n            ex = result.analysis_explanation.to_dict()\n            return {\n                \"recognizer\": ex.get(\"recognizer\"),\n                \"pattern_name\": ex.get(\"pattern_name\"),\n                \"pattern\": ex.get(\"pattern\"),\n                \"original_score\": ex.get(\"original_score\"),\n                \"validation_result\": ex.get(\"validation_result\"),\n                \"textual_explanation\": ex.get(\"textual_explanation\"),\n            }\n        except Exception:\n            # Fallback: best-effort textual explanation\n            try:\n                return {\"textual_explanation\": getattr(result.analysis_explanation, \"textual_explanation\", None)}\n            except Exception:\n                return None\n\n    def anonymize_text_with_details(self,text: str,language:str) -> Dict[str, Any]:\n        analyzer, anonymizer, entities = self.get_instances()\n        # lang_detector = LanguageDetectorEngine()\n        # detected = lang_detector.predict_language(text)\n        # # predicted_lang is something like 'de' or 'en' — check the detector API you use\n        # predicted_lang = detected[0].language\n        # 1) Detect PII with decision process enabled (so we can explain 'why')\n        # lang = \"de\"\n        # if \"Describe\" in text:\n        #     lang = \"en\"\n        # lang_detector = LanguageDetectorEngine()\n        # detected = lang_detector.predict_language(text)\n        # predicted_lang is something like 'de' or 'en' — check the detector API you use\n        # predicted_lang = detected[0].language    \n\n        if language not in PRESIDIO_LANGUAGE_IDENTIFIER:\n            language=\"en\"\n        analyzer_results = analyzer.analyze(\n            text=text,\n            entities=list(operators.keys()),\n            language= language,\n            return_decision_process=True\n        )\n    \n        # 2) Anonymize using our operators\n        anonymized = anonymizer.anonymize(\n            text=text,\n            analyzer_results=analyzer_results,\n            operators=operators\n        )\n    \n        # 3) Normalize anonymizer items to dicts with start/end/operator/masked text\n        #    Using to_json() keeps behavior stable across versions.\n        anon_payload = json.loads(anonymized.to_json())\n        anon_items: List[Dict[str, Any]] = sorted(anon_payload.get(\"items\", []), key=lambda x: (x.get(\"start\", 0), x.get(\"end\", 0)))\n    \n        # 4) Build a per-entity report. We align by entity_type and order.\n        #    Note: in rare overlap/conflict cases, anonymizer may drop/merge some detections.\n        #    This greedy pairing by entity type reflects the final applied operations.\n        from collections import defaultdict, deque\n        items_by_type: Dict[str, deque] = defaultdict(deque)\n        for it in anon_items:\n            items_by_type[it.get(\"entity_type\")].append(it)\n    \n        detailed = []\n        for r in sorted(analyzer_results, key=lambda x: (x.start, x.end)):\n            original_substr = text[r.start:r.end]\n            masked_item = items_by_type[r.entity_type].popleft() if items_by_type.get(r.entity_type) else None\n    \n            entry = {\n                \"entity\": r.entity_type,\n                \"original\": {\n                    \"text\": original_substr,\n                    \"start\": r.start,\n                    \"end\": r.end\n                },\n                \"detection\": {\n                    \"score\": round(float(getattr(r, \"score\", 0.0)), 4),\n                    \"why\": self._explain(r)\n                },\n                \"mask\": None\n            }\n    \n            if masked_item:\n                entry[\"mask\"] = {\n                    \"operator\": masked_item.get(\"operator\"),\n                    \"text\": masked_item.get(\"text\"),               # masked value after operator\n                    \"start\": masked_item.get(\"start\"),             # indexes in anonymized text\n                    \"end\": masked_item.get(\"end\")\n                }\n    \n            detailed.append(entry)\n    \n        return {\n            \"original\": text,\n            \"maskedText\": anonymized.text,\n            \"details\": detailed\n        }\n\n    def anonymize_texts_with_details(self,texts: List[Dict[str,str]]) -> List[Dict[str, Any]]:\n        \"\"\"Batch analyze + anonymize with per-text details.\"\"\"\n        return [self.anonymize_text_with_details(t.get(\"text\"),t.get(\"language\")) for t in texts]\n\nmanager = AnonymizationManager.instance()\nbatch = manager.anonymize_texts_with_details(text_list)\n\nresult = {\n    \"result_batch\": batch\n}",
				"isAsync":false,
				"python_version":"3.12",
				"entityId":"e_68fdd937ce98a64729908bd1",
				"captureStdOutput":false,
				"parameters":{
					"text_list":{
						"ua:type":"mappedArray",
						"items":{
							"text":"{{ n_V9AVu.outputs.result.text_list[0].text }}",
							"language":"{{ n_V9AVu.outputs.result.text_list[0].language }}"
						},
						"source":"{{ n_V9AVu.outputs.result.text_list }}"
					}
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"maxLeaseTimeUnit":"SECONDS",
					"maxWaitDurationUnit":"SECONDS"
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"count":10,
					"enabled":true,
					"initialDelay":200
				},
				"stepError":"MANUAL",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				},
				"timeoutConfig":{
					"enabled":false,
					"unit":"SECONDS"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":880,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"CONTINUE",
			"groupId":"_dOm8a@_5bsax-1@error",
			"id":"_9wjA1",
			"index":10,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"error_for_masking",
				"skipIfBlank":false,
				"record":{
					"signalId":"{{ n_zdNF1.outputs.signal_id }}",
					"executionId":"{{ __RUN__.outputs.executionId }}",
					"error":"{{ _dOm8a.outputs }}"
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"maxLeaseTimeUnit":"SECONDS",
					"maxWaitDurationUnit":"SECONDS"
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				},
				"timeoutConfig":{
					"enabled":false
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.signal_payload.result_batch.items.details.items.entity",
					"root.signal_payload.result_batch.items.details.items.mask.end",
					"root.signal_payload.result_batch.items.details.items.mask.operator",
					"root.signal_payload.result_batch.items.details.items.mask.start",
					"root.signal_payload.result_batch.items.details.items.mask.text",
					"root.signal_payload.result_batch.items.details.items.original.end",
					"root.signal_payload.result_batch.items.details.items.original.start",
					"root.signal_payload.result_batch.items.details.items.original.text",
					"root.signal_payload.result_batch.items.maskedText",
					"root.signal_payload.result_batch.items.original",
					"root.signal_payload.result_batch.items.proceed"
				]
			},
			"context":{
				"appName":"signals_by_unifyapps",
				"resourceVersion":109,
				"resourceName":"signals_by_unifyapps_emit_signal",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_dOm8a@_5bsax-1@error",
			"id":"_zohHv",
			"index":11,
			"inputs":{
				"automation_id":"68f0ba4a32e3cc2f6745096f",
				"with_signal_id":true,
				"waitingInstanceRuntimeType":"{{ n_zdNF1.outputs.runTimetype }}",
				"waitingInstanceId":"{{ n_zdNF1.outputs.instanceId }}",
				"signal_id":"{{ n_zdNF1.outputs.signal_id }}",
				"nodeId":"n_ewODT"
			},
			"skip":true,
			"subTitle":"Signals by UnifyApps",
			"title":"Emit signal",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.result.result_batch.source",
					"root.result.result_batch.ua:type",
					"root.result.result_batch.items.details.source",
					"root.result.result_batch.items.details.ua:type",
					"root.result.result_batch.items.details.items.entity",
					"root.result.result_batch.items.details.items.mask.end",
					"root.result.result_batch.items.details.items.mask.operator",
					"root.result.result_batch.items.details.items.mask.start",
					"root.result.result_batch.items.details.items.mask.text",
					"root.result.result_batch.items.details.items.original.end",
					"root.result.result_batch.items.details.items.original.start",
					"root.result.result_batch.items.details.items.original.text",
					"root.result.result_batch.items.maskedText",
					"root.result.result_batch.items.original"
				]
			},
			"context":{
				"appName":"callables",
				"resourceVersion":49,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_dOm8a@_5bsax-1@error",
			"id":"_p3OTb",
			"index":12,
			"inputs":{
				"result":{
					"result_batch":{
						"source":"None",
						"ua:type":"mappedArray",
						"items":{
							"details":{
								"source":"None",
								"ua:type":"mappedArray",
								"items":{
									"entity":"None",
									"mask":{
										"end":"None",
										"operator":"None",
										"start":"None",
										"text":"None"
									},
									"original":{
										"end":"None",
										"start":"None",
										"text":"None"
									}
								}
							},
							"original":"None",
							"maskedText":"None"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":87,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_nXuOP",
			"index":13,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"original":{
											"type":"string",
											"title":"original"
										},
										"maskedText":{
											"type":"string",
											"title":"maskedText"
										},
										"details":{
											"type":"array",
											"items":{
												"type":"object",
												"properties":{
													"entity":{
														"type":"string",
														"title":"entity"
													},
													"original":{
														"type":"object",
														"properties":{},
														"title":"original",
														"additionalProperties":false,
														"required":[]
													},
													"mask":{
														"type":"object",
														"properties":{},
														"title":"mask",
														"additionalProperties":false,
														"required":[]
													}
												},
												"additionalProperties":false,
												"required":[]
											},
											"title":"details"
										}
									},
									"additionalProperties":false
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"List",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"List",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"original":{
										"type":"string",
										"title":"original"
									},
									"maskedText":{
										"type":"string",
										"title":"maskedText"
									},
									"details":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"entity":{
													"type":"string",
													"title":"entity"
												},
												"original":{
													"type":"object",
													"properties":{},
													"title":"original",
													"additionalProperties":false,
													"required":[]
												},
												"mask":{
													"type":"object",
													"properties":{},
													"title":"mask",
													"additionalProperties":false,
													"required":[]
												}
											},
											"additionalProperties":false,
											"required":[]
										},
										"title":"details"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":97,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_8P4XI",
			"index":14,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"original":{
											"type":"string",
											"title":"original"
										},
										"maskedText":{
											"type":"string",
											"title":"maskedText"
										},
										"details":{
											"type":"array",
											"items":{
												"type":"object",
												"properties":{
													"entity":{
														"type":"string",
														"title":"entity"
													},
													"original":{
														"type":"object",
														"properties":{
															"text":{
																"type":"string",
																"title":"text"
															},
															"start":{
																"type":"integer",
																"title":"start"
															},
															"end":{
																"type":"integer",
																"title":"end"
															}
														},
														"title":"original",
														"additionalProperties":false
													},
													"mask":{
														"type":"object",
														"properties":{
															"operator":{
																"type":"string",
																"title":"operator"
															},
															"text":{
																"type":"string",
																"title":"text"
															},
															"start":{
																"type":"integer",
																"title":"start"
															},
															"end":{
																"type":"integer",
																"title":"end"
															}
														},
														"title":"mask",
														"additionalProperties":false
													}
												},
												"additionalProperties":false,
												"required":[]
											},
											"title":"details"
										}
									},
									"additionalProperties":false
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"final",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"final",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"original":{
										"type":"string",
										"title":"original"
									},
									"maskedText":{
										"type":"string",
										"title":"maskedText"
									},
									"details":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"entity":{
													"type":"string",
													"title":"entity"
												},
												"original":{
													"type":"object",
													"properties":{
														"text":{
															"type":"string",
															"title":"text"
														},
														"start":{
															"type":"integer",
															"title":"start"
														},
														"end":{
															"type":"integer",
															"title":"end"
														}
													},
													"title":"original",
													"additionalProperties":false
												},
												"mask":{
													"type":"object",
													"properties":{
														"operator":{
															"type":"string",
															"title":"operator"
														},
														"text":{
															"type":"string",
															"title":"text"
														},
														"start":{
															"type":"integer",
															"title":"start"
														},
														"end":{
															"type":"integer",
															"title":"end"
														}
													},
													"title":"mask",
													"additionalProperties":false
												}
											},
											"additionalProperties":false,
											"required":[]
										},
										"title":"details"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_ePDTm",
			"index":15,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"regexPatterns":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"behaviour":{
										"type":"string",
										"title":"behaviour"
									},
									"name":{
										"type":"string",
										"title":"name"
									},
									"pattern":{
										"type":"string",
										"title":"pattern"
									}
								},
								"additionalProperties":false
							},
							"title":"regexPatterns"
						}
					}
				},
				"jsonString":"{\"regexPatterns\":[{\"behaviour\":\"mask\",\"name\":\"Email Masking\",\"pattern\":\"[\\\\w._%+-]+@[\\\\w.-]+\\\\.[A-Za-z]{2,}\"},{\"behaviour\":\"mask\",\"name\":\"Mobile Number Masking (India)\",\"pattern\":\"(?:\\\\+?91[\\\\-\\\\s]?)?[6-9]\\\\d{9}\"},{\"behaviour\":\"mask\",\"name\":\"Generic Phone Number Masking (Global)\",\"pattern\":\"\\\\b\\\\d{3}[-.\\\\s]?\\\\d{3}[-.\\\\s]?\\\\d{4}\\\\b\"}]}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":123,
				"resourceName":"callables_call_automation_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_ZFRD7",
			"index":16,
			"inputs":{
				"automationId":"68f238150a355f57dc3a5f65",
				"runtimeConnections":{},
				"synchronous":true,
				"distributeWorkflowLoad":false,
				"parametersList":[
					{
						"result_batch":{
							"source":"{{ _dOm8a.outputs.result.result_batch }}",
							"ua:type":"mappedArray",
							"items":{
								"details":{
									"source":"{{ _dOm8a.outputs.result.result_batch[0].details }}",
									"ua:type":"mappedArray",
									"items":{
										"entity":"{{ _dOm8a.outputs.result.result_batch[0].details[0].entity }}",
										"mask":{
											"end":"{{ _dOm8a.outputs.result.result_batch[0].details[0].mask.end }}",
											"operator":"{{ _dOm8a.outputs.result.result_batch[0].details[0].mask.operator }}",
											"start":"{{ _dOm8a.outputs.result.result_batch[0].details[0].mask.start }}",
											"text":"{{ _dOm8a.outputs.result.result_batch[0].details[0].mask.text }}"
										},
										"original":{
											"end":"{{ _dOm8a.outputs.result.result_batch[0].details[0].original.end }}",
											"start":"{{ _dOm8a.outputs.result.result_batch[0].details[0].original.start }}",
											"text":"{{ _dOm8a.outputs.result.result_batch[0].details[0].original.text }}"
										}
									}
								},
								"maskedText":"{{ _dOm8a.outputs.result.result_batch[0].maskedText }}",
								"original":"{{ _dOm8a.outputs.result.result_batch[0].original }}"
							}
						}
					}
				],
				"version":"-1"
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.signal_payload.result_batch.items.details.items.entity",
					"root.signal_payload.result_batch.items.details.items.mask.end",
					"root.signal_payload.result_batch.items.details.items.mask.operator",
					"root.signal_payload.result_batch.items.details.items.mask.start",
					"root.signal_payload.result_batch.items.details.items.mask.text",
					"root.signal_payload.result_batch.items.details.items.original.end",
					"root.signal_payload.result_batch.items.details.items.original.start",
					"root.signal_payload.result_batch.items.details.items.original.text",
					"root.signal_payload.result_batch.items.maskedText",
					"root.signal_payload.result_batch.items.original",
					"root.signal_payload.result_batch.items.proceed"
				]
			},
			"context":{
				"appName":"signals_by_unifyapps",
				"resourceVersion":109,
				"resourceName":"signals_by_unifyapps_emit_signal",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_Pys1i",
			"index":17,
			"inputs":{
				"automation_id":"68f0ba4a32e3cc2f6745096f",
				"with_signal_id":true,
				"waitingInstanceRuntimeType":"{{ n_zdNF1.outputs.runTimetype }}",
				"waitingInstanceId":"{{ n_zdNF1.outputs.instanceId }}",
				"signal_id":"{{ n_zdNF1.outputs.signal_id }}",
				"signal_payload":{
					"result_batch":{
						"source":"{{ n_ZFRD7.outputs.result[0].result_batch }}",
						"ua:type":"mappedArray",
						"items":{
							"details":{
								"source":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details }}",
								"ua:type":"mappedArray",
								"items":{
									"entity":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].entity }}",
									"mask":{
										"end":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].mask.end }}",
										"operator":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].mask.operator }}",
										"start":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].mask.start }}",
										"text":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].mask.text }}"
									},
									"original":{
										"end":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].original.end }}",
										"start":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].original.start }}",
										"text":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].original.text }}"
									}
								}
							},
							"maskedText":"{{ n_ZFRD7.outputs.result[0].result_batch[0].maskedText }}",
							"original":"{{ n_ZFRD7.outputs.result[0].result_batch[0].original }}"
						}
					}
				},
				"nodeId":"n_ewODT"
			},
			"skip":true,
			"subTitle":"Signals by UnifyApps",
			"title":"Emit signal",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.result.result_batch.source",
					"root.result.result_batch.ua:type",
					"root.result.result_batch.items.details.source",
					"root.result.result_batch.items.details.ua:type",
					"root.result.result_batch.items.details.items.entity",
					"root.result.result_batch.items.details.items.mask.end",
					"root.result.result_batch.items.details.items.mask.operator",
					"root.result.result_batch.items.details.items.mask.start",
					"root.result.result_batch.items.details.items.mask.text",
					"root.result.result_batch.items.details.items.original.end",
					"root.result.result_batch.items.details.items.original.start",
					"root.result.result_batch.items.details.items.original.text",
					"root.result.result_batch.items.maskedText",
					"root.result.result_batch.items.original"
				]
			},
			"context":{
				"appName":"callables",
				"resourceVersion":49,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_do71L",
			"index":18,
			"inputs":{
				"result":{
					"result_batch":{
						"ua:type":"mappedArray",
						"items":{
							"details":{
								"ua:type":"mappedArray",
								"items":{
									"mask":{
										"end":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].mask.end }}",
										"operator":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].mask.operator }}",
										"start":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].mask.start }}",
										"text":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].mask.text }}"
									},
									"original":{
										"end":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].original.end }}",
										"start":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].original.start }}",
										"text":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].original.text }}"
									},
									"entity":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details[0].entity }}"
								},
								"source":"{{ n_ZFRD7.outputs.result[0].result_batch[0].details }}"
							},
							"maskedText":"{{ n_ZFRD7.outputs.result[0].result_batch[0].maskedText }}",
							"original":"{{ n_ZFRD7.outputs.result[0].result_batch[0].original }}"
						},
						"source":"{{ n_ZFRD7.outputs.result[0].result_batch }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":39717,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":93
}