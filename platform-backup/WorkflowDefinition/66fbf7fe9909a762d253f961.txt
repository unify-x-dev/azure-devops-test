{
	"appsUsed":[
		
	],
	"createdTime":1730893228961,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296232673,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfd28672fcc41fb70f1a2",
		"status":"DEPLOYED",
		"version":121,
		"workflowVersion":214
	},
	"edges":[
		{
			"fromNodeId":"GLN8g",
			"priority":0,
			"skip":false,
			"toNodeId":"FkiBn",
			"type":"next"
		},
		{
			"fromNodeId":"FkiBn",
			"priority":0,
			"skip":false,
			"toNodeId":"_esji7",
			"type":"next"
		},
		{
			"fromNodeId":"_esji7",
			"priority":0,
			"skip":false,
			"toNodeId":"rYTim",
			"type":"next"
		},
		{
			"fromNodeId":"rYTim",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"0nm31",
			"type":"next"
		},
		{
			"fromNodeId":"rYTim",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_4935D",
			"type":"if"
		},
		{
			"fromNodeId":"0nm31",
			"priority":0,
			"skip":false,
			"toNodeId":"_4935D",
			"type":"next"
		},
		{
			"fromNodeId":"_4935D",
			"priority":0,
			"skip":false,
			"toNodeId":"RWnC9",
			"type":"next"
		},
		{
			"fromNodeId":"RWnC9",
			"priority":0,
			"skip":false,
			"toNodeId":"IuZQB",
			"type":"next"
		},
		{
			"fromNodeId":"IuZQB",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_QwUd3",
			"type":"if"
		},
		{
			"fromNodeId":"n_QwUd3",
			"priority":0,
			"skip":false,
			"toNodeId":"2lXzN",
			"type":"next"
		},
		{
			"fromNodeId":"2lXzN",
			"priority":0,
			"skip":false,
			"toNodeId":"twUCz",
			"type":"next"
		},
		{
			"fromNodeId":"twUCz",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"HMxsE",
			"type":"next"
		},
		{
			"fromNodeId":"twUCz",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"6flq0",
			"type":"if"
		},
		{
			"fromNodeId":"HMxsE",
			"priority":0,
			"skip":false,
			"toNodeId":"6flq0",
			"type":"next"
		},
		{
			"fromNodeId":"_8MglH",
			"priority":0,
			"skip":false,
			"toNodeId":"6flq0",
			"type":"next"
		},
		{
			"fromNodeId":"_5mjD4",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"6flq0",
			"type":"next"
		},
		{
			"fromNodeId":"6flq0",
			"priority":0,
			"skip":false,
			"toNodeId":"_sIrs0",
			"type":"loop"
		},
		{
			"fromNodeId":"_sIrs0",
			"priority":0,
			"skip":false,
			"toNodeId":"_5mjD4",
			"type":"next"
		},
		{
			"fromNodeId":"_5mjD4",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_8MglH",
			"type":"if"
		},
		{
			"fromNodeId":"IuZQB",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_Y7TRP",
			"type":"next"
		},
		{
			"fromNodeId":"_Y7TRP",
			"priority":0,
			"skip":false,
			"toNodeId":"Hh1FZ",
			"type":"next"
		},
		{
			"fromNodeId":"Hh1FZ",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"Hh1FZ@1",
			"type":"branch"
		},
		{
			"fromNodeId":"Hh1FZ@1",
			"priority":0,
			"skip":false,
			"toNodeId":"sAi0U",
			"type":"next"
		},
		{
			"fromNodeId":"sAi0U",
			"priority":0,
			"skip":false,
			"toNodeId":"7abtV",
			"type":"loop"
		},
		{
			"fromNodeId":"7abtV",
			"priority":0,
			"skip":false,
			"toNodeId":"GuhnN",
			"type":"next"
		},
		{
			"fromNodeId":"GuhnN",
			"priority":0,
			"skip":false,
			"toNodeId":"FRDHE",
			"type":"next"
		},
		{
			"fromNodeId":"FRDHE",
			"priority":0,
			"skip":false,
			"toNodeId":"rOcjB",
			"type":"next"
		},
		{
			"fromNodeId":"rOcjB",
			"priority":0,
			"skip":false,
			"toNodeId":"_6Tazv",
			"type":"loop"
		},
		{
			"fromNodeId":"_6Tazv",
			"priority":0,
			"skip":false,
			"toNodeId":"37fbi",
			"type":"next"
		},
		{
			"fromNodeId":"37fbi",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_RwQyB",
			"type":"if"
		},
		{
			"fromNodeId":"_RwQyB",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"rOcjB",
			"type":"next"
		},
		{
			"fromNodeId":"37fbi",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"rOcjB",
			"type":"next"
		},
		{
			"fromNodeId":"rOcjB",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"sAi0U",
			"type":"next"
		},
		{
			"fromNodeId":"Hh1FZ",
			"name":"2",
			"priority":0,
			"skip":false,
			"toNodeId":"Hh1FZ@2",
			"type":"branch"
		},
		{
			"fromNodeId":"Hh1FZ@2",
			"priority":0,
			"skip":false,
			"toNodeId":"IoW77",
			"type":"next"
		},
		{
			"fromNodeId":"IoW77",
			"priority":0,
			"skip":false,
			"toNodeId":"ProR9",
			"type":"loop"
		},
		{
			"fromNodeId":"ProR9",
			"priority":0,
			"skip":false,
			"toNodeId":"w4yrY",
			"type":"next"
		},
		{
			"fromNodeId":"w4yrY",
			"priority":0,
			"skip":false,
			"toNodeId":"7KOek",
			"type":"next"
		},
		{
			"fromNodeId":"7KOek",
			"priority":0,
			"skip":false,
			"toNodeId":"PDdgc",
			"type":"next"
		},
		{
			"fromNodeId":"PDdgc",
			"priority":0,
			"skip":false,
			"toNodeId":"p6dHm",
			"type":"loop"
		},
		{
			"fromNodeId":"p6dHm",
			"priority":0,
			"skip":false,
			"toNodeId":"xS74B",
			"type":"next"
		},
		{
			"fromNodeId":"xS74B",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_t7QMk",
			"type":"if"
		},
		{
			"fromNodeId":"n_t7QMk",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"PDdgc",
			"type":"next"
		},
		{
			"fromNodeId":"xS74B",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"PDdgc",
			"type":"next"
		},
		{
			"fromNodeId":"PDdgc",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"IoW77",
			"type":"next"
		},
		{
			"fromNodeId":"Hh1FZ",
			"name":"3",
			"priority":0,
			"skip":false,
			"toNodeId":"Hh1FZ@3",
			"type":"branch"
		},
		{
			"fromNodeId":"Hh1FZ@3",
			"priority":0,
			"skip":false,
			"toNodeId":"L4XLa",
			"type":"next"
		},
		{
			"fromNodeId":"L4XLa",
			"priority":0,
			"skip":false,
			"toNodeId":"f4YJQ",
			"type":"loop"
		},
		{
			"fromNodeId":"f4YJQ",
			"priority":0,
			"skip":false,
			"toNodeId":"EASB5",
			"type":"next"
		},
		{
			"fromNodeId":"EASB5",
			"priority":0,
			"skip":false,
			"toNodeId":"fqKGk",
			"type":"next"
		},
		{
			"fromNodeId":"fqKGk",
			"priority":0,
			"skip":false,
			"toNodeId":"4dDhK",
			"type":"next"
		},
		{
			"fromNodeId":"4dDhK",
			"priority":0,
			"skip":false,
			"toNodeId":"_JF9v7",
			"type":"loop"
		},
		{
			"fromNodeId":"_JF9v7",
			"priority":0,
			"skip":false,
			"toNodeId":"_SkURy",
			"type":"next"
		},
		{
			"fromNodeId":"_SkURy",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_e5lf8",
			"type":"if"
		},
		{
			"fromNodeId":"_e5lf8",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"4dDhK",
			"type":"next"
		},
		{
			"fromNodeId":"_SkURy",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"4dDhK",
			"type":"next"
		},
		{
			"fromNodeId":"4dDhK",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"L4XLa",
			"type":"next"
		},
		{
			"fromNodeId":"Hh1FZ",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Z9BIF",
			"type":"branch"
		},
		{
			"fromNodeId":"6flq0",
			"priority":0,
			"skip":false,
			"toNodeId":"iDVR3",
			"type":"next"
		},
		{
			"fromNodeId":"sAi0U",
			"priority":0,
			"skip":false,
			"toNodeId":"iDVR3",
			"type":"next"
		},
		{
			"fromNodeId":"IoW77",
			"priority":0,
			"skip":false,
			"toNodeId":"iDVR3",
			"type":"next"
		},
		{
			"fromNodeId":"L4XLa",
			"priority":0,
			"skip":false,
			"toNodeId":"iDVR3",
			"type":"next"
		},
		{
			"fromNodeId":"n_Z9BIF",
			"priority":0,
			"skip":false,
			"toNodeId":"iDVR3",
			"type":"next"
		},
		{
			"fromNodeId":"iDVR3",
			"priority":0,
			"skip":false,
			"toNodeId":"CKP0b",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"66fbf7fe9909a762d253f961",
	"lastModifiedBy":0,
	"lcName":"excel row data as chunk generator",
	"modifiedTime":1761722774143,
	"name":"Excel Row Data as Chunk Generator",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":0,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"eE2kN-1",
			"id":"GLN8g",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"chunks":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"text":{
										"type":"string",
										"title":"Text"
									}
								},
								"additionalProperties":false
							},
							"title":"Chunks",
							"required":[]
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"fileDetails":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"File Details"
						},
						"knowledgeId":{
							"type":"string",
							"title":"Knowledge Id"
						},
						"mimeType":{
							"type":"string",
							"title":"Mime Type"
						},
						"sharedWithIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Shared With Ids"
						},
						"chunkMetadata":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Chunk Metadata"
						},
						"knowledgeVersion":{
							"type":"number",
							"title":"Knowledge Version"
						},
						"authorEmail":{
							"type":"string",
							"title":"Author Email"
						},
						"uniqueEntityId":{
							"type":"string",
							"title":"Unique Entity Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger from automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":316,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"eE2kN-1",
			"id":"FkiBn",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"mimeType":{
							"type":"string",
							"title":"Mime Type"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"mimeType1":{
							"type":"string",
							"title":"Mime Type"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def mimeToExtension = [\n    \"application/vnd.ms-excel\"                                         : \"xls\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": \"xlsx\",\n    \"application/vnd.ms-excel.sheet.binary.macroenabled.12\"            : \"xlsb\", // XLSB support\n    \"text/csv\"                                                         : \"csv\",\n    \"csv\"                                                              : \"csv\"\n]\n\nreturn [\n   'mimeType' : mimeToExtension.get(mimeType1)\n]",
				"parameters":{
					"mimeType1":"{{ GLN8g.outputs.mimeType }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":135,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"eE2kN-1",
			"id":"_esji7",
			"index":3,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"text":{
											"type":"string",
											"title":"Text"
										}
									},
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"List",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"List",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"text":{
										"type":"string",
										"title":"Text"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":285,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"eE2kN-1",
			"id":"rYTim",
			"index":4,
			"inputs":{
				"filters":[
					{
						"property":"{{ FkiBn.outputs.result.mimeType }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":304,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rYTim@eE2kN-1@n",
			"id":"0nm31",
			"index":5,
			"inputs":{
				"result":{
					"chunks":{
						"source":"{{ _esji7.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"text":"{{ _esji7.outputs.items[0].text }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":30,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"eE2kN-1",
			"id":"_4935D",
			"index":6,
			"inputs":{
				"file":"{{ GLN8g.outputs.fileDetails }}",
				"expiryTime":1
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":276,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"eE2kN-1",
			"id":"RWnC9",
			"index":7,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"iscsv":{
							"type":"boolean",
							"title":"Iscsv"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"def is_csv_url(url):\n    import requests\n    import magic\n    from urllib.parse import urlparse\n    mimetype = \"Unknown\"\n    path = urlparse(url).path\n\n    if path.lower().endswith('.csv'):\n        return True, \"text/csv\"\n\n    try:\n        head = requests.head(url, timeout=5,verify=False)\n        content_type = head.headers.get('Content-Type', '').lower()\n        if 'csv' in content_type:\n            return iscsv,content_type\n    except Exception:\n        pass\n\n    try:\n        response = requests.get(url, timeout=10, verify=False)\n        mime = magic.Magic(mime=True)\n        mimetype = mime.from_buffer(response.content)\n        is_csv = mimetype in [\"text/csv\", \"text/plain\"]\n        return is_csv,mimetype\n    except Exception:\n        return False,mimetype\n\nis_csv,mimetype = is_csv_url(url)\nresult = {\n            \"iscsv\": is_csv,\n           \"mimeType\" : mimetype if mimetype else \"Unknown\"\n         }",
				"isAsync":false,
				"parameters":{
					"url":"{{ _4935D.outputs.url }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":285,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"eE2kN-1",
			"id":"IuZQB",
			"index":8,
			"inputs":{
				"filters":[
					{
						"property":"{{ RWnC9.outputs.result.iscsv }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Is Csv or Excel",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IuZQB@eE2kN-1@y",
			"id":"n_QwUd3",
			"index":9,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"imports":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Imports"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"return[\n  'imports' : [\n    'chardet',\n    'requests'\n  ]\n]"
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":271,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IuZQB@eE2kN-1@y",
			"id":"2lXzN",
			"index":10,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"delimiter":{
							"type":"string",
							"title":"Delimiter"
						},
						"columns":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Columns"
						},
						"quotechar":{
							"type":"string",
							"title":"Quotechar"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						}
					}
				},
				"configurationMode":"TEMPLATE",
				"code":"import requests\nimport csv\nimport chardet\n\nresponse = requests.get(url, stream=True, verify=False)\n\ndetected_encoding = None\ncsv_reader = None\ncolumns = None\ndialect = None\n\nfor raw_line in response.iter_lines():  \n    if not raw_line.strip():  # Skip empty lines\n        continue\n    \n    if detected_encoding is None:\n        detected_encoding = chardet.detect(raw_line)['encoding'] or 'utf-8' \n    \n    line = raw_line.decode(detected_encoding, errors='ignore') \n\n    sniffer = csv.Sniffer()\n    dialect = sniffer.sniff(line)  \n    csv_reader = csv.reader([line], delimiter=dialect.delimiter, quotechar=dialect.quotechar)\n    columns = next(csv_reader)\n    break\n\nresult = {\n    \"columns\": columns if columns else [],\n    \"delimiter\": dialect.delimiter if dialect else None,\n    \"quotechar\": dialect.quotechar if dialect else None\n}\n\n",
				"imports":{
					"ua:type":"mappedArray",
					"source":"{{ n_QwUd3.outputs.result.imports }}",
					"items":"{{ n_QwUd3.outputs.result.imports[0] }}"
				},
				"isAsync":false,
				"python_version":"3.12",
				"entityId":"e_68bc37d3856d0977af926d26",
				"parameters":{
					"url":"{{ _4935D.outputs.url }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":353,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IuZQB@eE2kN-1@y",
			"id":"twUCz",
			"index":11,
			"inputs":{
				"filters":[
					{
						"property":"{{ 2lXzN.outputs.result.columns[0] }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":379,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"twUCz@IuZQB@eE2kN-1@y@n",
			"id":"HMxsE",
			"index":12,
			"inputs":{
				"result":{
					"chunks":{
						"source":"{{ _esji7.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"text":"{{ _esji7.outputs.items[0].text }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"csv_by_unifyapps",
				"resourceVersion":336,
				"resourceName":"csv_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IuZQB@eE2kN-1@y",
			"id":"6flq0",
			"index":13,
			"inputs":{
				"startFromRow":1,
				"file":"{{ GLN8g.outputs.fileDetails }}",
				"quote":"{{ 2lXzN.outputs.result.quotechar }}",
				"headerRow":true,
				"delimiter":"{{ 2lXzN.outputs.result.delimiter }}",
				"columns":{
					"source":"{{ 2lXzN.outputs.result.columns }}",
					"ua:type":"mappedArray",
					"items":"{{ 2lXzN.outputs.result.columns[0] }}"
				},
				"batch":true,
				"encoding":"UTF-8",
				"batchSize":100
			},
			"skip":false,
			"subTitle":"CSV by UnifyApps",
			"title":"Consume data from CSV file",
			"type":"LOOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.rows.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"6flq0@IuZQB@eE2kN-1@y@l",
			"id":"_sIrs0",
			"index":14,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"allowed":{
							"type":"boolean",
							"title":"Allowed"
						},
						"text":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Text"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"rows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Rows"
						}
					}
				},
				"code":"def result = rows.collect { rowItem ->\n    def text = rowItem.collect { k, v -> \"$k:$v\" }.join(' ')\n    return text\n}\n\nreturn ['text':result,'allowed':result.size()>0]",
				"compile_static":false,
				"isAsync":false,
				"parameters":{
					"rows":{
						"ua:type":"mappedArray",
						"items":"{{ 6flq0.outputs.item[0] }}",
						"source":"{{ 6flq0.outputs.item }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":4,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"6flq0@IuZQB@eE2kN-1@y@l",
			"id":"_5mjD4",
			"index":15,
			"inputs":{
				"filters":[
					{
						"property":"{{ _sIrs0.outputs.result.allowed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":465,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5mjD4@6flq0@IuZQB@eE2kN-1@y@l@y",
			"id":"_8MglH",
			"index":16,
			"inputs":{
				"automationId":"66af3ff4cd79b321cb478a37",
				"runtimeConnections":{},
				"synchronous":false,
				"version":"-1",
				"parameters":{
					"knowledgeId":"{{ GLN8g.outputs.knowledgeId }}",
					"chunkMetadata":"{{ GLN8g.outputs.chunkMetadata }}",
					"knowledgeVersion":"{{ GLN8g.outputs.knowledgeVersion }}",
					"authorEmail":"{{ GLN8g.outputs.authorEmail }}",
					"uniqueEntityId":"{{ GLN8g.outputs.uniqueEntityId }}",
					"chunks":{
						"ua:type":"mappedArray",
						"items":{
							"sharedWithIds":{
								"source":"{{ GLN8g.outputs.sharedWithIds }}",
								"ua:type":"mappedArray",
								"items":"{{ GLN8g.outputs.sharedWithIds[0] }}"
							},
							"data":"{{ _sIrs0.outputs.result.text[0] }}"
						},
						"source":"{{ _sIrs0.outputs.result.text }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":37,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IuZQB@eE2kN-1@n",
			"id":"_Y7TRP",
			"index":17,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"sheetNames":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Sheet Names"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"fileUrl":{
							"type":"string",
							"title":"File Url"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"# # import pandas as pd\n# import requests\n# from io import BytesIO\n\n# # Load the Excel file\n# response = requests.get(fileUrl, verify=False)\n# response.raise_for_status()  # Raise an error if request failed\n\n# excel_data = pd.read_excel(BytesIO(response.content), engine='openpyxl')\n\n# # Load Excel content into pandas\n# #excel_data = pd.ExcelFile(fileUrl)\n\n# # Get sheet names\n# sheet_names = excel_data.sheet_names\n# result = {\"sheetNames\" : sheet_names}\n\nimport pandas as pd\nimport requests\nfrom io import BytesIO\n\n# Load the Excel file\nresponse = requests.get(fileUrl, verify=False)\nresponse.raise_for_status()  # Raise an error if request failed\n\n# Create ExcelFile object from the response content\nexcel_data = pd.ExcelFile(BytesIO(response.content))\n\n# Get sheet names\nsheet_names = excel_data.sheet_names\nresult = {\"sheetNames\" : sheet_names}\n",
				"isAsync":false,
				"parameters":{
					"fileUrl":"{{ _4935D.outputs.url }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IuZQB@eE2kN-1@n",
			"id":"Hh1FZ",
			"index":18,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"conditions":{
								"filters":[
									{
										"property":"{{ FkiBn.outputs.result.mimeType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"xls"
										}
									}
								],
								"operator":"AND"
							},
							"name":"for xls format"
						}
					},
					{
						"id":"2",
						"inputs":{
							"name":"for xlsx format",
							"conditions":{
								"filters":[
									{
										"property":"{{ FkiBn.outputs.result.mimeType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"xlsx"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"3",
						"inputs":{
							"name":"for xlsb format",
							"conditions":{
								"filters":[
									{
										"property":"{{ FkiBn.outputs.result.mimeType }}",
										"filter":{
											"operator":"EQUAL",
											"value":"xlsb"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":302,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Hh1FZ@IuZQB@eE2kN-1@n@1",
			"id":"Hh1FZ@1",
			"index":19,
			"inputs":{
				"name":"for xls format",
				"conditions":{
					"filters":[
						{
							"property":"{{ FkiBn.outputs.result.mimeType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"xls"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Branch Condition",
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":341,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Hh1FZ@IuZQB@eE2kN-1@n@1",
			"id":"sAi0U",
			"index":20,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ _Y7TRP.outputs.result.sheetNames }}"
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":259,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sAi0U@Hh1FZ@IuZQB@eE2kN-1@n@1@l",
			"id":"7abtV",
			"index":21,
			"inputs":{
				"file":"{{ GLN8g.outputs.fileDetails }}",
				"expiryTime":1
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":271,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sAi0U@Hh1FZ@IuZQB@eE2kN-1@n@1@l",
			"id":"GuhnN",
			"index":22,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"columnNames":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Column Names"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						},
						"sheetName":{
							"type":"string",
							"title":"Sheet Name"
						}
					}
				},
				"configurationMode":"DEFAULT",
				"code":"# import pandas as pd\n\n# result = {\"columnNames\": []}\n# i = 0\n# max_rows_to_check = 100\n# found = False\n\n# while i < max_rows_to_check:\n#     df = pd.read_excel(\n#         url,\n#         sheet_name=sheetName,\n#         header=None,\n#         skiprows=i,\n#         nrows=1\n#     )\n\n#     if not df.notna().any().any():\n#         i += 1\n#         continue \n\n#     header = df.iloc[0].astype(str).replace('nan', 'Unnamed Column').tolist()\n\n#     seen = {}\n#     final_headers = []\n#     for col in header:\n#         if col in seen:\n#             seen[col] += 1\n#             final_headers.append(f\"{col}_{seen[col]}\")\n#         else:\n#             seen[col] = 0\n#             final_headers.append(col)\n\n#     result = {\"columnNames\": final_headers}\n#     found = True\n#     break\n\n# if not found: \n#     result = {\"columnNames\": []}\n\nimport pandas as pd\nimport requests\nfrom io import BytesIO\n\n# Download the Excel file once\nresponse = requests.get(url, verify=False, timeout=60)\nresponse.raise_for_status()  # Raise error if request failed\n\n# Store the content in memory\nexcel_content = BytesIO(response.content)\n\n# Read the entire sheet once (no headers)\ndf = pd.read_excel(excel_content, sheet_name=sheetName, header=None, nrows=100)\n\n# Initialize result\nresult = {\"columnNames\": []}\nmax_rows_to_check = 100\n\n# Look through first 100 rows for a usable header\nfor i in range(min(max_rows_to_check, len(df))):\n    row = df.iloc[i]\n\n    # Skip empty rows\n    if not row.notna().any():\n        continue\n\n    # Convert to strings and replace missing values\n    header = row.astype(str).replace('nan', 'Unnamed Column').tolist()\n\n    # Handle duplicate column names\n    seen = {}\n    final_headers = []\n    for col in header:\n        if col in seen:\n            seen[col] += 1\n            final_headers.append(f\"{col}_{seen[col]}\")\n        else:\n            seen[col] = 0\n            final_headers.append(col)\n\n    # Save result and stop searching\n    result = {\"columnNames\": final_headers}\n    break",
				"isAsync":false,
				"python_version":"3.12",
				"captureStdOutput":false,
				"parameters":{
					"url":"{{ 7abtV.outputs.url }}",
					"sheetName":"{{ sAi0U.outputs.item }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":352,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sAi0U@Hh1FZ@IuZQB@eE2kN-1@n@1@l",
			"id":"FRDHE",
			"index":23,
			"inputs":{
				"loop":"sAi0U",
				"conditions":{
					"filters":[
						{
							"property":"{{ GuhnN.outputs.result.columnNames[0] }}",
							"filter":{
								"operator":"MISSING"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":356,
				"resourceName":"excel_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"sAi0U@Hh1FZ@IuZQB@eE2kN-1@n@1@l",
			"id":"rOcjB",
			"index":24,
			"inputs":{
				"startFromRow":1,
				"consumptionBehaviour":"string",
				"file":"{{ GLN8g.outputs.fileDetails }}",
				"headerRow":true,
				"sheetName":"{{ sAi0U.outputs.item }}",
				"columns":{
					"source":"{{ GuhnN.outputs.result.columnNames }}",
					"ua:type":"mappedArray",
					"items":"{{ GuhnN.outputs.result.columnNames[0] }}"
				},
				"batch":true,
				"evaluateFormulae":true,
				"batchSize":100,
				"fileType":"xls",
				"skipEmptyRows":true
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Consume data from Excel file",
			"type":"LOOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.rows.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rOcjB@sAi0U@Hh1FZ@IuZQB@eE2kN-1@n@1@l@l",
			"id":"_6Tazv",
			"index":25,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"allowed":{
							"type":"boolean",
							"title":"Allowed"
						},
						"text":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Text"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"rows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Rows"
						}
					}
				},
				"code":"def result = rows.collect { rowItem ->\n    def text = rowItem.collect { k, v -> \"$k:$v\" }.join(' ')\n    return text\n}\n\nreturn ['text':result,'allowed':result.size()>0]",
				"compile_static":false,
				"isAsync":false,
				"parameters":{
					"rows":{
						"source":"{{ rOcjB.outputs.item }}",
						"ua:type":"mappedArray",
						"items":"{{ rOcjB.outputs.item[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":4,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"rOcjB@sAi0U@Hh1FZ@IuZQB@eE2kN-1@n@1@l@l",
			"id":"37fbi",
			"index":26,
			"inputs":{
				"filters":[
					{
						"property":"{{ _6Tazv.outputs.result.allowed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":465,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"37fbi@rOcjB@sAi0U@Hh1FZ@IuZQB@eE2kN-1@n@1@l@l@y",
			"id":"_RwQyB",
			"index":27,
			"inputs":{
				"automationId":"66af3ff4cd79b321cb478a37",
				"runtimeConnections":{},
				"synchronous":false,
				"version":"-1",
				"parameters":{
					"knowledgeId":"{{ GLN8g.outputs.knowledgeId }}",
					"chunkMetadata":"{{ GLN8g.outputs.chunkMetadata }}",
					"knowledgeVersion":"{{ GLN8g.outputs.knowledgeVersion }}",
					"authorEmail":"{{ GLN8g.outputs.authorEmail }}",
					"uniqueEntityId":"{{ GLN8g.outputs.uniqueEntityId }}",
					"chunks":{
						"ua:type":"mappedArray",
						"items":{
							"sharedWithIds":{
								"source":"{{ GLN8g.outputs.sharedWithIds }}",
								"ua:type":"mappedArray",
								"items":"{{ GLN8g.outputs.sharedWithIds[0] }}"
							},
							"data":"{{ _6Tazv.outputs.result.text[0] }}"
						},
						"source":"{{ _6Tazv.outputs.result.text }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":302,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Hh1FZ@IuZQB@eE2kN-1@n@2",
			"id":"Hh1FZ@2",
			"index":28,
			"inputs":{
				"name":"for xlsx format",
				"conditions":{
					"filters":[
						{
							"property":"{{ FkiBn.outputs.result.mimeType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"xlsx"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":341,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Hh1FZ@IuZQB@eE2kN-1@n@2",
			"id":"IoW77",
			"index":29,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ _Y7TRP.outputs.result.sheetNames }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":259,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IoW77@Hh1FZ@IuZQB@eE2kN-1@n@2@l",
			"id":"ProR9",
			"index":30,
			"inputs":{
				"file":"{{ GLN8g.outputs.fileDetails }}",
				"expiryTime":1
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":271,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IoW77@Hh1FZ@IuZQB@eE2kN-1@n@2@l",
			"id":"w4yrY",
			"index":31,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"columnNames":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Column Names"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						},
						"sheetName":{
							"type":"string",
							"title":"Sheet Name"
						}
					}
				},
				"configurationMode":"DEFAULT",
				"code":"# import pandas as pd\n\n# result = {\"columnNames\": []}\n# i = 0\n# max_rows_to_check = 100\n# found = False\n\n# while i < max_rows_to_check:\n#     df = pd.read_excel(\n#         url,\n#         sheet_name=sheetName,\n#         header=None,\n#         skiprows=i,\n#         nrows=1\n#     )\n\n#     if not df.notna().any().any():\n#         i += 1\n#         continue \n\n#     header = df.iloc[0].astype(str).replace('nan', 'Unnamed Column').tolist()\n\n#     seen = {}\n#     final_headers = []\n#     for col in header:\n#         if col in seen:\n#             seen[col] += 1\n#             final_headers.append(f\"{col}_{seen[col]}\")\n#         else:\n#             seen[col] = 0\n#             final_headers.append(col)\n\n#     result = {\"columnNames\": final_headers}\n#     found = True\n#     break\n\n# if not found: \n#     result = {\"columnNames\": []}\n\nimport pandas as pd\nimport requests\nfrom io import BytesIO\n\n# Download the Excel file once\nresponse = requests.get(url, verify=False, timeout=60)\nresponse.raise_for_status()  # Raise error if request failed\n\n# Store the content in memory\nexcel_content = BytesIO(response.content)\n\n# Read the entire sheet once (no headers)\ndf = pd.read_excel(excel_content, sheet_name=sheetName, header=None, nrows=100)\n\n# Initialize result\nresult = {\"columnNames\": []}\nmax_rows_to_check = 100\n\n# Look through first 100 rows for a usable header\nfor i in range(min(max_rows_to_check, len(df))):\n    row = df.iloc[i]\n\n    # Skip empty rows\n    if not row.notna().any():\n        continue\n\n    # Convert to strings and replace missing values\n    header = row.astype(str).replace('nan', 'Unnamed Column').tolist()\n\n    # Handle duplicate column names\n    seen = {}\n    final_headers = []\n    for col in header:\n        if col in seen:\n            seen[col] += 1\n            final_headers.append(f\"{col}_{seen[col]}\")\n        else:\n            seen[col] = 0\n            final_headers.append(col)\n\n    # Save result and stop searching\n    result = {\"columnNames\": final_headers}\n    break\n\n",
				"isAsync":false,
				"python_version":"3.12",
				"captureStdOutput":false,
				"parameters":{
					"url":"{{ ProR9.outputs.url }}",
					"sheetName":"{{ IoW77.outputs.item }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":352,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IoW77@Hh1FZ@IuZQB@eE2kN-1@n@2@l",
			"id":"7KOek",
			"index":32,
			"inputs":{
				"loop":"IoW77",
				"conditions":{
					"filters":[
						{
							"property":"{{ w4yrY.outputs.result.columnNames[0] }}",
							"filter":{
								"operator":"MISSING"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":261,
				"resourceName":"excel_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IoW77@Hh1FZ@IuZQB@eE2kN-1@n@2@l",
			"id":"PDdgc",
			"index":33,
			"inputs":{
				"startFromRow":1,
				"consumptionBehaviour":"string",
				"file":"{{ GLN8g.outputs.fileDetails }}",
				"headerRow":true,
				"sheetName":"{{ IoW77.outputs.item }}",
				"columns":{
					"source":"{{ w4yrY.outputs.result.columnNames }}",
					"ua:type":"mappedArray",
					"items":"{{ w4yrY.outputs.result.columnNames[0] }}"
				},
				"batch":true,
				"evaluateFormulae":true,
				"batchSize":100,
				"fileType":"xlsx",
				"skipEmptyRows":true
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Consume data from Excel file",
			"type":"LOOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.rows.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PDdgc@IoW77@Hh1FZ@IuZQB@eE2kN-1@n@2@l@l",
			"id":"p6dHm",
			"index":34,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"allowed":{
							"type":"boolean",
							"title":"Allowed"
						},
						"text":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Text"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"rows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Rows"
						}
					}
				},
				"code":"def result = rows.collect { rowItem ->\n    def text = rowItem.collect { k, v -> \"$k:$v\" }.join(' ')\n    return text\n}\n\nreturn ['text':result,'allowed':result.size()>0]",
				"compile_static":false,
				"isAsync":false,
				"parameters":{
					"rows":{
						"source":"{{ PDdgc.outputs.item }}",
						"ua:type":"mappedArray",
						"items":"{{ PDdgc.outputs.item[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":4,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PDdgc@IoW77@Hh1FZ@IuZQB@eE2kN-1@n@2@l@l",
			"id":"xS74B",
			"index":35,
			"inputs":{
				"filters":[
					{
						"property":"{{ p6dHm.outputs.result.allowed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":465,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"xS74B@PDdgc@IoW77@Hh1FZ@IuZQB@eE2kN-1@n@2@l@l@y",
			"id":"n_t7QMk",
			"index":36,
			"inputs":{
				"automationId":"66af3ff4cd79b321cb478a37",
				"runtimeConnections":{},
				"synchronous":false,
				"version":"-1",
				"parameters":{
					"knowledgeId":"{{ GLN8g.outputs.knowledgeId }}",
					"chunkMetadata":"{{ GLN8g.outputs.chunkMetadata }}",
					"knowledgeVersion":"{{ GLN8g.outputs.knowledgeVersion }}",
					"authorEmail":"{{ GLN8g.outputs.authorEmail }}",
					"uniqueEntityId":"{{ GLN8g.outputs.uniqueEntityId }}",
					"chunks":{
						"source":"{{ p6dHm.outputs.result.text }}",
						"ua:type":"mappedArray",
						"items":{
							"data":"{{ p6dHm.outputs.result.text[0] }}",
							"sharedWithIds":{
								"source":"{{ GLN8g.outputs.sharedWithIds }}",
								"ua:type":"mappedArray",
								"items":"{{ GLN8g.outputs.sharedWithIds[0] }}"
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":302,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Hh1FZ@IuZQB@eE2kN-1@n@3",
			"id":"Hh1FZ@3",
			"index":37,
			"inputs":{
				"name":"for xlsb format",
				"conditions":{
					"filters":[
						{
							"property":"{{ FkiBn.outputs.result.mimeType }}",
							"filter":{
								"operator":"EQUAL",
								"value":"xlsb"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":341,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Hh1FZ@IuZQB@eE2kN-1@n@3",
			"id":"L4XLa",
			"index":38,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ _Y7TRP.outputs.result.sheetNames }}"
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":259,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L4XLa@Hh1FZ@IuZQB@eE2kN-1@n@3@l",
			"id":"f4YJQ",
			"index":39,
			"inputs":{
				"file":"{{ GLN8g.outputs.fileDetails }}",
				"expiryTime":1
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":271,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L4XLa@Hh1FZ@IuZQB@eE2kN-1@n@3@l",
			"id":"EASB5",
			"index":40,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"columnNames":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Column Names"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						},
						"sheetName":{
							"type":"string",
							"title":"Sheet Name"
						}
					}
				},
				"configurationMode":"DEFAULT",
				"code":"# import pandas as pd\n\n# result = {\"columnNames\": []}\n# i = 0\n# max_rows_to_check = 100\n# found = False\n\n# while i < max_rows_to_check:\n#     df = pd.read_excel(\n#         url,\n#         sheet_name=sheetName,\n#         header=None,\n#         skiprows=i,\n#         nrows=1,\n#         engine=\"openpyxl\"\n#     )\n\n#     if not df.notna().any().any():\n#         i += 1\n#         continue \n\n#     header = df.iloc[0].astype(str).replace('nan', 'Unnamed Column').tolist()\n\n#     seen = {}\n#     final_headers = []\n#     for col in header:\n#         if col in seen:\n#             seen[col] += 1\n#             final_headers.append(f\"{col}_{seen[col]}\")\n#         else:\n#             seen[col] = 0\n#             final_headers.append(col)\n\n#     result = {\"columnNames\": final_headers}\n#     found = True\n#     break\n\n# if not found: \n#     result = {\"columnNames\": []}\n\nimport pandas as pd\nimport requests\nfrom io import BytesIO\n\n# Download the Excel file once\nresponse = requests.get(url, verify=False, timeout=60)\nresponse.raise_for_status()  # Raise error if request failed\n\n# Store the content in memory\nexcel_content = BytesIO(response.content)\n\n# Read the entire sheet once (no headers)\ndf = pd.read_excel(excel_content, sheet_name=sheetName, header=None, nrows=100)\n\n# Initialize result\nresult = {\"columnNames\": []}\nmax_rows_to_check = 100\n\n# Look through first 100 rows for a usable header\nfor i in range(min(max_rows_to_check, len(df))):\n    row = df.iloc[i]\n\n    # Skip empty rows\n    if not row.notna().any():\n        continue\n\n    # Convert to strings and replace missing values\n    header = row.astype(str).replace('nan', 'Unnamed Column').tolist()\n\n    # Handle duplicate column names\n    seen = {}\n    final_headers = []\n    for col in header:\n        if col in seen:\n            seen[col] += 1\n            final_headers.append(f\"{col}_{seen[col]}\")\n        else:\n            seen[col] = 0\n            final_headers.append(col)\n\n    # Save result and stop searching\n    result = {\"columnNames\": final_headers}\n    break\n\n",
				"isAsync":false,
				"python_version":"3.12",
				"captureStdOutput":false,
				"parameters":{
					"url":"{{ f4YJQ.outputs.url }}",
					"sheetName":"{{ L4XLa.outputs.item }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":352,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L4XLa@Hh1FZ@IuZQB@eE2kN-1@n@3@l",
			"id":"fqKGk",
			"index":41,
			"inputs":{
				"loop":"L4XLa",
				"conditions":{
					"filters":[
						{
							"property":"{{ EASB5.outputs.result.columnNames[0] }}",
							"filter":{
								"operator":"MISSING"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":261,
				"resourceName":"excel_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L4XLa@Hh1FZ@IuZQB@eE2kN-1@n@3@l",
			"id":"4dDhK",
			"index":42,
			"inputs":{
				"startFromRow":1,
				"consumptionBehaviour":"string",
				"file":"{{ GLN8g.outputs.fileDetails }}",
				"headerRow":true,
				"sheetName":"{{ L4XLa.outputs.item }}",
				"columns":{
					"source":"{{ EASB5.outputs.result.columnNames }}",
					"ua:type":"mappedArray",
					"items":"{{ EASB5.outputs.result.columnNames[0] }}"
				},
				"batch":true,
				"evaluateFormulae":true,
				"batchSize":100,
				"fileType":"xlsb",
				"skipEmptyRows":true
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Consume data from Excel file",
			"type":"LOOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.rows.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"4dDhK@L4XLa@Hh1FZ@IuZQB@eE2kN-1@n@3@l@l",
			"id":"_JF9v7",
			"index":43,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"allowed":{
							"type":"boolean",
							"title":"Allowed"
						},
						"text":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Text"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"rows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Rows"
						}
					}
				},
				"code":"def result = rows.collect { rowItem ->\n    def text = rowItem.collect { k, v -> \"$k:$v\" }.join(' ')\n    return text\n}\n\nreturn ['text':result,'allowed':result.size()>0]",
				"compile_static":false,
				"isAsync":false,
				"parameters":{
					"rows":{
						"ua:type":"mappedArray",
						"source":"{{ 4dDhK.outputs.item }}",
						"items":"{{ 4dDhK.outputs.item[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":4,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"4dDhK@L4XLa@Hh1FZ@IuZQB@eE2kN-1@n@3@l@l",
			"id":"_SkURy",
			"index":44,
			"inputs":{
				"filters":[
					{
						"property":"{{ _JF9v7.outputs.result.allowed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":465,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_SkURy@4dDhK@L4XLa@Hh1FZ@IuZQB@eE2kN-1@n@3@l@l@y",
			"id":"_e5lf8",
			"index":45,
			"inputs":{
				"automationId":"66af3ff4cd79b321cb478a37",
				"runtimeConnections":{},
				"synchronous":false,
				"version":"-1",
				"parameters":{
					"knowledgeId":"{{ GLN8g.outputs.knowledgeId }}",
					"chunkMetadata":"{{ GLN8g.outputs.chunkMetadata }}",
					"knowledgeVersion":"{{ GLN8g.outputs.knowledgeVersion }}",
					"authorEmail":"{{ GLN8g.outputs.authorEmail }}",
					"uniqueEntityId":"{{ GLN8g.outputs.uniqueEntityId }}",
					"chunks":{
						"ua:type":"mappedArray",
						"items":{
							"sharedWithIds":{
								"source":"{{ GLN8g.outputs.sharedWithIds }}",
								"ua:type":"mappedArray",
								"items":"{{ GLN8g.outputs.sharedWithIds[0] }}"
							},
							"data":"{{ _JF9v7.outputs.result.text[0] }}"
						},
						"source":"{{ _JF9v7.outputs.result.text }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Hh1FZ@IuZQB@eE2kN-1@n@default",
			"id":"n_Z9BIF",
			"index":46,
			"inputs":{
				"compile_static":false,
				"code":"return [:]"
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":438,
				"resourceName":"variable_by_unifyapps_clear_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"eE2kN-1",
			"id":"iDVR3",
			"index":47,
			"inputs":{
				"listName":"{{ _esji7.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Remove all items from list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":0,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"eE2kN-1",
			"id":"CKP0b",
			"index":48,
			"inputs":{
				"result":{
					"chunks":{
						"source":"{{ _esji7.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"text":"{{ _esji7.outputs.items[0].text }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1866,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"version":216
}