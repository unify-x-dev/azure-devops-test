{
	"appsUsed":[
		
	],
	"createdTime":1748544416222,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296220848,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfd1c672fcc41fb70f15a",
		"status":"DEPLOYED",
		"version":52,
		"workflowVersion":97
	},
	"edges":[
		{
			"fromNodeId":"fR19H",
			"priority":0,
			"skip":false,
			"toNodeId":"0YG5m",
			"type":"next"
		},
		{
			"fromNodeId":"0YG5m",
			"priority":0,
			"skip":false,
			"toNodeId":"AoZIU",
			"type":"next"
		},
		{
			"fromNodeId":"AoZIU",
			"priority":0,
			"skip":false,
			"toNodeId":"otZZ2",
			"type":"next"
		},
		{
			"fromNodeId":"otZZ2",
			"priority":0,
			"skip":false,
			"toNodeId":"JhDLO",
			"type":"next"
		},
		{
			"fromNodeId":"JhDLO",
			"priority":0,
			"skip":false,
			"toNodeId":"LCUAo",
			"type":"next"
		},
		{
			"fromNodeId":"LCUAo",
			"priority":0,
			"skip":false,
			"toNodeId":"SWGzc",
			"type":"next"
		},
		{
			"fromNodeId":"SWGzc",
			"priority":0,
			"skip":false,
			"toNodeId":"VNSiR",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"683167691592ec414bb0f1c4",
	"lastModifiedBy":0,
	"lcName":"graph rag | extract entities and relationship from a chunk",
	"modifiedTime":1761722759377,
	"name":"Graph RAG | Extract Entities and RelationShip from a Chunk",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":366,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"WsfGK-1",
			"id":"fR19H",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"nodes":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"type":{
										"type":"string",
										"title":"type"
									},
									"name":{
										"type":"string",
										"title":"name"
									},
									"description":{
										"type":"string",
										"title":"description"
									}
								},
								"additionalProperties":false
							},
							"title":"nodes"
						},
						"edges":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"sourceNode":{
										"type":"string",
										"title":"sourceNode"
									},
									"destinationNode":{
										"type":"string",
										"title":"destinationNode"
									},
									"relationship":{
										"type":"string",
										"title":"relationship"
									}
								},
								"additionalProperties":false
							},
							"title":"edges"
						}
					},
					"additionalProperties":false
				},
				"setup":{
					"type":"object",
					"properties":{
						"entity_types":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"entity_types"
						},
						"chunkText":{
							"type":"string",
							"title":"chunkText"
						},
						"chunkMetaData":{
							"type":"object",
							"properties":{},
							"title":"chunkMetaData",
							"additionalProperties":false,
							"required":[]
						},
						"domain":{
							"type":"string",
							"title":"domain"
						},
						"modelId":{
							"type":"string",
							"title":"Model Id"
						},
						"documentEntities":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"type":{
										"type":"string",
										"title":"type"
									},
									"name":{
										"type":"string",
										"title":"name"
									},
									"description":{
										"type":"string",
										"title":"description"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"documentEntities"
						},
						"knowledgeType":{
							"type":"string",
							"title":"Knowledge Type"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":372,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"WsfGK-1",
			"id":"0YG5m",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"type":{
											"type":"string",
											"title":"type"
										},
										"name":{
											"type":"string",
											"title":"name"
										},
										"description":{
											"type":"string",
											"title":"description"
										}
									},
									"additionalProperties":false
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray",
					"source":"{{ fR19H.outputs.documentEntities }}",
					"items":{
						"type":"{{ fR19H.outputs.documentEntities[0].type }}",
						"name":"{{ fR19H.outputs.documentEntities[0].name }}",
						"description":"{{ fR19H.outputs.documentEntities[0].description }}"
					}
				},
				"ua:title":"initial_entities",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"initial_entities",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"type":{
										"type":"string",
										"title":"type"
									},
									"name":{
										"type":"string",
										"title":"name"
									},
									"description":{
										"type":"string",
										"title":"description"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"initial_entities",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.entities.items.name",
					"root.parameters.entities.items.type",
					"root.parameters.entities.items.description",
					"root.parameters.relationships.items.source",
					"root.parameters.relationships.items.target",
					"root.parameters.relationships.items.description"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":371,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"WsfGK-1",
			"id":"AoZIU",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"entities":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"name":{
										"type":"string",
										"title":"name"
									},
									"type":{
										"type":"string",
										"title":"type"
									},
									"description":{
										"type":"string",
										"title":"description"
									}
								},
								"additionalProperties":false
							},
							"title":"entities"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"chunkMetadata":{
							"type":"object",
							"title":"chunkMetadata"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def chunkMetadata = (binding.hasVariable(\"chunkMetadata\")) ? binding.getVariable(\"chunkMetadata\") : [:]\n\ndef Entities = new ArrayList()\n\n// List of keys to exclude\ndef excludedKeys = [\"referenceUrl\", \"contentForGeneration\", \"chunkUUID\", \"chunkIndexedType\", \"chunkType\", \"sourceType\", \"source\", \"documentTopic\"]\n\n// Process chunkMetadata\nif (chunkMetadata instanceof Map) {\n    chunkMetadata.each { key, value ->\n        // Skip excluded keys\n        if (excludedKeys.contains(key.toString())) {\n            return\n        }\n        if (value != null && value.toString().trim() != \"\") {\n            def keyLower = key.toString().toLowerCase()\n            def entityType = \"metadata\"\n            \n            // Determine entity type based on key name and content\n            if (keyLower.contains(\"email\") || keyLower.contains(\"author\") || keyLower.contains(\"user\") || keyLower.contains(\"person\")) {\n                entityType = \"person\"\n            } else if (keyLower.contains(\"location\") || keyLower.contains(\"place\") || keyLower.contains(\"address\")) {\n                entityType = \"location\"\n            } else if (keyLower.contains(\"organization\") || keyLower.contains(\"company\") || keyLower.contains(\"org\")) {\n                entityType = \"organization\"\n            } else if (keyLower.contains(\"communication\") || keyLower.contains(\"message\") || keyLower.contains(\"media\") ||\n                       keyLower.contains(\"channel\") || keyLower.contains(\"platform\")) {\n                entityType = \"communication\"\n            } else if (keyLower.contains(\"url\") || keyLower.contains(\"reference\") || value.toString().startsWith(\"http\")) {\n                entityType = \"url\"\n            } else if (keyLower.contains(\"file\") || keyLower.contains(\"document\") || keyLower.contains(\"source\")) {\n                entityType = \"software\"\n            } else if (keyLower.contains(\"date\") || keyLower.contains(\"time\")) {\n                entityType = \"date\"\n            } else if (keyLower.contains(\"id\") || keyLower.contains(\"unique\")) {\n                entityType = \"numerical_expression\"\n            }\n            \n            // Check if value contains email pattern\n            if (value.toString().contains(\"@\") && value.toString().contains(\".\")) {\n                entityType = \"email\"\n            }\n\n            def entityName = value.toString().toUpperCase()\n            def entityDescription = \"Metadata ${key}: ${value}\"\n\n            // Check for duplicates in existing entities\n            def existingEntity = null\n            for (entity in Entities) {\n                if (entity?.name == entityName) {\n                    existingEntity = entity\n                    break\n                }\n            }\n\n            if (!existingEntity) {\n                Entities.add([\n                    \"name\": entityName.toString(),\n                    \"type\": entityType.toString(),\n                    \"description\": entityDescription.toString()\n                ])\n            }\n        }\n    }\n}\n\nreturn [\n    \"entities\": Entities,\n]",
				"parameters":{
					"chunkMetadata":"{{ fR19H.outputs.chunkMetaData }}"
				}
			},
			"skip":true,
			"subTitle":"Hardcode Entities",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.type",
					"root.itemsToAdd.items.name",
					"root.itemsToAdd.items.description"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":362,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"WsfGK-1",
			"id":"otZZ2",
			"index":4,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"source":"{{ AoZIU.outputs.result.entities }}",
					"items":{
						"type":"{{ AoZIU.outputs.result.entities[0].type }}",
						"name":"{{ AoZIU.outputs.result.entities[0].name }}",
						"description":"{{ AoZIU.outputs.result.entities[0].description }}"
					}
				},
				"listName":"{{ 0YG5m.outputs.items[0] }}"
			},
			"skip":true,
			"subTitle":"initial_entities",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.input_schema.initial_entities.items"
				]
			},
			"context":{
				"appName":"template_by_unifyapps",
				"resourceVersion":360,
				"resourceName":"template_by_unifyapps_compile_template",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"WsfGK-1",
			"id":"JhDLO",
			"index":5,
			"inputs":{
				"input_schema":{
					"chunkText":"{{ fR19H.outputs.chunkText }}",
					"domain":"{{ fR19H.outputs.domain }}",
					"entity_types":{
						"source":"{{ fR19H.outputs.entity_types }}",
						"ua:type":"mappedArray"
					},
					"initial_entities":{
						"ua:type":"mappedArray",
						"source":"{{ 0YG5m.outputs.items }}",
						"items":"{{ 0YG5m.outputs.items[0] }}"
					},
					"knowledgeType":"{{ fR19H.outputs.knowledgeType }}"
				},
				"template_id":"e_68317b246a936f398d09c7b1"
			},
			"skip":false,
			"subTitle":"Entity_Relationship_Extraction_Template|GraphRAG",
			"title":"Compile template",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":381,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"WsfGK-1",
			"id":"LCUAo",
			"index":6,
			"inputs":{
				"automationId":"66dfd76eb70dad256986b784",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"type":"text",
					"response_format":"json_object",
					"modelId":"{{ fR19H.outputs.modelId }}",
					"content":"{{ JhDLO.outputs.output }}",
					"max_tokens":8192,
					"temparature":0.001
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":3.0,
					"captureRetries":false,
					"count":5,
					"enabled":true,
					"initialDelay":100,
					"maxDelay":500
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Simple Call LLM",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":368,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"WsfGK-1",
			"id":"SWGzc",
			"index":7,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"entities":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"name":{
										"type":"string",
										"title":"name"
									},
									"type":{
										"type":"string",
										"title":"type"
									},
									"description":{
										"type":"string",
										"title":"description"
									}
								},
								"additionalProperties":false
							},
							"title":"entities"
						},
						"relationships":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"source":{
										"type":"string",
										"title":"source"
									},
									"target":{
										"type":"string",
										"title":"target"
									},
									"description":{
										"type":"string",
										"title":"description"
									}
								},
								"additionalProperties":false
							},
							"title":"relationships"
						}
					},
					"additionalProperties":false
				},
				"jsonString":"{{ LCUAo.outputs.llmResponse }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":372,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"WsfGK-1",
			"id":"VNSiR",
			"index":8,
			"inputs":{
				"result":{
					"nodes":{
						"ua:type":"mappedArray",
						"items":{
							"type":"{{ SWGzc.outputs.result.entities[0].type }}",
							"name":"{{ SWGzc.outputs.result.entities[0].name }}",
							"description":"{{ SWGzc.outputs.result.entities[0].description }}"
						},
						"source":"{{ SWGzc.outputs.result.entities }}"
					},
					"edges":{
						"ua:type":"mappedArray",
						"items":{
							"sourceNode":"{{ SWGzc.outputs.result.relationships[0].source }}",
							"destinationNode":"{{ SWGzc.outputs.result.relationships[0].target }}",
							"relationship":"{{ SWGzc.outputs.result.relationships[0].description }}"
						},
						"source":"{{ SWGzc.outputs.result.relationships }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1728,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":99
}