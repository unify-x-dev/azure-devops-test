{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1760214134111,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296303703,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfd6f0c3d19149a9e3696",
		"status":"DEPLOYED",
		"version":3,
		"workflowVersion":17
	},
	"edges":[
		{
			"fromNodeId":"n_imeHO",
			"priority":0,
			"skip":false,
			"toNodeId":"n_5Z8yY",
			"type":"next"
		},
		{
			"fromNodeId":"n_5Z8yY",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Nh4BU",
			"type":"next"
		},
		{
			"fromNodeId":"n_Nh4BU",
			"priority":0,
			"skip":false,
			"toNodeId":"n_5e4Sz",
			"type":"next"
		},
		{
			"fromNodeId":"n_5e4Sz",
			"priority":0,
			"skip":false,
			"toNodeId":"n_v36FR",
			"type":"loop"
		},
		{
			"fromNodeId":"n_v36FR",
			"priority":0,
			"skip":false,
			"toNodeId":"n_UiP9L",
			"type":"next"
		},
		{
			"fromNodeId":"n_UiP9L",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2POhY",
			"type":"next"
		},
		{
			"fromNodeId":"n_2POhY",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_5e4Sz",
			"type":"next"
		},
		{
			"fromNodeId":"n_5e4Sz",
			"priority":0,
			"skip":false,
			"toNodeId":"n_lNhlW",
			"type":"next"
		},
		{
			"fromNodeId":"n_lNhlW",
			"priority":0,
			"skip":false,
			"toNodeId":"n_y9EQD",
			"type":"next"
		},
		{
			"fromNodeId":"n_y9EQD",
			"priority":0,
			"skip":false,
			"toNodeId":"n_3TIGm",
			"type":"next"
		},
		{
			"fromNodeId":"n_3TIGm",
			"priority":0,
			"skip":false,
			"toNodeId":"n_WSdIJ",
			"type":"next"
		},
		{
			"fromNodeId":"n_WSdIJ",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_mV80v",
			"type":"if"
		},
		{
			"fromNodeId":"n_mV80v",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2PYkn",
			"type":"next"
		},
		{
			"fromNodeId":"n_eADoO",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2PYkn",
			"type":"next"
		},
		{
			"fromNodeId":"n_WSdIJ",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2PYkn",
			"type":"next"
		},
		{
			"fromNodeId":"n_2PYkn",
			"priority":0,
			"skip":false,
			"toNodeId":"CSZ80",
			"type":"loop"
		},
		{
			"fromNodeId":"CSZ80",
			"priority":0,
			"skip":false,
			"toNodeId":"_EQHi7",
			"type":"next"
		},
		{
			"fromNodeId":"_EQHi7",
			"priority":0,
			"skip":false,
			"toNodeId":"n_HfmMU",
			"type":"next"
		},
		{
			"fromNodeId":"n_HfmMU",
			"priority":0,
			"skip":false,
			"toNodeId":"n_eADoO",
			"type":"next"
		},
		{
			"fromNodeId":"n_2PYkn",
			"priority":0,
			"skip":false,
			"toNodeId":"n_1U3YW",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"68eaa390ab169b40395613dd",
	"lastModifiedBy":0,
	"lcName":"[dt] upload files for chat",
	"modifiedTime":1761722856849,
	"name":"[DT] Upload files for Chat",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{
						"request":{},
						"response":[
							{}
						]
					}
				}
			},
			"context":{
				"appName":"callables",
				"resourceVersion":462,
				"resourceName":"callables_from_api"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_imeHO",
			"index":1,
			"inputs":{
				"request":{
					"contentType":"multipart/form-data"
				},
				"endpointType":"REST",
				"response":[
					{
						"status":200,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						},
						"body":{
							"type":"object",
							"properties":{
								"files":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"id":{
												"type":"string",
												"title":"id"
											},
											"url":{
												"type":"string",
												"title":"url"
											},
											"name":{
												"type":"string",
												"title":"name"
											},
											"metadata":{
												"type":"object",
												"properties":{
													"uploadTime":{
														"type":"integer",
														"title":"uploadTime"
													},
													"mimeType":{
														"type":"string",
														"title":"mimeType"
													},
													"processedSize":{
														"type":"integer",
														"title":"Processed Size"
													}
												},
												"title":"metadata",
												"additionalProperties":false,
												"required":[]
											}
										},
										"additionalProperties":false
									},
									"title":"files"
								}
							},
							"additionalProperties":false
						},
						"namespaces":[]
					},
					{
						"status":400,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						},
						"body":{
							"type":"object",
							"properties":{
								"errorMessage":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Error Message"
								}
							},
							"additionalProperties":false,
							"required":[]
						}
					}
				],
				"streamingResponse":false
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via API",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":25,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_5Z8yY",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object"
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"uploadedFiles",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"uploadedFiles",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.input.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_Nh4BU",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"files":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"fileType":{
										"type":"string",
										"title":"fileType"
									},
									"name":{
										"type":"string",
										"title":"name"
									},
									"source":{
										"type":"string",
										"title":"source"
									},
									"sourceType":{
										"type":"string",
										"title":"sourceType"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"files"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"input":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Input"
						}
					}
				},
				"code":"def files = []\n\nif (binding.hasVariable(\"input\") && input) {\n  input.each { item ->\n    def file = [\n      fileType   : item.fileType,\n      name       : item.name,\n      source     : item.source,\n      sourceType : item.sourceType\n    ]\n    files << file\n  }\n}\n\nreturn [ files: files ]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"input":{
						"source":"{{ n_imeHO.outputs.files }}",
						"ua:type":"mappedArray",
						"items":"{{ n_imeHO.outputs.files[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":13,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_5e4Sz",
			"index":4,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_Nh4BU.outputs.result.files }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_5e4Sz@_5NVxH-1@l",
			"id":"n_v36FR",
			"index":5,
			"inputs":{
				"file":"{{ n_5e4Sz.outputs.item }}",
				"expiryTime":1
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"files_by_unifyapps",
				"resourceVersion":24,
				"resourceName":"files_by_unifyapps_upload_file",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_5e4Sz@_5NVxH-1@l",
			"id":"n_UiP9L",
			"index":6,
			"inputs":{
				"fileName":"{{ n_5e4Sz.outputs.item.name }}",
				"url":"{{ n_v36FR.outputs.url }}",
				"option":"url"
			},
			"skip":false,
			"subTitle":"Files by UnifyApps",
			"title":"Upload file",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_5e4Sz@_5NVxH-1@l",
			"id":"n_2POhY",
			"index":7,
			"inputs":{
				"itemToAdd":"{{ n_UiP9L.outputs.fileDetails }}",
				"insertLocation":"END",
				"listName":"{{ n_5Z8yY.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.files.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_lNhlW",
			"index":8,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"finalFiles":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"fileExtension":{
										"type":"string",
										"title":"File Extension"
									},
									"fileType":{
										"type":"string",
										"title":"File Type"
									},
									"name":{
										"type":"string",
										"title":"Name"
									},
									"source":{
										"type":"string",
										"title":"Source"
									},
									"sourceType":{
										"type":"string",
										"title":"Source Type"
									},
									"size":{
										"type":"integer",
										"title":"Size"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Final Files"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"files":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Files"
						}
					}
				},
				"code":"def finalFiles = []\n\nif (!binding.hasVariable('files') || files == null || files.isEmpty()) {\n  return [\n    finalFiles : []\n  ]\n}\n\ndef extensionToMimeType = [\n  \"pdf\"  : \"application/pdf\",\n  \"doc\"  : \"application/msword\",\n  \"docx\" : \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n  \"xls\"  : \"application/vnd.ms-excel\",\n  \"xlsx\" : \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  \"csv\"  : \"text/csv\",\n  \"png\"  : \"image/png\",\n  \"jpg\"  : \"image/jpeg\",\n  \"jpeg\" : \"image/jpeg\",\n  \"txt\"  : \"text/plain\",\n  \"md\"   : \"text/markdown\",  \n  \"ppt\"  : \"application/vnd.ms-powerpoint\",  \n  \"pptx\" : \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", \n  \"mp3\"  : \"audio/mpeg\",\n  \"mpeg\" : \"video/mpeg\",\n  \"mp4\"  : \"video/mp4\",\n  \"wav\"  : \"audio/wav\",\n  \"zip\"  : \"application/zip\",\n  \"rar\"  : \"application/x-rar-compressed\",\n  \"7z\"   : \"application/x-7z-compressed\",\n  \"html\" : \"text/html\",\n  \"htm\"  : \"text/html\",\n  \"json\" : \"application/json\"\n]\n\nfiles.each { file ->\n  def originalName = file.name ?: \"\"\n  def nameHasDot = originalName?.contains('.')\n  def nameExt = nameHasDot ? originalName.tokenize('.')?.last()?.toLowerCase() : null\n  def sourceExt = file.source?.tokenize('.')?.last()?.toLowerCase()\n  // Prefer extension from name when present; otherwise fall back to source extension\n  def extension = nameExt ?: sourceExt\n\n  // Determine mime type: prefer our mapping, then file.fileType if provided, else octet-stream\n  def mimeType = extension ? (extensionToMimeType[extension] ?: file.fileType) : file.fileType\n  mimeType = mimeType ?: \"application/octet-stream\"\n\n  // Only append extension when the provided name had no extension\n  def nameWithExt = originalName\n  if (!nameHasDot && extension) {\n    nameWithExt = originalName + \".\" + extension\n  }\n\n  def processedFile = [\n    fileExtension : extension,\n    fileType      : mimeType,\n    name          : nameWithExt,\n    size          : file.size,\n    source        : file.source,\n    sourceType    : file.sourceType\n  ]\n  finalFiles << processedFile\n}\n\nreturn [\n  finalFiles : finalFiles\n]\n",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"files":{
						"ua:type":"mappedArray",
						"source":"{{ n_5Z8yY.outputs.items }}",
						"items":"{{ n_5Z8yY.outputs.items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"parse Files",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":520,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_y9EQD",
			"index":9,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"id":{
											"type":"string",
											"title":"id"
										},
										"url":{
											"type":"string",
											"title":"url"
										},
										"name":{
											"type":"string",
											"title":"name"
										},
										"metadata":{
											"type":"object",
											"properties":{
												"uploadTime":{
													"type":"integer",
													"title":"uploadTime"
												},
												"mimeType":{
													"type":"string",
													"title":"mimeType"
												},
												"processedSize":{
													"type":"integer",
													"title":"Processed Size"
												}
											},
											"title":"metadata",
											"additionalProperties":false,
											"required":[]
										}
									},
									"additionalProperties":false
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"List",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"List",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"id":{
										"type":"string",
										"title":"id"
									},
									"url":{
										"type":"string",
										"title":"url"
									},
									"name":{
										"type":"string",
										"title":"name"
									},
									"metadata":{
										"type":"object",
										"properties":{
											"uploadTime":{
												"type":"integer",
												"title":"uploadTime"
											},
											"mimeType":{
												"type":"string",
												"title":"mimeType"
											},
											"processedSize":{
												"type":"integer",
												"title":"Processed Size"
											}
										},
										"title":"metadata",
										"additionalProperties":false,
										"required":[]
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"response",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				},
				"visibleOptionalFields":[
					"root.parameters.files.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_3TIGm",
			"index":10,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"allowed":{
							"type":"boolean",
							"title":"Allowed"
						},
						"errorMessage":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Error Message"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"files":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Files"
						}
					}
				},
				"code":"if (!binding.hasVariable('files') || files == null || files.size() == 0) {\n  return [\n    allowed      : false,\n    errorMessage : \"No valid documents uploaded\"\n  ]\n}\n\nreturn[\n  allowed : true\n]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"files":{
						"source":"{{ n_lNhlW.outputs.result.finalFiles }}",
						"ua:type":"mappedArray",
						"items":"{{ n_lNhlW.outputs.result.finalFiles[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"allowed?",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_WSdIJ",
			"index":11,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_3TIGm.outputs.result.allowed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"false"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Not Allowed?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":462,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_WSdIJ@_5NVxH-1@y",
			"id":"n_mV80v",
			"index":12,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"400_undefined",
				"body":{
					"errorMessage":"{{ n_3TIGm.outputs.result.errorMessage }}"
				},
				"status":400
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":456,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_2PYkn",
			"index":13,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_lNhlW.outputs.result.finalFiles }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":391,
				"resourceName":"utility_by_unifyapps_create_unifyapps_path_for_file",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2PYkn@_5NVxH-1@l",
			"id":"CSZ80",
			"index":14,
			"inputs":{
				"file":"{{ n_2PYkn.outputs.item }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Create UnifyApps path for file",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.fileDetails.name",
					"root.record.fileDetails.source",
					"root.record.fileDetails.fileType",
					"root.record.fileDetails.size",
					"root.record.fileDetails.fileExtension",
					"root.record.fileDetails.sourceType",
					"root.record.fileDetails.url",
					"root.record.websiteImportInfo.specificWebpages",
					"root.record.websiteImportInfo.urlList.items",
					"root.record.applicationInfo.inputs",
					"root.record.applicationInfo.context.appName",
					"root.record.applicationInfo.context.connectionId",
					"root.record.applicationInfo.context.resourceName",
					"root.record.refreshDetails.lastRefreshStartTime",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.image.textExtractionModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.image.processingMethod",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.tabularData.indexingType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.embeddingType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.chunkOverlap",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.delimiters.items",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.language",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.embeddingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.maxChunkSize",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.thresholdType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.algorithm",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.chunkingAlgorithm",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.summarizingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.enableSummarize",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.embeddingType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.chunkOverlap",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.delimiters.items",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.processingMethod",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.language",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.transcriptionModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.embeddingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.maxChunkSize",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.thresholdType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.algorithm",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.mimeType.items",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.agenticParsingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.appName",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.connectionId",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.type",
					"root.record.settings.indexingStrategySettings.metadataEnrichmentSettings.automations.items.entityId",
					"root.record.settings.indexingStrategySettings.metadataEnrichmentSettings.automations.items.version",
					"root.record.settings.indexingStrategySettings.metadataEnrichmentSettings.enabled",
					"root.record.settings.indexingStrategySettings.graphRagSettings.enable",
					"root.record.settings.piiMasking.regex.enabled",
					"root.record.settings.piiMasking.automations.enabled",
					"root.record.settings.piiMasking.automations.ids.items",
					"root.record.settings.piiMasking.piiByUA.enabled",
					"root.record.settings.enrichmentStrategies.items.processingMethod",
					"root.record.settings.enrichmentStrategies.items.model",
					"root.record.settings.enrichmentStrategies.items.automationId",
					"root.record.settings.enrichmentStrategies.items.version",
					"root.record.settings.enrichmentStrategies.items.parameters.items.name",
					"root.record.settings.enrichmentStrategies.items.parameters.items.description",
					"root.record.settings.enrichmentStrategies.items.parameters.items.isStandard",
					"root.record.settings.enrichmentStrategies.items.manualEnrichmentParameters.items.key",
					"root.record.settings.enrichmentStrategies.items.manualEnrichmentParameters.items.value",
					"root.record.settings.enrichmentStrategies.items.inputMappings.items.key",
					"root.record.settings.enrichmentStrategies.items.inputMappings.items.value",
					"root.record.settings.enrichmentStrategies.items.outputMappings.items.key",
					"root.record.settings.enrichmentStrategies.items.outputMappings.items.value",
					"root.record.settings.enrichmentStrategies.items.manualParameters",
					"root.record.settings.enrichmentStrategies.items.automationInput",
					"root.record.settings.enrichmentStrategies.items.enrichmentInput",
					"root.record.settings.enrichment.processingMethod",
					"root.record.settings.enrichment.model",
					"root.record.settings.enrichment.parameters.items.name",
					"root.record.settings.enrichment.parameters.items.description",
					"root.record.settings.enrichment.enabled",
					"root.record.additionalDetails.unifiedEntityModelId",
					"root.record.additionalDetails.metadataIndexing",
					"root.record.additionalDetails.embeddingModel",
					"root.record.additionalDetails.knowledgeInstructionsForPrompt",
					"root.record.additionalDetails.summary",
					"root.record.additionalDetails.faqs.items",
					"root.record.additionalDetails.vectorStore",
					"root.record.additionalDetails.vectorStoreConnectionId",
					"root.record.dataCatalogInfo.id",
					"root.record.customMetadata.items.name",
					"root.record.accessibleTo.items",
					"root.record.errorDetails.errorMessage"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":522,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2PYkn@_5NVxH-1@l",
			"id":"_EQHi7",
			"index":15,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"service_hub_attachment",
				"skipIfBlank":false,
				"record":{
					"url":"{{ CSZ80.outputs.path }}",
					"name":"{{ n_2PYkn.outputs.item.name }}",
					"fileType":"{{ n_2PYkn.outputs.item.fileType }}",
					"mimeType":"{{ n_2PYkn.outputs.item.fileType }}",
					"fileDetails":{
						"source":"{{ n_2PYkn.outputs.item.source }}",
						"sourceType":"{{ n_2PYkn.outputs.item.sourceType }}",
						"size":"{{ n_2PYkn.outputs.item.size }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":615,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2PYkn@_5NVxH-1@l",
			"id":"n_HfmMU",
			"index":16,
			"inputs":{
				"file":"{{ n_2PYkn.outputs.item }}",
				"expiryTime":24
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.metadata.uploadTime",
					"root.itemToAdd.metadata.mimeType",
					"root.itemToAdd.metadata.processedSize"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":536,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2PYkn@_5NVxH-1@l",
			"id":"n_eADoO",
			"index":17,
			"inputs":{
				"itemToAdd":{
					"id":"{{ _EQHi7.outputs.id }}",
					"url":"{{ n_HfmMU.outputs.url }}",
					"name":"{{ _EQHi7.outputs.properties.name }}",
					"metadata":{
						"uploadTime":"{{ _EQHi7.outputs.createdTime }}",
						"mimeType":"{{ _EQHi7.outputs.properties.mimeType }}",
						"processedSize":"{{ n_2PYkn.outputs.item.size }}"
					}
				},
				"insertLocation":"END",
				"listName":"{{ n_y9EQD.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":462,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_1U3YW",
			"index":18,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"200_undefined",
				"body":{
					"files":{
						"source":"{{ n_y9EQD.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"id":"{{ n_y9EQD.outputs.items[0].id }}",
							"url":"{{ n_y9EQD.outputs.items[0].url }}",
							"name":"{{ n_y9EQD.outputs.items[0].name }}",
							"metadata":{
								"uploadTime":"{{ n_y9EQD.outputs.items[0].metadata.uploadTime }}",
								"mimeType":"{{ n_y9EQD.outputs.items[0].metadata.mimeType }}",
								"processedSize":"{{ n_y9EQD.outputs.items[0].metadata.processedSize }}"
							}
						}
					}
				},
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		}
	],
	"ownerUserId":309,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"AI Agent"
	],
	"version":19
}