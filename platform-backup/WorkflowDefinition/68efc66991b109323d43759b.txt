{
	"appsUsed":[
		"gsheets"
	],
	"createdTime":1760544361350,
	"deleted":false,
	"edges":[
		{
			"fromNodeId":"n_Op7RI",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ZyxUg",
			"type":"next"
		},
		{
			"fromNodeId":"n_ZyxUg",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Gc5iU",
			"type":"next"
		},
		{
			"fromNodeId":"n_Gc5iU",
			"priority":0,
			"skip":false,
			"toNodeId":"_uhtK3",
			"type":"next"
		},
		{
			"fromNodeId":"_uhtK3",
			"priority":0,
			"skip":false,
			"toNodeId":"n_n7yx8",
			"type":"next"
		},
		{
			"fromNodeId":"n_n7yx8",
			"priority":0,
			"skip":false,
			"toNodeId":"n_cMZgl",
			"type":"next"
		}
	],
	"id":"68efc66991b109323d43759b",
	"lastModifiedBy":161861,
	"lcName":"assignment_vb",
	"modifiedTime":1761291414733,
	"name":"assignment_vb",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1055,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_Ld9p8-1",
			"id":"n_Op7RI",
			"index":1,
			"inputs":{},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"gsheets",
				"resourceVersion":6209,
				"connectionId":"68efc9edd89bf01060ccdb45",
				"resourceName":"gsheets_get_rows_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_Ld9p8-1",
			"id":"n_ZyxUg",
			"index":2,
			"inputs":{
				"sheetName":"Q1",
				"valueRenderOption":"FORMATTED_VALUE",
				"objectSourceResourceName":"gsheets_fetch_columns",
				"range":"1:20",
				"spreadsheetId":"1OTEKu6mtHf4F1fUefn2eUZCCsa4TQyT9hZiMXS6RBn4__Quartely_sheets",
				"googleDrive":"0AO8lpMZP6rz5Uk9PVA"
			},
			"skip":false,
			"subTitle":"Google Sheets",
			"title":"Get rows",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"gsheets",
				"resourceVersion":6219,
				"connectionId":"68efc9edd89bf01060ccdb45",
				"resourceName":"gsheets_get_rows_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_Ld9p8-1",
			"id":"n_Gc5iU",
			"index":3,
			"inputs":{
				"sheetName":"Q2",
				"valueRenderOption":"FORMATTED_VALUE",
				"objectSourceResourceName":"gsheets_fetch_columns",
				"range":"1:20",
				"spreadsheetId":"1OTEKu6mtHf4F1fUefn2eUZCCsa4TQyT9hZiMXS6RBn4__Quartely_sheets",
				"googleDrive":"0AO8lpMZP6rz5Uk9PVA"
			},
			"skip":false,
			"subTitle":"Google Sheets",
			"title":"Get rows",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"gsheets",
				"resourceVersion":6209,
				"connectionId":"68efc9edd89bf01060ccdb45",
				"resourceName":"gsheets_get_rows_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_Ld9p8-1",
			"id":"_uhtK3",
			"index":4,
			"inputs":{
				"sheetName":"Q3",
				"valueRenderOption":"FORMATTED_VALUE",
				"objectSourceResourceName":"gsheets_fetch_columns",
				"range":"1:20",
				"spreadsheetId":"1OTEKu6mtHf4F1fUefn2eUZCCsa4TQyT9hZiMXS6RBn4__Quartely_sheets",
				"googleDrive":"0AO8lpMZP6rz5Uk9PVA"
			},
			"skip":false,
			"subTitle":"Google Sheets",
			"title":"Get rows",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"gsheets",
				"resourceVersion":6219,
				"connectionId":"68efc9edd89bf01060ccdb45",
				"resourceName":"gsheets_get_rows_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_Ld9p8-1",
			"id":"n_n7yx8",
			"index":5,
			"inputs":{
				"sheetName":"Q4",
				"valueRenderOption":"FORMATTED_VALUE",
				"objectSourceResourceName":"gsheets_fetch_columns",
				"range":"1:20",
				"spreadsheetId":"1OTEKu6mtHf4F1fUefn2eUZCCsa4TQyT9hZiMXS6RBn4__Quartely_sheets",
				"googleDrive":"0AO8lpMZP6rz5Uk9PVA"
			},
			"skip":false,
			"subTitle":"Google Sheets",
			"title":"Get rows",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":1010,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_Ld9p8-1",
			"id":"n_cMZgl",
			"index":6,
			"inputs":{
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"sheet_1",
						"sheet_2",
						"sheet_3",
						"sheet_4"
					],
					"properties":{
						"sheet_1":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sheet 1"
						},
						"sheet_2":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sheet 2"
						},
						"sheet_3":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sheet 3"
						},
						"sheet_4":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sheet 4"
						}
					}
				},
				"code":"def q1 = readFrom('Q1_EmployeeData')\ndef q2 = readFrom('Q2_EmployeeData')\ndef q3 = readFrom('Q3_EmployeeData')\ndef q4 = readFrom('Q4_EmployeeData')\n\n// Flag and User ID (passed as parameters)\ndef getTop5 = input.get(\"getTop5\")         // Boolean flag\ndef userId = input.get(\"userId\")           // e.g., \"EMP101\"\n\n// ---------- MERGE & CLEANUP ----------\ndef allData = (q1 + q2 + q3 + q4)\n        .collect { row ->\n            [\n                EmployeeID   : row.EmployeeID?.trim(),\n                Name         : row.Name?.trim(),\n                Department   : row.Department?.trim(),\n                BonusAmount  : (row.BonusAmount ?: 0).toBigDecimal(),\n                LeavesTaken  : (row.LeavesTaken ?: 0).toInteger()\n            ]\n        }\n\n// Group by EmployeeID to get yearly totals\ndef summaryByEmployee = allData.groupBy { it.EmployeeID }.collect { empId, rows ->\n    [\n        EmployeeID  : empId,\n        Name        : rows[0].Name,\n        Department  : rows[0].Department,\n        TotalBonus  : rows.sum { it.BonusAmount },\n        TotalLeaves : rows.sum { it.LeavesTaken }\n    ]\n}\n\n// ---------- CASE 1: When getTop5 = true ----------\nif (getTop5) {\n    def top5Bonus = summaryByEmployee.sort { -it.TotalBonus }[0..<Math.min(5, summaryByEmployee.size())]\n    def top5LeastLeaves = summaryByEmployee.sort { it.TotalLeaves }[0..<Math.min(5, summaryByEmployee.size())]\n\n    return [\n        Top5_By_Total_Bonus: top5Bonus,\n        Top5_By_Least_Leaves: top5LeastLeaves\n    ]\n}\n\n// ---------- CASE 2: When userId is provided ----------\nif (userId) {\n    def employee = summaryByEmployee.find { it.EmployeeID == userId }\n    if (employee) {\n        return [\n            EmployeeID  : employee.EmployeeID,\n            Name        : employee.Name,\n            Department  : employee.Department,\n            TotalBonus  : employee.TotalBonus,\n            TotalLeaves : employee.TotalLeaves\n        ]\n    } else {\n        return [ message: \"EmployeeID '${userId}' not found.\" ]\n    }\n}\n\n// ---------- DEFAULT OUTPUT ----------\nreturn [ message: \"Please pass either 'getTop5' flag or a specific 'userId'.\" ]\n",
				"compile_static":false,
				"captureStdOutput":false
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		}
	],
	"ownerUserId":161861,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":4
}