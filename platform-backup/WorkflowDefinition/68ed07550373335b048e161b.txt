{
	"appsUsed":[
		
	],
	"createdTime":1760532829101,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760532932657,
		"deployedBy":1246,
		"deployedDefinitionId":"68ef99c41ff997436ed21bf0",
		"status":"DEPLOYED",
		"version":2,
		"workflowVersion":5
	},
	"edges":[
		{
			"fromNodeId":"n_zdNF1",
			"priority":0,
			"skip":false,
			"toNodeId":"n_3YZD5",
			"type":"next"
		},
		{
			"fromNodeId":"n_3YZD5",
			"priority":0,
			"skip":false,
			"toNodeId":"_dOm8a",
			"type":"next"
		},
		{
			"fromNodeId":"_dOm8a",
			"priority":0,
			"skip":false,
			"toNodeId":"n_WgPHk",
			"type":"next"
		},
		{
			"fromNodeId":"n_WgPHk",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nXuOP",
			"type":"next"
		},
		{
			"fromNodeId":"n_nXuOP",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ePDTm",
			"type":"next"
		},
		{
			"fromNodeId":"n_ePDTm",
			"priority":0,
			"skip":false,
			"toNodeId":"n_8knaX",
			"type":"next"
		},
		{
			"fromNodeId":"n_8knaX",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ZFRD7",
			"type":"loop"
		},
		{
			"fromNodeId":"n_ZFRD7",
			"priority":0,
			"skip":false,
			"toNodeId":"n_5iNjN",
			"type":"next"
		},
		{
			"fromNodeId":"n_5iNjN",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_8knaX",
			"type":"next"
		},
		{
			"fromNodeId":"n_8knaX",
			"priority":0,
			"skip":false,
			"toNodeId":"n_do71L",
			"type":"next"
		}
	],
	"id":"68ed07550373335b048e161b",
	"lastModifiedBy":39717,
	"lcName":"mask",
	"modifiedTime":1761468855450,
	"name":"Mask",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"callables",
				"resourceVersion":49,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_zdNF1",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"items":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"orignal":{
										"type":"string",
										"title":"orignal"
									},
									"superMasked":{
										"type":"string",
										"title":"superMasked"
									},
									"Details":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"entity":{
													"type":"string",
													"title":"entity"
												},
												"original":{
													"type":"object",
													"properties":{
														"text":{
															"type":"string",
															"title":"text"
														},
														"start":{
															"type":"integer",
															"title":"start"
														},
														"end":{
															"type":"integer",
															"title":"end"
														}
													},
													"title":"original",
													"additionalProperties":false
												},
												"mask":{
													"type":"object",
													"properties":{
														"operator":{
															"type":"string",
															"title":"operator"
														},
														"text":{
															"type":"string",
															"title":"text"
														},
														"start":{
															"type":"integer",
															"title":"start"
														},
														"end":{
															"type":"integer",
															"title":"end"
														}
													},
													"title":"mask",
													"additionalProperties":false
												}
											},
											"additionalProperties":false,
											"required":[]
										},
										"title":"Details"
									}
								},
								"additionalProperties":false
							},
							"title":"items"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"text_list":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"text_list"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":35,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_3YZD5",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"maskedText":{
							"type":"string",
							"title":"Masked Text"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"text"
					],
					"properties":{
						"text":{
							"type":"string",
							"title":"Text"
						}
					}
				},
				"configurationMode":"DEFAULT",
				"code":"from presidio_analyzer import AnalyzerEngine\nfrom presidio_anonymizer import AnonymizerEngine\nfrom presidio_anonymizer.entities import OperatorConfig\n\n# Initialize engines\nanalyzer = AnalyzerEngine()\nanonymizer = AnonymizerEngine()\n\n# Example input text\ntext = \"My name is John Doe, my email is john.doe@example.com and my phone number is +1-202-555-0173.\"\n\n# Detect PII: PERSON, EMAIL_ADDRESS, PHONE_NUMBER\nanalyzer_results = analyzer.analyze(\n    text=text,\n    entities=[\"PERSON\", \"EMAIL_ADDRESS\", \"PHONE_NUMBER\"],\n    language=\"en\"\n)\n\n# Mask all 3 types of PII\nanonymized_result = anonymizer.anonymize(\n    text=text,\n    analyzer_results=analyzer_results,\n    operators={\n        \"PERSON\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 8, \"from_end\": False}),\n        \"EMAIL_ADDRESS\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 12, \"from_end\": False}),\n        \"PHONE_NUMBER\": OperatorConfig(operator_name=\"mask\", params={\"masking_char\": \"*\", \"chars_to_mask\": 10, \"from_end\": False})\n    }\n)\n\nresult = {\"maskedText\": anonymized_result.text}\nprint(result)\n",
				"isAsync":false,
				"python_version":"3.12",
				"captureStdOutput":false,
				"parameters":{
					"text":""
				}
			},
			"skip":true,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				},
				"visibleOptionalFields":[
					"root.parameters.text_list.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":35,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"_dOm8a",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"result_batch":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"original":{
										"type":"string",
										"title":"original"
									},
									"maskedText":{
										"type":"string",
										"title":"maskedText"
									},
									"details":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"entity":{
													"type":"string",
													"title":"entity"
												},
												"original":{
													"type":"object",
													"properties":{
														"text":{
															"type":"string",
															"title":"text"
														},
														"start":{
															"type":"integer",
															"title":"start"
														},
														"end":{
															"type":"integer",
															"title":"end"
														}
													},
													"title":"original",
													"additionalProperties":false
												},
												"detection":{
													"type":"object",
													"properties":{
														"score":{
															"type":"number",
															"title":"score"
														},
														"why":{
															"type":"object",
															"properties":{
																"recognizer":{
																	"type":"string",
																	"title":"recognizer"
																},
																"original_score":{
																	"type":"number",
																	"title":"original_score"
																},
																"textual_explanation":{
																	"type":"string",
																	"title":"textual_explanation"
																},
																"pattern_name":{
																	"type":"string",
																	"title":"pattern_name"
																},
																"pattern":{
																	"type":"string",
																	"title":"pattern"
																},
																"validation_result":{
																	"type":"boolean",
																	"title":"validation_result"
																}
															},
															"title":"why",
															"additionalProperties":false
														}
													},
													"title":"detection",
													"additionalProperties":false
												},
												"mask":{
													"type":"object",
													"properties":{
														"operator":{
															"type":"string",
															"title":"operator"
														},
														"text":{
															"type":"string",
															"title":"text"
														},
														"start":{
															"type":"integer",
															"title":"start"
														},
														"end":{
															"type":"integer",
															"title":"end"
														}
													},
													"title":"mask",
													"additionalProperties":false
												}
											},
											"additionalProperties":false
										},
										"title":"details"
									}
								},
								"additionalProperties":false
							},
							"title":"result_batch"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"text_list":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Text List"
						}
					}
				},
				"configurationMode":"DEFAULT",
				"code":"from typing import List, Dict, Any, Optional\nimport json\n\nfrom presidio_analyzer import AnalyzerEngine\nfrom presidio_anonymizer import AnonymizerEngine\nfrom presidio_anonymizer.entities import OperatorConfig\n\n# Initialize engines\nanalyzer = AnalyzerEngine()\nanonymizer = AnonymizerEngine()\n\n# Define replacement operators instead of masking\noperators = {\n    \"PERSON\": OperatorConfig(operator_name=\"replace\", params={\"new_value\": \"<PERSON>\"}),\n    \"EMAIL_ADDRESS\": OperatorConfig(operator_name=\"replace\", params={\"new_value\": \"<EMAIL>\"}),\n    \"PHONE_NUMBER\": OperatorConfig(operator_name=\"replace\", params={\"new_value\": \"<PHONE>\"}),\n    # Optional default operator for any other detected entity types:\n    # \"DEFAULT\": OperatorConfig(operator_name=\"replace\", params={\"new_value\": \"<ANONYMIZED>\"})\n}\n\ndef _explain(result) -> Optional[Dict[str, Any]]:\n    \"\"\"Extract a compact 'why' explanation from AnalysisExplanation, if available.\"\"\"\n    if not getattr(result, \"analysis_explanation\", None):\n        return None\n    try:\n        ex = result.analysis_explanation.to_dict()\n        return {\n            \"recognizer\": ex.get(\"recognizer\"),\n            \"pattern_name\": ex.get(\"pattern_name\"),\n            \"pattern\": ex.get(\"pattern\"),\n            \"original_score\": ex.get(\"original_score\"),\n            \"validation_result\": ex.get(\"validation_result\"),\n            \"textual_explanation\": ex.get(\"textual_explanation\"),\n        }\n    except Exception:\n        # Fallback: best-effort textual explanation\n        try:\n            return {\"textual_explanation\": getattr(result.analysis_explanation, \"textual_explanation\", None)}\n        except Exception:\n            return None\n\ndef anonymize_text_with_details(text: str) -> Dict[str, Any]:\n    \"\"\"Analyze + anonymize and return detailed mapping of what/why/where replacement happened.\"\"\"\n    # 1) Detect PII with decision process enabled (so we can explain 'why')\n    analyzer_results = analyzer.analyze(\n        text=text,\n        entities=[\"PERSON\", \"EMAIL_ADDRESS\", \"PHONE_NUMBER\"],\n        language=\"en\",\n        return_decision_process=True  # include 'why' details\n    )\n\n    # 2) Anonymize using our operators\n    anonymized = anonymizer.anonymize(\n        text=text,\n        analyzer_results=analyzer_results,\n        operators=operators\n    )\n\n    # 3) Normalize anonymizer items to dicts with start/end/operator/replaced text\n    #    Using to_json() keeps behavior stable across versions.\n    anon_payload = json.loads(anonymized.to_json())\n    anon_items: List[Dict[str, Any]] = sorted(anon_payload.get(\"items\", []), key=lambda x: (x.get(\"start\", 0), x.get(\"end\", 0)))\n\n    # 4) Build a per-entity report. We align by entity_type and order.\n    #    Note: in rare overlap/conflict cases, anonymizer may drop/merge some detections.\n    #    This greedy pairing by entity type reflects the final applied operations.\n    from collections import defaultdict, deque\n    items_by_type: Dict[str, deque] = defaultdict(deque)\n    for it in anon_items:\n        items_by_type[it.get(\"entity_type\")].append(it)\n\n    detailed = []\n    for r in sorted(analyzer_results, key=lambda x: (x.start, x.end)):\n        original_substr = text[r.start:r.end]\n        replaced_item = items_by_type[r.entity_type].popleft() if items_by_type.get(r.entity_type) else None\n\n        entry = {\n            \"entity\": r.entity_type,\n            \"original\": {\n                \"text\": original_substr,\n                \"start\": r.start,\n                \"end\": r.end\n            },\n            \"detection\": {\n                \"score\": round(float(getattr(r, \"score\", 0.0)), 4),\n                \"why\": _explain(r)\n            },\n            \"replacement\": None\n        }\n\n        if replaced_item:\n            entry[\"replacement\"] = {\n                \"operator\": replaced_item.get(\"operator\"),\n                \"text\": replaced_item.get(\"text\"),               # replaced value after operator\n                \"start\": replaced_item.get(\"start\"),             # indexes in anonymized text\n                \"end\": replaced_item.get(\"end\")\n            }\n\n        detailed.append(entry)\n\n    return {\n        \"original\": text,\n        \"anonymizedText\": anonymized.text,\n        \"details\": detailed\n    }\n\ndef anonymize_texts_with_details(texts: List[str]) -> List[Dict[str, Any]]:\n    \"\"\"Batch analyze + anonymize with per-text details.\"\"\"\n    return [anonymize_text_with_details(t) for t in texts]\n\nbatch = anonymize_texts_with_details(text_list)\nresult = {\n    \"result_batch\": batch\n}",
				"isAsync":false,
				"python_version":"3.12",
				"captureStdOutput":false,
				"parameters":{
					"text_list":{
						"ua:type":"mappedArray",
						"source":"{{ n_zdNF1.outputs.text_list }}",
						"items":"{{ n_zdNF1.outputs.text_list[0] }}"
					}
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"maxLeaseTimeUnit":"SECONDS",
					"maxWaitDurationUnit":"SECONDS"
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"count":2,
					"enabled":true,
					"initialDelay":100
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				},
				"timeoutConfig":{
					"enabled":false
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":133,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_WgPHk",
			"index":4,
			"inputs":{
				"result":{
					"items":{
						"source":"{{ _dOm8a.outputs.result.result_batch }}",
						"ua:type":"mappedArray",
						"items":{
							"orignal":"{{ _dOm8a.outputs.result.result_batch[0].original }}",
							"superMasked":"{{ _dOm8a.outputs.result.result_batch[0].maskedText }}",
							"Details":{
								"source":"{{ _dOm8a.outputs.result.result_batch[0].details }}",
								"ua:type":"mappedArray",
								"items":{
									"entity":"{{ _dOm8a.outputs.result.result_batch[0].details[0].entity }}",
									"original":{
										"text":"{{ _dOm8a.outputs.result.result_batch[0].details[0].original.text }}",
										"start":"{{ _dOm8a.outputs.result.result_batch[0].details[0].original.start }}",
										"end":"{{ _dOm8a.outputs.result.result_batch[0].details[0].original.end }}"
									},
									"mask":{
										"operator":"{{ _dOm8a.outputs.result.result_batch[0].details[0].mask.operator }}",
										"text":"{{ _dOm8a.outputs.result.result_batch[0].details[0].mask.text }}",
										"start":"{{ _dOm8a.outputs.result.result_batch[0].details[0].mask.start }}",
										"end":"{{ _dOm8a.outputs.result.result_batch[0].details[0].mask.end }}"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":87,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_nXuOP",
			"index":5,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"orignal":{
											"type":"string",
											"title":"Orignal"
										},
										"superMasked":{
											"type":"string",
											"title":"Super Masked"
										},
										"Details":{
											"type":"array",
											"items":{
												"type":"object",
												"properties":{},
												"additionalProperties":false
											},
											"title":"Details"
										}
									},
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"List",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"List",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"orignal":{
										"type":"string",
										"title":"Orignal"
									},
									"superMasked":{
										"type":"string",
										"title":"Super Masked"
									},
									"Details":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false
										},
										"title":"Details"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_ePDTm",
			"index":6,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"regexPatterns":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"behaviour":{
										"type":"string",
										"title":"behaviour"
									},
									"name":{
										"type":"string",
										"title":"name"
									},
									"pattern":{
										"type":"string",
										"title":"pattern"
									}
								},
								"additionalProperties":false
							},
							"title":"regexPatterns"
						}
					},
					"additionalProperties":false
				},
				"jsonString":"{\"regexPatterns\":[{\"behaviour\":\"block\",\"name\":\"Email Masking\",\"pattern\":\"[\\\\w._%+-]+@[\\\\w.-]+\\\\.[A-Za-z]{2,}\"},{\"behaviour\":\"block\",\"name\":\"Mobile Number Masking (India)\",\"pattern\":\"(?:\\\\+?91[\\\\-\\\\s]?)?[6-9]\\\\d{9}\"},{\"behaviour\":\"block\",\"name\":\"Generic Phone Number Masking (Global)\",\"pattern\":\"\\\\b\\\\d{3}[-.\\\\s]?\\\\d{3}[-.\\\\s]?\\\\d{4}\\\\b\"}]}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":18,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_8knaX",
			"index":7,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ _dOm8a.outputs.result.result_batch }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":123,
				"resourceName":"callables_call_automation_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_8knaX@_5bsax-1@l",
			"id":"n_ZFRD7",
			"index":8,
			"inputs":{
				"automationId":"67e669196b919460b368dce2",
				"runtimeConnections":{},
				"synchronous":true,
				"distributeWorkflowLoad":false,
				"parametersList":{
					"items":{
						"text":"{{ n_8knaX.outputs.item.maskedText }}",
						"regexPatterns":{
							"source":"{{ n_ePDTm.outputs.result.regexPatterns }}",
							"ua:type":"mappedArray",
							"items":{
								"name":"{{ n_ePDTm.outputs.result.regexPatterns[0].name }}",
								"pattern":"{{ n_ePDTm.outputs.result.regexPatterns[0].pattern }}",
								"behaviour":"{{ n_ePDTm.outputs.result.regexPatterns[0].behaviour }}"
							}
						}
					},
					"ua:type":"mappedArray"
				},
				"version":"-1"
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.Details.items"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":87,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_8knaX@_5bsax-1@l",
			"id":"n_5iNjN",
			"index":9,
			"inputs":{
				"itemToAdd":{
					"orignal":"{{ n_8knaX.outputs.item.original }}",
					"superMasked":"{{ n_ZFRD7.outputs.result[0].text }}",
					"Details":{
						"source":"{{ n_8knaX.outputs.item.details }}",
						"ua:type":"mappedArray",
						"items":"{{ n_8knaX.outputs.item.details[0] }}"
					}
				},
				"insertLocation":"END",
				"listName":"{{ n_nXuOP.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":49,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5bsax-1",
			"id":"n_do71L",
			"index":10,
			"inputs":{
				"result":{
					"results":{
						"ua:type":"mappedArray",
						"items":{
							"original":"{{ n_nXuOP.outputs.items[0].orignal }}",
							"maskedText":"{{ n_nXuOP.outputs.items[0].superMasked }}",
							"additionalDetails":{
								"source":"{{ n_nXuOP.outputs.items[0].Details }}",
								"ua:type":"mappedArray",
								"items":"{{ n_nXuOP.outputs.items[0].Details[0] }}"
							}
						},
						"source":"{{ n_nXuOP.outputs.items }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1246,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":6
}