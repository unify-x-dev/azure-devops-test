{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1750920690048,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1761674855670,
		"deployedBy":0,
		"deployedDefinitionId":"69010667cb9893140dafaf0d",
		"status":"DEPLOYED",
		"version":71,
		"workflowVersion":118
	},
	"edges":[
		{
			"fromNodeId":"n_maSIk",
			"priority":0,
			"skip":false,
			"toNodeId":"n_XoItF",
			"type":"next"
		},
		{
			"fromNodeId":"n_XoItF",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qTDZW",
			"type":"next"
		},
		{
			"fromNodeId":"n_qTDZW",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2yPXb",
			"type":"next"
		},
		{
			"fromNodeId":"n_2yPXb",
			"priority":0,
			"skip":false,
			"toNodeId":"_OpAEh",
			"type":"loop"
		},
		{
			"fromNodeId":"_OpAEh",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2yPXb",
			"type":"next"
		},
		{
			"fromNodeId":"n_2yPXb",
			"priority":0,
			"skip":false,
			"toNodeId":"HwgDG",
			"type":"next"
		},
		{
			"fromNodeId":"HwgDG",
			"priority":0,
			"skip":false,
			"toNodeId":"n_HywTg",
			"type":"next"
		},
		{
			"fromNodeId":"n_HywTg",
			"priority":0,
			"skip":false,
			"toNodeId":"n_xMfPM",
			"type":"next"
		},
		{
			"fromNodeId":"n_xMfPM",
			"priority":0,
			"skip":false,
			"toNodeId":"n_vMsGq",
			"type":"next"
		},
		{
			"fromNodeId":"n_vMsGq",
			"priority":0,
			"skip":false,
			"toNodeId":"h19S2",
			"type":"loop"
		},
		{
			"fromNodeId":"h19S2",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_vMsGq",
			"type":"next"
		},
		{
			"fromNodeId":"n_vMsGq",
			"priority":0,
			"skip":false,
			"toNodeId":"n_UEtKc",
			"type":"next"
		},
		{
			"fromNodeId":"n_UEtKc",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_vx5sU",
			"type":"if"
		},
		{
			"fromNodeId":"n_vx5sU",
			"priority":0,
			"skip":false,
			"toNodeId":"G6fev",
			"type":"next"
		},
		{
			"fromNodeId":"n_UEtKc",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"G6fev",
			"type":"next"
		},
		{
			"fromNodeId":"G6fev",
			"priority":0,
			"skip":false,
			"toNodeId":"n_G6SBt",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"6856a274f4fbf54cd856b10d",
	"lastModifiedBy":0,
	"lcName":"ai eval | experiment | update conversational test case run for llm metrics",
	"modifiedTime":1761722781052,
	"name":"AI EVAL | Experiment | Update Conversational Test case run for LLM metrics",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":444,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YtUVw-1",
			"id":"n_maSIk",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"success":{
							"type":"boolean",
							"title":"Success"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"convTestCaseRunId":{
							"type":"string",
							"title":"Conv Test Case Run Id"
						},
						"llmTestCaseRunsIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Llm Test Case Runs Ids"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2716,
				"resourceName":"storage_by_unifyapps_get_records_by_ids",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YtUVw-1",
			"id":"n_XoItF",
			"index":2,
			"inputs":{
				"object_type":"test_case_runs",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"ids":{
					"ua:type":"mappedArray",
					"source":"{{ n_maSIk.outputs.llmTestCaseRunsIds }}",
					"items":"{{ n_maSIk.outputs.llmTestCaseRunsIds[0] }}"
				},
				"translationsOption":"DEFAULT",
				"readThroughSessionVariables":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Get records by IDs",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.testCaseRunsObjects.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":448,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YtUVw-1",
			"id":"n_qTDZW",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"metricScoresList":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Metric Scores List"
						},
						"totalLatency":{
							"type":"number",
							"title":"Total Latency"
						},
						"totalCost":{
							"type":"number",
							"title":"Total Cost"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"testCaseRunsObjects":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Test Case Runs Objects"
						}
					}
				},
				"code":"def aggregateMetricScores(testCaseRunsObjects) {\n    // Handle null or empty input\n    if (!testCaseRunsObjects) {\n        return [metricScoresList: [], totalLatency: 0]\n    }\n    \n    // Extract all metric scores from all test case runs with null safety\n    def allMetricScores = testCaseRunsObjects.collectMany { testCaseRun ->\n        testCaseRun?.properties?.metricScores ?: []\n    }\n    \n    // Group metric scores by metricId\n    def groupedByMetricId = allMetricScores.groupBy { metricScore ->\n        metricScore?.metricId\n    }\n    \n    // Calculate aggregated values for each metricId\n    def result = groupedByMetricId.collect { metricId, scores ->\n        // Calculate average cost (only for non-null cost values)\n        def costsWithValues = scores.findAll { it?.cost != null }\n        def avgCost = costsWithValues.isEmpty() ? 0 : \n                     costsWithValues.collect { it.cost }.sum() / costsWithValues.size()\n        \n        // Calculate average score (only for non-null score values)\n        def scoresWithValues = scores.findAll { it?.score != null }\n        def avgScore = scoresWithValues.isEmpty() ? 0 : \n                      scoresWithValues.collect { it.score }.sum() / scoresWithValues.size()\n        \n        // Calculate AND operation for all results (treat null as true)\n        def andResult = scores.collect { metricScore ->\n            metricScore?.result != null ? metricScore.result : true\n        }.inject(true) { acc, val -> acc && val }\n        \n        // Calculate sum of totalTokens (only for non-null values)\n        def totalTokensSum = scores.findAll { it?.totalTokens != null }\n                                  .collect { it.totalTokens }\n                                  .sum() ?: 0\n        \n        return [\n            \"metricId\": metricId,\n            \"cost\": avgCost,\n            \"score\": avgScore,\n            \"result\": andResult,\n            \"totalTokens\": totalTokensSum\n        ]\n    }\n    \n    // Calculate total latency across all test case runs (only non-null avgLatency)\n    def totalLatency = testCaseRunsObjects.findAll { it?.properties?.agentLatency != null && it.properties.agentLatency >= 0 }\n                                          .collect { it.properties.agentLatency }\n                                          .sum() ?: -1\n\n    // Calculate total cost across all test case runs (only non-null)\n    def totalCost = testCaseRunsObjects.findAll { it?.properties?.agentCost != null}\n                                          .collect { it.properties.agentCost }\n                                          .sum() ?: 0\n    \n    return [metricScoresList: result, totalLatency: totalLatency, totalCost : totalCost]\n}\n\n// Fix: Access the testCaseRunsObjects from the input JSON\ndef inputData = []\nif (this.binding.hasVariable('testCaseRunsObjects')) {\n    inputData = testCaseRunsObjects  \n} \nreturn aggregateMetricScores(inputData)\n",
				"compile_static":false,
				"parameters":{
					"testCaseRunsObjects":{
						"source":"{{ n_XoItF.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ n_XoItF.outputs.objects[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":453,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YtUVw-1",
			"id":"n_2yPXb",
			"index":4,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_qTDZW.outputs.result.metricScoresList }}",
				"captureIterations":true
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.updateFields.items.fieldName",
					"root.updateFields.items.actionType"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":437,
				"resourceName":"storage_by_unifyapps_update_record_fields_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2yPXb@_YtUVw-1@l",
			"id":"_OpAEh",
			"index":5,
			"inputs":{
				"recordId":"{{ n_maSIk.outputs.convTestCaseRunId }}",
				"writeThroughSessionVariables":false,
				"object_type":"test_case_runs",
				"skipIfBlank":false,
				"skipPermissionCheck":false,
				"updateFields":[
					{
						"fieldName":"properties.metricScores",
						"actionType":"ADD",
						"setValue":"{{ n_2yPXb.outputs.item }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update an existing record's fields",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":162,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YtUVw-1",
			"id":"HwgDG",
			"index":6,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"success":{
							"type":"boolean",
							"title":"Success"
						},
						"avgTokenUsed":{
							"type":"number",
							"title":"Avg Token Used"
						},
						"avgScore":{
							"type":"number",
							"title":"Avg Score"
						},
						"totalMetricsCost":{
							"type":"number",
							"title":"Total Metrics Cost"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"avgScore":0,
				"success":true,
				"avgTokenUsed":0,
				"totalMetricsCost":0
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"success":{
							"type":"boolean",
							"title":"Success"
						},
						"avgTokenUsed":{
							"type":"number",
							"title":"Avg Token Used"
						},
						"avgScore":{
							"type":"number",
							"title":"Avg Score"
						},
						"totalMetricsCost":{
							"type":"number",
							"title":"Total Metrics Cost"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"delay",
				"resourceVersion":773,
				"resourceName":"delay_for",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YtUVw-1",
			"id":"n_HywTg",
			"index":7,
			"inputs":{
				"duration":200,
				"unit":"MILLISECONDS"
			},
			"skip":false,
			"subTitle":"Delay",
			"title":"Set delay duration",
			"type":"DELAY"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2,
				"resourceName":"storage_by_unifyapps_get_record_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YtUVw-1",
			"id":"n_xMfPM",
			"index":8,
			"inputs":{
				"object_type":"test_case_runs",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"id":"{{ n_maSIk.outputs.convTestCaseRunId }}",
				"readThroughSessionVariables":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch record by ID",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":453,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YtUVw-1",
			"id":"n_vMsGq",
			"index":9,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_xMfPM.outputs.properties.metricScores }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":161,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_vMsGq@_YtUVw-1@l",
			"id":"h19S2",
			"index":10,
			"inputs":{
				"variables":[
					{
						"source":"{{ HwgDG.outputs.success }}",
						"value":"=AND({{ HwgDG.outputs.success }},{{ n_vMsGq.outputs.item.result }})"
					},
					{
						"source":"{{ HwgDG.outputs.avgTokenUsed }}",
						"value":"=SUM({{ HwgDG.outputs.avgTokenUsed }},{{ n_vMsGq.outputs.item.totalTokens }})"
					},
					{
						"source":"{{ HwgDG.outputs.avgScore }}",
						"value":"=SUM({{ HwgDG.outputs.avgScore }},{{ n_vMsGq.outputs.item.score }})"
					},
					{
						"source":"{{ HwgDG.outputs.totalMetricsCost }}",
						"value":"=SUM({{ HwgDG.outputs.totalMetricsCost }} + {{ n_vMsGq.outputs.item.cost }})"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":760,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YtUVw-1",
			"id":"n_UEtKc",
			"index":11,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_xMfPM.outputs.properties.metricScores }}",
						"filter":{
							"operator":"MISSING"
						}
					},
					{
						"property":"=LEN({{ n_xMfPM.outputs.properties.metricScores }})",
						"filter":{
							"operator":"EQUAL",
							"value":"0"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"Check if Only LLM metrics are present and there are no LLM testcases inside the conversational test case",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":800,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_UEtKc@_YtUVw-1@y",
			"id":"n_vx5sU",
			"index":12,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2595,
				"resourceName":"storage_by_unifyapps_update_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YtUVw-1",
			"id":"G6fev",
			"index":13,
			"inputs":{
				"numberOfRecordsToUpdate":"SINGLE",
				"triggerInputCondition":{
					"filters":[
						{
							"property":"id",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_maSIk.outputs.convTestCaseRunId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"test_case_runs",
				"skipIfBlank":false,
				"updateFields":[
					{
						"fieldName":"properties.agentLatency",
						"actionType":"SET",
						"setValue":"{{ n_qTDZW.outputs.result.totalLatency }}"
					},
					{
						"fieldName":"properties.agentCost",
						"actionType":"SET",
						"setValue":"{{ n_qTDZW.outputs.result.totalCost }}"
					},
					{
						"fieldName":"properties.avgTokenUsed",
						"actionType":"SET",
						"setValue":"=({{ HwgDG.outputs.avgTokenUsed }}/{{ n_vMsGq.outputs.size }})"
					},
					{
						"fieldName":"properties.result",
						"actionType":"SET",
						"setValue":"{{ HwgDG.outputs.success }}"
					},
					{
						"fieldName":"properties.totalMetricsCost",
						"actionType":"SET",
						"setValue":"{{ HwgDG.outputs.totalMetricsCost }}"
					}
				],
				"skipIfEmpty":false,
				"page":{
					"offset":0,
					"limit":20
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update records by query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":454,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_YtUVw-1",
			"id":"n_G6SBt",
			"index":14,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":522,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":120
}