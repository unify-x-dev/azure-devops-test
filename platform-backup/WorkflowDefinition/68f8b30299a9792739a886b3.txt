{
	"appsUsed":[
		"openai"
	],
	"createdTime":1761129218322,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1761214576353,
		"deployedBy":103775,
		"deployedDefinitionId":"68fa00708ba85850eeb48722",
		"status":"DEPLOYED",
		"version":7,
		"workflowVersion":23
	},
	"edges":[
		{
			"fromNodeId":"n_BNU0f",
			"priority":0,
			"skip":false,
			"toNodeId":"n_67pgX",
			"type":"next"
		},
		{
			"fromNodeId":"n_67pgX",
			"priority":0,
			"skip":false,
			"toNodeId":"n_bD64J",
			"type":"next"
		},
		{
			"fromNodeId":"n_bD64J",
			"priority":0,
			"skip":false,
			"toNodeId":"n_9vS4f",
			"type":"next"
		},
		{
			"fromNodeId":"n_9vS4f",
			"priority":0,
			"skip":false,
			"toNodeId":"n_9pcZ0",
			"type":"next"
		},
		{
			"fromNodeId":"n_9pcZ0",
			"priority":0,
			"skip":false,
			"toNodeId":"n_XBsiC",
			"type":"loop"
		},
		{
			"fromNodeId":"n_XBsiC",
			"priority":0,
			"skip":false,
			"toNodeId":"n_8edkM",
			"type":"next"
		},
		{
			"fromNodeId":"n_8edkM",
			"priority":0,
			"skip":false,
			"toNodeId":"n_06szr",
			"type":"next"
		},
		{
			"fromNodeId":"n_06szr",
			"priority":0,
			"skip":false,
			"toNodeId":"n_bCv3h",
			"type":"next"
		},
		{
			"fromNodeId":"n_bCv3h",
			"priority":0,
			"skip":false,
			"toNodeId":"n_JQDvJ",
			"type":"next"
		},
		{
			"fromNodeId":"n_JQDvJ",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_dSTGB",
			"type":"if"
		},
		{
			"fromNodeId":"_dSTGB",
			"priority":0,
			"skip":false,
			"toNodeId":"n_iTsP9",
			"type":"next"
		},
		{
			"fromNodeId":"n_iTsP9",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_9pcZ0",
			"type":"next"
		},
		{
			"fromNodeId":"n_JQDvJ",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_9pcZ0",
			"type":"next"
		},
		{
			"fromNodeId":"n_9pcZ0",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Kpomv",
			"type":"next"
		}
	],
	"id":"68f8b30299a9792739a886b3",
	"lastModifiedBy":103775,
	"lcName":"digikey excel extraction",
	"modifiedTime":1761215034160,
	"name":"Digikey Excel Extraction",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1045,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4PA8v-1",
			"id":"n_BNU0f",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"success":{
							"type":"boolean",
							"title":"Success"
						},
						"output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Output"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"file":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"file",
							"required":[]
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":182,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4PA8v-1",
			"id":"n_67pgX",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"extractedData":{
							"type":"string",
							"title":"Extracted Data"
						},
						"modelId":{
							"type":"string",
							"title":"Model Id"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"modelId":"e_ai_agent_openai_gpt_4.1"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"extractedData":{
							"type":"string",
							"title":"Extracted Data"
						},
						"modelId":{
							"type":"string",
							"title":"Model Id"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":1053,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4PA8v-1",
			"id":"n_bD64J",
			"index":3,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"items":{
											"type":"array",
											"items":{
												"type":"object",
												"properties":{},
												"additionalProperties":false
											},
											"title":"Items"
										}
									},
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"ExcelData",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"ExcelData",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"items":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false
										},
										"title":"Items"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":806,
				"resourceName":"excel_by_unifyapps_list_sheet_names",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4PA8v-1",
			"id":"n_9vS4f",
			"index":4,
			"inputs":{
				"fileDetails":"{{ n_BNU0f.outputs.file }}",
				"fileType":"XLSX"
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"List sheet names in an excel file",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":865,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4PA8v-1",
			"id":"n_9pcZ0",
			"index":5,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_9vS4f.outputs.sheetNames }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":6,
				"resourceName":"excel_by_unifyapps_extract_data",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_9pcZ0@_4PA8v-1@l",
			"id":"n_XBsiC",
			"index":6,
			"inputs":{
				"endColumn":20,
				"fileDetails":"{{ n_BNU0f.outputs.file }}",
				"sheetName":"{{ n_9pcZ0.outputs.item }}",
				"startRow":1,
				"startColumn":1,
				"endRow":20,
				"fileType":"{{ n_BNU0f.outputs.file.fileType }}"
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Extract Excel Data",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"openai",
				"resourceVersion":5503,
				"connectionId":"68ea9540a5e5253b2d030eea",
				"resourceName":"openai_send_message",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_9pcZ0@_4PA8v-1@l",
			"id":"n_8edkM",
			"index":7,
			"inputs":{
				"response_format":"json_object",
				"temperature":0.1,
				"model":"gpt-3.5-turbo",
				"message":"Analyze the provided Excel sheet data and identify the location of a table containing procurement/RFQ-related information.\nINPUT FORMAT: Array of arrays where each inner array represents a row.\nExample: [[\"A1\", \"B1\", \"C1\"], [\"A2\", \"B2\", \"C2\"]] means Row 1 has 3 cells, Row 2 has 3 cells.\nRELEVANT DATA INDICATORS:\nLook for columns containing:\n- MPN (Manufacturer Part Number)\n- CPN (Customer Part Number)\n- DPN (Distributor Part Number)\n- Manufacturer name\n- Description\n- Quantity (Qty)\n- Price\n- Lead time\n- Stock information\n- RFQ/Quote related data\nTASK: Identify where the actual data table begins and ends.\nRULES:\n1. Skip empty rows/columns at the beginning\n2. Skip title rows, metadata, or notes above the actual data table\n3. Identify the header row (containing column names like \"MPN\", \"Manufacturer\", etc.) as the starting row\n4. Column numbering: A=1, B=2, C=3, etc. (1-indexed)\n5. Row numbering: starts from 1 (1-indexed)\n6. Set \"proceed\" to true ONLY if relevant procurement data is found\n7. If NO relevant data is found, set all coordinates to 0 and \"proceed\" to false\nOUTPUT FORMAT (JSON only, no other text):\n{\n\"proceed\": <true or false>,\n\"startRow\": <number>,\n\"startColumn\": <number>,\n\"endRow\": <number>,\n\"endColumn\": <number>,\n\"reasoning\": \"<brief explanation of why these boundaries were chosen or why no data was found>\"\n}\nEXAMPLES:\nExample 1 - Data found:\nInput: [[\"\", \"\"], [\"\", \"RFQ Data\"], [\"\", \"MPN\", \"Manufacturer\", \"Qty\"], [\"\", \"ABC123\", \"Texas Instruments\", \"100\"], [\"\", \"XYZ789\", \"Analog Devices\", \"50\"]]\nOutput:\n{\n\"proceed\": true,\n\"startRow\": 3,\n\"startColumn\": 2,\n\"endRow\": 5,\n\"endColumn\": 4,\n\"reasoning\": \"Found header row at row 3 starting from column 2 with MPN, Manufacturer, and Qty columns. Data ends at row 5, column 4.\"\n}\nExample 2 - No relevant data:\nInput: [[\"Summary Report\"], [\"Date: 2024-01-01\"], [\"Notes:\", \"This is a summary\"], [\"\", \"\", \"\"]]\nOutput:\n{\n\"proceed\": false,\n\"startRow\": 0,\n\"startColumn\": 0,\n\"endRow\": 0,\n\"endColumn\": 0,\n\"reasoning\": \"No procurement-related data found. Sheet contains only summary text and notes without MPN, manufacturer, or quote information.\"\n}\nNow analyze the following data:\n\nNow analyze the following data:\n{{ n_XBsiC.outputs.data }}"
			},
			"skip":false,
			"subTitle":"OpenAI",
			"title":"Send message to OpenAI models",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1103,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_9pcZ0@_4PA8v-1@l",
			"id":"n_06szr",
			"index":8,
			"inputs":{
				"automationId":"66dfd76eb70dad256986b784",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"modelId":"{{ n_67pgX.outputs.modelId }}",
					"content":"Analyze the provided Excel sheet data and identify the location of a table containing procurement/RFQ-related information.\nINPUT FORMAT: Array of arrays where each inner array represents a row.\nExample: [[\"A1\", \"B1\", \"C1\"], [\"A2\", \"B2\", \"C2\"]] means Row 1 has 3 cells, Row 2 has 3 cells.\nRELEVANT DATA INDICATORS:\nLook for columns containing:\n- MPN (Manufacturer Part Number)\n- CPN (Customer Part Number)\n- DPN (Distributor Part Number)\n- Manufacturer name\n- Description\n- Quantity (Qty)\n- Price\n- Lead time\n- Stock information\n- RFQ/Quote related data\nTASK: Identify where the actual data table begins and ends.\nRULES:\n1. Skip empty rows/columns at the beginning\n2. Skip title rows, metadata, or notes above the actual data table\n3. Identify the header row (containing column names like \"MPN\", \"Manufacturer\", etc.) as the starting row\n4. Column numbering: A=1, B=2, C=3, etc. (1-indexed)\n5. Row numbering: starts from 1 (1-indexed)\n6. Set \"proceed\" to true ONLY if relevant procurement data is found\n7. If NO relevant data is found, set all coordinates to 0 and \"proceed\" to false\nOUTPUT FORMAT (JSON only, no other text):\n{\n  \"proceed\": <true or false>,\n  \"startRow\": <number>,\n  \"startColumn\": <number>,\n  \"endRow\": <number>,\n  \"endColumn\": <number>,\n  \"reasoning\": \"<brief explanation of why these boundaries were chosen or why no data was found>\"\n}\nEXAMPLES:\nExample 1 - Data found:\nInput: [[\"\", \"\"], [\"\", \"RFQ Data\"], [\"\", \"MPN\", \"Manufacturer\", \"Qty\"], [\"\", \"ABC123\", \"Texas Instruments\", \"100\"], [\"\", \"XYZ789\", \"Analog Devices\", \"50\"]]\nOutput:\n{\n  \"proceed\": true,\n  \"startRow\": 3,\n  \"startColumn\": 2,\n  \"endRow\": 5,\n  \"endColumn\": 4,\n  \"reasoning\": \"Found header row at row 3 starting from column 2 with MPN, Manufacturer, and Qty columns. Data ends at row 5, column 4.\"\n}\nExample 2 - No relevant data:\nInput: [[\"Summary Report\"], [\"Date: 2024-01-01\"], [\"Notes:\", \"This is a summary\"], [\"\", \"\", \"\"]]\nOutput:\n{\n  \"proceed\": false,\n  \"startRow\": 0,\n  \"startColumn\": 0,\n  \"endRow\": 0,\n  \"endColumn\": 0,\n  \"reasoning\": \"No procurement-related data found. Sheet contains only summary text and notes without MPN, manufacturer, or quote information.\"\n}\nNow analyze the following data:\n\nNow analyze the following data:\n{{ n_XBsiC.outputs.data }}",
					"type":"text",
					"response_format":"text",
					"maxTokens":4096,
					"temperature":0.1
				}
			},
			"skip":true,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":1081,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_9pcZ0@_4PA8v-1@l",
			"id":"n_bCv3h",
			"index":9,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"startRow":{
							"type":"integer",
							"title":"startRow"
						},
						"startColumn":{
							"type":"integer",
							"title":"startColumn"
						},
						"endRow":{
							"type":"integer",
							"title":"endRow"
						},
						"endColumn":{
							"type":"integer",
							"title":"endColumn"
						},
						"reasoning":{
							"type":"string",
							"title":"reasoning"
						},
						"proceed":{
							"type":"boolean",
							"title":"Proceed"
						}
					}
				},
				"jsonString":"{{ n_8edkM.outputs.choices[0].message.content }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":791,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_9pcZ0@_4PA8v-1@l",
			"id":"n_JQDvJ",
			"index":10,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_bCv3h.outputs.result.proceed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":6,
				"resourceName":"excel_by_unifyapps_extract_data",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_JQDvJ@n_9pcZ0@_4PA8v-1@l@y",
			"id":"_dSTGB",
			"index":11,
			"inputs":{
				"endColumn":"{{ n_bCv3h.outputs.result.endColumn }}",
				"fileDetails":"{{ n_BNU0f.outputs.file }}",
				"sheetName":"{{ n_9pcZ0.outputs.item }}",
				"startRow":"{{ n_bCv3h.outputs.result.startRow }}",
				"startColumn":"{{ n_bCv3h.outputs.result.startColumn }}",
				"endRow":"{{ n_bCv3h.outputs.result.endRow }}",
				"fileType":"xlsx"
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Extract Excel Data",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.items.items"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":1020,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_JQDvJ@n_9pcZ0@_4PA8v-1@l@y",
			"id":"n_iTsP9",
			"index":12,
			"inputs":{
				"itemToAdd":{
					"items":{
						"source":"{{ _dSTGB.outputs.data }}",
						"ua:type":"mappedArray",
						"items":"{{ _dSTGB.outputs.data[0] }}"
					}
				},
				"insertLocation":"END",
				"listName":"{{ n_bD64J.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1081,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4PA8v-1",
			"id":"n_Kpomv",
			"index":13,
			"inputs":{
				"result":{
					"success":true,
					"output":{
						"source":"{{ n_bD64J.outputs.items[0].items }}",
						"ua:type":"mappedArray",
						"items":"{{ n_bD64J.outputs.items[0].items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":103775,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":24
}