{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1740110514872,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296237695,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfd2dd60dd816d7799017",
		"status":"DEPLOYED",
		"version":56,
		"workflowVersion":149
	},
	"edges":[
		{
			"fromNodeId":"_9DRV6",
			"priority":0,
			"skip":false,
			"toNodeId":"_f6OoD",
			"type":"next"
		},
		{
			"fromNodeId":"_f6OoD",
			"priority":0,
			"skip":false,
			"toNodeId":"_acHEF",
			"type":"next"
		},
		{
			"fromNodeId":"_acHEF",
			"priority":0,
			"skip":false,
			"toNodeId":"n_9QKWI",
			"type":"next"
		},
		{
			"fromNodeId":"n_9QKWI",
			"priority":0,
			"skip":false,
			"toNodeId":"n_STvdz",
			"type":"next"
		},
		{
			"fromNodeId":"n_STvdz",
			"priority":0,
			"skip":false,
			"toNodeId":"_eH5rE",
			"type":"next"
		},
		{
			"fromNodeId":"_eH5rE",
			"priority":0,
			"skip":false,
			"toNodeId":"_uv1mK",
			"type":"next"
		},
		{
			"fromNodeId":"_uv1mK",
			"priority":0,
			"skip":false,
			"toNodeId":"_tmRjL",
			"type":"next"
		},
		{
			"fromNodeId":"_tmRjL",
			"priority":0,
			"skip":false,
			"toNodeId":"_a05CO",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"6777d5b61d7c8d0e248a0e16",
	"lastModifiedBy":0,
	"lcName":"latency tracking automation",
	"modifiedTime":1761722781650,
	"name":"Latency tracking automation",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":19,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PaZkJ-1",
			"id":"_9DRV6",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"details":{
							"type":"string",
							"title":"Details"
						}
					},
					"additionalProperties":false,
					"required":[
						"details"
					]
				},
				"setup":{
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"messageId":{
							"type":"string",
							"title":"Message Id"
						}
					},
					"additionalProperties":false,
					"required":[
						"caseId",
						"messageId"
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":19,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PaZkJ-1",
			"id":"_f6OoD",
			"index":2,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ _9DRV6.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"service_hub_message",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"sortBy":[
					{
						"field":"cTm",
						"order":"ASC"
					}
				],
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":200
				},
				"numberOfRecordsToFetch":"MULTIPLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":true
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":19,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PaZkJ-1",
			"id":"_acHEF",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"details":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Details"
						},
						"startTime":{
							"type":"string",
							"title":"Start Time"
						},
						"endTime":{
							"type":"string",
							"title":"End Time"
						},
						"requestedMessageTime":{
							"type":"string",
							"title":"Requested Message Time"
						},
						"messageDetail":{
							"type":"string",
							"title":"Message Detail"
						},
						"fanMessageDetail":{
							"type":"string",
							"title":"Fan Message Detail"
						}
					},
					"additionalProperties":false,
					"required":[
						"details",
						"startTime",
						"endTime",
						"requestedMessageTime",
						"messageDetail",
						"fanMessageDetail"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"messages":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Messages"
						},
						"requestedMessageId":{
							"type":"string",
							"title":"Requested Message Id"
						}
					},
					"additionalProperties":false,
					"required":[
						"messages",
						"requestedMessageId"
					]
				},
				"compile_static":false,
				"code":"def fanCount = 0\ndef brandCount = 0\ndef lastFanMessageTime = 0\ndef lastMessageTime = 0\ndef startTime = 0\ndef endTime = 0\ndef timeCaptured = false\ndef reqeuestedMessageTime = 0\ndef messageDetail = \"\"\ndef fanMessageDetail = \"\"\ndef firstfanMessageTime = 0;\ndef LastbrandMessageTime = 0;\n\ndef details = []\n\nfor (msg in messages) {\n    if (msg.properties.type != \"fan\") {\n        ++brandCount\n        if (lastFanMessageTime > 0) {\n            def timeTaken = msg.createdTime - lastMessageTime\n            def content =  msg.properties?.content?.text;\n            if(content == null || content.isBlank()) {\n                def copilotBlocks = msg?.properties?.content?.coPilotBlocks;\n                if(copilotBlocks != null ) {\n                    if(copilotBlocks.toString().contains(\"Searching\")) {\n                        content = \"Searching\"\n                    }\n                    if(copilotBlocks.toString().contains(\"Reading\")) {\n                        content = \"Reading\"\n                    }\n                    if(copilotBlocks.toString().containsIgnoreCase(\"chart\")) {\n                        content = \"Charts\"\n                    }\n                }\n            }\n\n            if(content == null || content.isBlank()) {\n                content = \"Tool calling\"\n            }\n            \n            def contentLength = Math.min(20, content.length())\n            content = content.substring(0, contentLength)\n            \n            String detail = \"Brand Message \" + brandCount + \" time taken is \" + timeTaken + \" \" + content\n            if (timeTaken > 1000) {\n                detail += \" msg: \"\n                // Add null checks and safe string handling\n                if (msg.properties?.content?.text) {\n                    def text = msg.properties.content.text\n                    def maxLength = Math.min(20, text.length())\n                    detail += text.substring(0, maxLength)\n                }\n                detail += \" \" + msg.createdTime\n            }\n            \n            if ((!binding.hasVariable('requestedMessageId') || msg.id == requestedMessageId) && !timeCaptured) {\n                startTime = lastFanMessageTime\n                endTime = msg.createdTime\n                reqeuestedMessageTime = timeTaken\n                timeCaptured = true\n                messageDetail = detail\n                fanMessageDetail = details.last()\n            }\n            \n            \n            if(msg?.properties?.additional?.internalMessageType == \"THOUGHT\" || msg?.properties?.additional?.internalMessageType == \"AGENT_INTERNAL_RESPONSE\") {\n\n            } else {\n                detail += (\" time from lastFanMessage \" + (msg.createdTime - lastFanMessageTime))\n            }\n            details.add(detail)\n }\n    } else {\n        ++fanCount\n        lastFanMessageTime = msg.createdTime\n        details.add(\"fanMessage \" + fanCount + \" id: \" + msg.id + \" \" + msg.createdTime)\n    }\n    lastMessageTime = msg.createdTime\n}\n\nreturn [\n    \"details\": details,\n    \"startTime\": startTime,\n    \"endTime\": endTime,\n    \"requestedMessageTime\": reqeuestedMessageTime,\n    \"messageDetail\": messageDetail,\n    \"fanMessageDetail\": fanMessageDetail\n]",
				"parameters":{
					"messages":{
						"source":"{{ _f6OoD.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ _f6OoD.outputs.objects[0] }}"
					},
					"requestedMessageId":"{{ _9DRV6.outputs.messageId }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":163,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PaZkJ-1",
			"id":"n_9QKWI",
			"index":4,
			"inputs":{
				"result":{
					"details":"asef"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"stop"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PaZkJ-1",
			"id":"n_STvdz",
			"index":5,
			"skip":false,
			"subTitle":"Stop",
			"title":"Stop",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"analytics_by_unifyapps",
				"resourceVersion":22,
				"resourceName":"analytics_by_unifyapps_execute_query",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PaZkJ-1",
			"id":"_eH5rE",
			"index":6,
			"inputs":{
				"query":"SELECT\nwne.id, wne.entryTime, wne.exitTime, wne.currentNodeAppName, wne.workflowId, wne.currentNodeId, (wne.exitTime - wne.entryTime) as executionTime\nFROM\nWORKFLOW_NODE_EXECUTION AS wne\nJOIN\n(\nSELECT\nid\nFROM\nWORKFLOW_EXECUTION AS we\nWHERE\nCAST(we.startNodeOutput -> 'caseId' AS CHAR) = '{{ _9DRV6.outputs.caseId }}'\nORDER BY\nstartTime ASC\n) AS filtered_we\nON\nwne.executionInstanceId = filtered_we.id\nWHERE ((wne.entryTime > {{ _acHEF.outputs.result.startTime }} AND wne.exitTime < {{ _acHEF.outputs.result.endTime }}) OR (wne.entryTime > {{ _acHEF.outputs.result.startTime }} AND wne.entryTime <  {{ _acHEF.outputs.result.endTime }} AND wne.currentNodeAppName=\"conv_ai_by_unifyapps\"))\nORDER BY wne.entryTime ASC",
				"group":"PLATFORM"
			},
			"skip":false,
			"subTitle":"Analytics by UnifyApps",
			"title":"Execute Analytics SQL Query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"analytics_by_unifyapps",
				"resourceVersion":22,
				"resourceName":"analytics_by_unifyapps_execute_query",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PaZkJ-1",
			"id":"_uv1mK",
			"index":7,
			"inputs":{
				"query":"SELECT id, startTime, executionTime, rootExecutionInstanceId,runTimeType, workflowId FROM WORKFLOW_EXECUTION as we WHERE ( ( CAST( we.startNodeOutput -> 'caseId' AS STRING ) = '{{ _9DRV6.outputs.caseId }}' ) AND startTime > {{ _acHEF.outputs.result.startTime }} AND startTime < {{ _acHEF.outputs.result.endTime }} ) ORDER BY startTime ASC",
				"group":"ENTITY_REPORTING"
			},
			"skip":false,
			"subTitle":"Analytics by UnifyApps",
			"title":"Execute Analytics SQL Query",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.objects.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":22,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PaZkJ-1",
			"id":"_tmRjL",
			"index":8,
			"inputs":{
				"input":{
					"type":"object",
					"properties":{
						"objects":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false,
								"required":[]
							},
							"title":"objects"
						},
						"timeTaken":{
							"type":"string",
							"title":"Time Taken"
						},
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"messageDetail":{
							"type":"string",
							"title":"Message Detail"
						},
						"fanMessageDetail":{
							"type":"string",
							"title":"Fan Message Detail"
						},
						"workflowObjs":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Workflow Objs"
						}
					},
					"additionalProperties":false,
					"required":[
						"timeTaken",
						"caseId",
						"messageDetail",
						"fanMessageDetail",
						"workflowObjs"
					]
				},
				"compile_static":false,
				"code":"def llmTime = 0\ndef flowStarted = false;\ndef flowTime = 0;\ndef flowPublishTime = 0;\nSet<String> includedWorkflows = []\ndef removedWorkflows = [ \"66fbed229edc4e0b6303cefd\",\n      \"673ede10befa5e1573509632\",\n      \"66ab98083d73300e63962287\",\n      \"67401fb6a28c4a295d14cd30\",\n      \"66d1673d9627d00147081244\"]\ndef includedNodes = []\ndef entireFlowcaptured = false;\nfor(obj in objects){\n  if(obj.columns.currentNodeId == \"_q2m8t\"){\n    llmTime = llmTime + obj.columns.exitTime - obj.columns.entryTime\n  } \n   if(obj.columns.currentNodeId == \"T41Bo\") {\n    flowStarted = true;\n    continue;\n   }\n\n   if(flowStarted == true) {\n  \n    if(\"66fbed229edc4e0b6303cefd\".equals(obj.columns.workflowId)){\n      flowPublishTime = obj.columns.exitTime - obj.columns.entryTime\n      continue\n    }\n\n    if(entireFlowcaptured!= true && obj.columns?.currentNodeAppName!= \"callables\") {\n    flowTime = flowTime + obj.columns.exitTime - obj.columns.entryTime\n    includedWorkflows.add(obj.columns.workflowId)\n    includedNodes.add(obj.columns.currentNodeId)\n    }\n   }\n\n   if(obj.columns.currentNodeId == \"_W6VAk\"){\n    flowTime = obj.columns.exitTime - obj.columns.entryTime;\n    entireFlowcaptured =true;\n   }\n}\n\n\nreturn [\"caseId\": caseId, \"fanMessageDetail\": fanMessageDetail, \"messageDetail\": messageDetail, \"totalTimeTaken\" :  timeTaken, \"llmTime\": llmTime, \"flowTime\": flowTime, \"internalTimeIncludingPublish\": timeTaken - llmTime - flowTime - flowPublishTime, \"flowStarted\": flowStarted, \"entireFlowcaptured\": entireFlowcaptured, \"includedNodes\": includedNodes, \"includedWorkflows\": includedWorkflows]",
				"parameters":{
					"objects":{
						"source":"{{ _eH5rE.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":"{{ _eH5rE.outputs.objects[0] }}"
					},
					"timeTaken":"{{ _acHEF.outputs.result.requestedMessageTime }}",
					"caseId":"{{ _9DRV6.outputs.caseId }}",
					"messageDetail":"{{ _acHEF.outputs.result.messageDetail }}",
					"fanMessageDetail":"{{ _acHEF.outputs.result.fanMessageDetail }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":19,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_PaZkJ-1",
			"id":"_a05CO",
			"index":9,
			"inputs":{
				"result":{
					"details":"{{ _acHEF.outputs.result.details }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1866,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"version":151
}