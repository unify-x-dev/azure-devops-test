{
	"appsUsed":[
		
	],
	"createdTime":1762004098810,
	"deleted":false,
	"edges":[
		{
			"fromNodeId":"n_Ff9PD",
			"priority":0,
			"skip":false,
			"toNodeId":"n_4hXDW",
			"type":"next"
		},
		{
			"fromNodeId":"n_4hXDW",
			"priority":0,
			"skip":false,
			"toNodeId":"n_4gk0w",
			"type":"next"
		},
		{
			"fromNodeId":"n_4gk0w",
			"priority":0,
			"skip":false,
			"toNodeId":"n_LUkEA",
			"type":"next"
		},
		{
			"fromNodeId":"n_LUkEA",
			"priority":0,
			"skip":false,
			"toNodeId":"n_VdssN",
			"type":"next"
		}
	],
	"id":"69060c82ed2bde5814eeb06d",
	"lastModifiedBy":27,
	"lcName":"best practices | check group | copilot",
	"modifiedTime":1762004098810,
	"name":"Best Practices | Check Group | Copilot",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1033,
				"resourceName":"callables_from_interface"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_uv02c-1",
			"id":"n_Ff9PD",
			"index":1,
			"inputs":{
				"result":{
					"additionalProperties":false,
					"type":"object",
					"required":[],
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"properties":{
						"checks":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"check_id":{
										"type":"string",
										"title":"check_id"
									},
									"status":{
										"type":"string",
										"title":"status"
									},
									"targets":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"path":{
													"type":"array",
													"items":{
														"type":"string"
													},
													"title":"path"
												},
												"targetId":{
													"type":"string",
													"title":"targetId"
												},
												"targetType":{
													"type":"string",
													"title":"targetType"
												}
											},
											"additionalProperties":false,
											"required":[]
										},
										"title":"targets"
									}
								},
								"additionalProperties":false
							},
							"title":"checks"
						}
					}
				},
				"callableInterfaceId":"6900b0ef1cd6437e8860e8b2",
				"setup":{
					"additionalProperties":false,
					"type":"object",
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"properties":{
						"check_id":{
							"type":"string",
							"title":"check_id"
						},
						"dataSources":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"createdTime":{
										"type":"integer",
										"title":"createdTime"
									},
									"deleted":{
										"type":"boolean",
										"title":"deleted"
									},
									"deployedEntityVersion":{
										"type":"integer",
										"title":"deployedEntityVersion"
									},
									"entityType":{
										"type":"string",
										"title":"entityType"
									},
									"entityVersion":{
										"type":"integer",
										"title":"entityVersion"
									},
									"id":{
										"type":"string",
										"title":"id"
									},
									"lastModifiedBy":{
										"type":"integer",
										"title":"lastModifiedBy"
									},
									"modifiedTime":{
										"type":"integer",
										"title":"modifiedTime"
									},
									"ownerUserId":{
										"type":"integer",
										"title":"ownerUserId"
									},
									"properties":{
										"type":"object",
										"title":"properties"
									},
									"standard":{
										"type":"boolean",
										"title":"standard"
									},
									"version":{
										"type":"integer",
										"title":"version"
									}
								},
								"additionalProperties":false
							},
							"title":"dataSources"
						},
						"interfacePage":{
							"type":"object",
							"properties":{
								"createdTime":{
									"type":"integer",
									"title":"createdTime"
								},
								"deleted":{
									"type":"boolean",
									"title":"deleted"
								},
								"deploymentState":{
									"type":"object",
									"properties":{
										"deployedAt":{
											"type":"integer",
											"title":"deployedAt"
										},
										"deployedBy":{
											"type":"integer",
											"title":"deployedBy"
										},
										"entityVersion":{
											"type":"integer",
											"title":"entityVersion"
										},
										"version":{
											"type":"integer",
											"title":"version"
										}
									},
									"title":"deploymentState",
									"additionalProperties":false
								},
								"entityType":{
									"type":"string",
									"title":"entityType"
								},
								"id":{
									"type":"string",
									"title":"id"
								},
								"lastModifiedBy":{
									"type":"integer",
									"title":"lastModifiedBy"
								},
								"modifiedTime":{
									"type":"integer",
									"title":"modifiedTime"
								},
								"ownerUserId":{
									"type":"integer",
									"title":"ownerUserId"
								},
								"properties":{
									"type":"object",
									"title":"properties"
								},
								"standard":{
									"type":"boolean",
									"title":"standard"
								},
								"version":{
									"type":"integer",
									"title":"version"
								}
							},
							"title":"interfacePage",
							"additionalProperties":false
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger interface",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":1072,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_uv02c-1",
			"id":"n_4hXDW",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"check_id":{
											"type":"string",
											"title":"check_id"
										},
										"status":{
											"type":"string",
											"title":"status"
										},
										"targets":{
											"type":"array",
											"items":{
												"type":"object",
												"properties":{
													"path":{
														"type":"array",
														"items":{
															"type":"string"
														},
														"title":"path"
													},
													"targetId":{
														"type":"string",
														"title":"targetId"
													},
													"targetType":{
														"type":"string",
														"title":"targetType"
													}
												},
												"additionalProperties":false,
												"required":[]
											},
											"title":"targets"
										}
									},
									"additionalProperties":false,
									"required":[
										"check_id",
										"status"
									]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"checks",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"type":"SCHEMA",
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"checks",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"check_id":{
										"type":"string",
										"title":"check_id"
									},
									"status":{
										"type":"string",
										"title":"status"
									},
									"targets":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"path":{
													"type":"array",
													"items":{
														"type":"string"
													},
													"title":"path"
												},
												"targetId":{
													"type":"string",
													"title":"targetId"
												},
												"targetType":{
													"type":"string",
													"title":"targetType"
												}
											},
											"additionalProperties":false,
											"required":[]
										},
										"title":"targets"
									}
								},
								"required":[
									"check_id",
									"status"
								]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				},
				"visibleOptionalFields":[
					"root.parameters.dataSources.items.id",
					"root.parameters.dataSources.items.properties",
					"root.parameters.interfacePage.id",
					"root.parameters.interfacePage.version",
					"root.parameters.interfacePage.properties",
					"root.parameters.dataSources.items.version"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":959,
				"resourceName":"code_by_unifyapps_javascript",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_uv02c-1",
			"id":"n_4gk0w",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"ua:__linkedVariable__":"n_4hXDW.outputs",
					"properties":{
						"items":{
							"type":"array",
							"title":"checks",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"check_id":{
										"type":"string",
										"title":"check_id"
									},
									"status":{
										"type":"string",
										"title":"status"
									},
									"targets":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"path":{
													"type":"array",
													"items":{
														"type":"string"
													},
													"title":"path"
												},
												"targetId":{
													"type":"string",
													"title":"targetId"
												},
												"targetType":{
													"type":"string",
													"title":"targetType"
												}
											},
											"additionalProperties":false,
											"required":[]
										},
										"title":"targets"
									}
								},
								"required":[
									"check_id",
									"status"
								]
							}
						}
					}
				},
				"input":{
					"additionalProperties":false,
					"type":"object",
					"ua:__linkedVariable__":"n_Ff9PD.outputs",
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"properties":{
						"check_id":{
							"type":"string",
							"title":"check_id"
						},
						"dataSources":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"createdTime":{
										"type":"integer",
										"title":"createdTime"
									},
									"deleted":{
										"type":"boolean",
										"title":"deleted"
									},
									"deployedEntityVersion":{
										"type":"integer",
										"title":"deployedEntityVersion"
									},
									"entityType":{
										"type":"string",
										"title":"entityType"
									},
									"entityVersion":{
										"type":"integer",
										"title":"entityVersion"
									},
									"id":{
										"type":"string",
										"title":"id"
									},
									"lastModifiedBy":{
										"type":"integer",
										"title":"lastModifiedBy"
									},
									"modifiedTime":{
										"type":"integer",
										"title":"modifiedTime"
									},
									"ownerUserId":{
										"type":"integer",
										"title":"ownerUserId"
									},
									"properties":{
										"type":"object",
										"title":"properties"
									},
									"standard":{
										"type":"boolean",
										"title":"standard"
									},
									"version":{
										"type":"integer",
										"title":"version"
									}
								},
								"additionalProperties":false
							},
							"title":"dataSources"
						},
						"interfacePage":{
							"type":"object",
							"properties":{
								"createdTime":{
									"type":"integer",
									"title":"createdTime"
								},
								"deleted":{
									"type":"boolean",
									"title":"deleted"
								},
								"deploymentState":{
									"type":"object",
									"properties":{
										"deployedAt":{
											"type":"integer",
											"title":"deployedAt"
										},
										"deployedBy":{
											"type":"integer",
											"title":"deployedBy"
										},
										"entityVersion":{
											"type":"integer",
											"title":"entityVersion"
										},
										"version":{
											"type":"integer",
											"title":"version"
										}
									},
									"title":"deploymentState",
									"additionalProperties":false
								},
								"entityType":{
									"type":"string",
									"title":"entityType"
								},
								"id":{
									"type":"string",
									"title":"id"
								},
								"lastModifiedBy":{
									"type":"integer",
									"title":"lastModifiedBy"
								},
								"modifiedTime":{
									"type":"integer",
									"title":"modifiedTime"
								},
								"ownerUserId":{
									"type":"integer",
									"title":"ownerUserId"
								},
								"properties":{
									"type":"object",
									"title":"properties"
								},
								"standard":{
									"type":"boolean",
									"title":"standard"
								},
								"version":{
									"type":"integer",
									"title":"version"
								}
							},
							"title":"interfacePage",
							"additionalProperties":false
						}
					}
				},
				"code":"(() => {\n  // `interfacePage` and `dataSources` are assumed to be provided\n  const makeCheckResult = (checkId, status, targets) => ({\n    check_id: checkId,\n    status,\n    targets: targets || [],\n  });\n\n  const runCheckSafe = (checkId, fn) => {\n    try {\n      return fn(checkId);\n    } catch (err) {\n      return makeCheckResult(checkId, 'failed', []);\n    }\n  };\n\n  // ============================================================\n  // Define all checks in a single source (no repeated IDs)\n  // ============================================================\n  const CHECKS = {\n    CHECK_4: ({ checkId }) => {\n      const failedIds = [];\n      const blocks = interfacePage?.properties?.blocks || {};\n\n      for (const blockId in blocks) {\n        const block = blocks[blockId];\n        const comp = block?.component;\n        if (!comp || comp.componentType !== 'NestedTable') continue;\n\n        const columns = Array.isArray(comp.content?.columns) ? comp.content.columns : [];\n\n        for (const col of columns) {\n          if (col?.type !== 'NESTED_TABLE' || !col?.data) continue;\n\n          for (const ds of dataSources) {\n            const schema = ds?.properties;\n            if (!schema) continue;\n\n            if (col.data.includes(ds.id)) {\n              const adv = schema?.advancedOptions;\n              const runBehaviour = adv?.runBehaviour || adv?.timing?.runBehaviour;\n              if (runBehaviour !== 'manual') {\n                failedIds.push(blockId);\n              }\n              break;\n            }\n          }\n        }\n      }\n\n      const status = failedIds.length ? 'failed' : 'passed';\n      const targets = [...new Set(failedIds)].map((id) => ({\n        targetId: id,\n        targetType: 'block',\n      }));\n\n      return makeCheckResult(checkId, status, targets);\n    },\n\n    CHECK_5: ({ checkId }) => {\n      const failedIds = [];\n      const blocks = interfacePage?.properties?.blocks || {};\n\n      for (const blockId in blocks) {\n        const comp = blocks[blockId]?.component;\n        if (comp?.componentType === 'Table' && !comp.content?.primaryKey) {\n          failedIds.push(blockId);\n        }\n      }\n\n      const status = failedIds.length ? 'failed' : 'passed';\n      const targets = failedIds.map((id) => ({\n        targetId: id,\n        targetType: 'block',\n      }));\n\n      return makeCheckResult(checkId, status, targets);\n    },\n  };\n\n  // ============================================================\n  // Execute dynamically (ID inferred automatically)\n  // ============================================================\n  const checks = Object.entries(CHECKS).map(([id, fn]) =>\n    runCheckSafe(id, (checkId) => fn({ checkId })),\n  );\n\n  return { items: checks };\n})();\n",
				"isAsync":false,
				"parameters":{
					"check_id":"{{ n_Ff9PD.outputs.check_id }}",
					"interfacePage":{
						"id":"{{ n_Ff9PD.outputs.interfacePage.id }}",
						"properties":"{{ n_Ff9PD.outputs.interfacePage.properties }}",
						"version":"{{ n_Ff9PD.outputs.interfacePage.version }}"
					},
					"dataSources":{
						"source":"{{ n_Ff9PD.outputs.dataSources }}",
						"ua:type":"mappedArray",
						"items":{
							"id":"{{ n_Ff9PD.outputs.dataSources[0].id }}",
							"properties":"{{ n_Ff9PD.outputs.dataSources[0].properties }}",
							"version":"{{ n_Ff9PD.outputs.dataSources[0].version }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Javascript",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.targets.items.path.items",
					"root.itemsToAdd.items.targets.items.targetId",
					"root.itemsToAdd.items.targets.items.targetType"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":990,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_uv02c-1",
			"id":"n_LUkEA",
			"index":4,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"source":"{{ n_4gk0w.outputs.result.items }}",
					"items":{
						"check_id":"{{ n_4gk0w.outputs.result.items[0].check_id }}",
						"status":"{{ n_4gk0w.outputs.result.items[0].status }}",
						"targets":{
							"source":"{{ n_4gk0w.outputs.result.items[0].targets }}",
							"ua:type":"mappedArray",
							"items":{
								"path":{
									"source":"{{ n_4gk0w.outputs.result.items[0].targets[0].path }}",
									"ua:type":"mappedArray",
									"items":"{{ n_4gk0w.outputs.result.items[0].targets[0].path[0] }}"
								},
								"targetId":"{{ n_4gk0w.outputs.result.items[0].targets[0].targetId }}",
								"targetType":"{{ n_4gk0w.outputs.result.items[0].targets[0].targetType }}"
							}
						}
					}
				},
				"listName":"{{ n_4hXDW.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1102,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_uv02c-1",
			"id":"n_VdssN",
			"index":5,
			"inputs":{
				"result":{
					"checks":{
						"source":"{{ n_4hXDW.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"check_id":"{{ n_4hXDW.outputs.items[0].check_id }}",
							"status":"{{ n_4hXDW.outputs.items[0].status }}",
							"targets":{
								"source":"{{ n_4hXDW.outputs.items[0].targets }}",
								"ua:type":"mappedArray",
								"items":{
									"targetId":"{{ n_4hXDW.outputs.items[0].targets[0].targetId }}",
									"targetType":"{{ n_4hXDW.outputs.items[0].targets[0].targetType }}"
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":27,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		"BPC"
	],
	"version":0
}