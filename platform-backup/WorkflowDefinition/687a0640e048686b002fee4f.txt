{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1752827456569,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296267735,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfd4bd60dd816d779909b",
		"status":"DEPLOYED",
		"version":33,
		"workflowVersion":60
	},
	"edges":[
		{
			"fromNodeId":"n_Whn5k",
			"priority":0,
			"skip":false,
			"toNodeId":"gbJBq",
			"type":"next"
		},
		{
			"fromNodeId":"gbJBq",
			"priority":0,
			"skip":false,
			"toNodeId":"6P6pn",
			"type":"next"
		},
		{
			"fromNodeId":"6P6pn",
			"priority":0,
			"skip":false,
			"toNodeId":"n_eTUm6",
			"type":"next"
		},
		{
			"fromNodeId":"n_eTUm6",
			"priority":0,
			"skip":false,
			"toNodeId":"_v9jpu",
			"type":"next"
		},
		{
			"fromNodeId":"_v9jpu",
			"priority":0,
			"skip":false,
			"toNodeId":"2gNGO",
			"type":"next"
		},
		{
			"fromNodeId":"2gNGO",
			"priority":0,
			"skip":false,
			"toNodeId":"vsOon",
			"type":"next"
		},
		{
			"fromNodeId":"vsOon",
			"priority":0,
			"skip":false,
			"toNodeId":"_0YITF",
			"type":"next"
		},
		{
			"fromNodeId":"_0YITF",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2C2zU",
			"type":"next"
		},
		{
			"fromNodeId":"n_2C2zU",
			"priority":0,
			"skip":false,
			"toNodeId":"n_AtrNt",
			"type":"next"
		},
		{
			"fromNodeId":"n_AtrNt",
			"priority":0,
			"skip":false,
			"toNodeId":"_kUEOO",
			"type":"next"
		},
		{
			"fromNodeId":"_kUEOO",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_rVRqK",
			"type":"if"
		},
		{
			"fromNodeId":"_rVRqK",
			"priority":0,
			"skip":false,
			"toNodeId":"0eoZB",
			"type":"next"
		},
		{
			"fromNodeId":"_kUEOO",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_GVgit",
			"type":"next"
		},
		{
			"fromNodeId":"_GVgit",
			"priority":0,
			"skip":false,
			"toNodeId":"x4Q8x",
			"type":"next"
		},
		{
			"fromNodeId":"0eoZB",
			"priority":0,
			"skip":false,
			"toNodeId":"y4EAP",
			"type":"next"
		},
		{
			"fromNodeId":"x4Q8x",
			"priority":0,
			"skip":false,
			"toNodeId":"y4EAP",
			"type":"next"
		},
		{
			"fromNodeId":"y4EAP",
			"priority":0,
			"skip":false,
			"toNodeId":"n_7n9KR",
			"type":"next"
		},
		{
			"fromNodeId":"n_7n9KR",
			"priority":0,
			"skip":false,
			"toNodeId":"jREnR",
			"type":"next"
		},
		{
			"fromNodeId":"jREnR",
			"priority":0,
			"skip":false,
			"toNodeId":"n_dDZcH",
			"type":"next"
		},
		{
			"fromNodeId":"n_dDZcH",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Uj6Hi",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"687a0640e048686b002fee4f",
	"lastModifiedBy":0,
	"lcName":"sql output to table ",
	"modifiedTime":1761722817423,
	"name":"SQL output to table ",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":786,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"n_Whn5k",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"tool_output":{
							"type":"string",
							"title":"tool_output"
						},
						"success":{
							"type":"boolean",
							"title":"success"
						},
						"error":{
							"type":"string",
							"title":"error"
						}
					},
					"additionalProperties":false
				},
				"setup":{
					"type":"object",
					"properties":{
						"chartId":{
							"type":"string",
							"title":"Chart Id"
						},
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"metadata":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Metadata"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"gbJBq",
			"index":2,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_chunkNumber",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_Whn5k.outputs.chartId }}"
							}
						},
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_Whn5k.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"citation_store",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":66,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"6P6pn",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"out":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"out"
						},
						"isNeg":{
							"type":"boolean",
							"title":"Is Neg"
						},
						"columnsInString":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Columns In String"
						},
						"allInString":{
							"type":"boolean",
							"title":"All In String"
						}
					},
					"additionalProperties":false,
					"required":[
						"out"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"rows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Rows"
						},
						"columnNames":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Column Names"
						}
					},
					"additionalProperties":false,
					"required":[
						"rows",
						"columnNames"
					]
				},
				"compile_static":false,
				"code":"\nif (!binding.hasVariable('rows') || rows.size() == 0) return [\"out\": [], \"isNegative\": false]\n\ndef sql_output = []\ndef stringsinCol = []\nrows.each { row ->\n    columnNames.each { col ->\n        if (!row.containsKey(col)) {\n            row[col] = \"null\"\n        }\n    }\n    sql_output << row\n}\n\ndef datePattern = ~/^\\d{4}-\\d{2}-\\d{2}$/\ndef typeMap = [\n    (String): \"STRING\",\n    (Integer): \"INTEGER\",\n    (Long): \"INTEGER\",\n    (Float): \"FLOAT\",\n    (Double): \"FLOAT\",\n    (BigDecimal): \"FLOAT\",\n    (Boolean): \"BOOLEAN\",\n    (Date): \"DATETYPE\",\n    (java.sql.Date): \"DATETYPE\"\n]\n\n// Gather column values by column\ndef columnValues = [:].withDefault{ [] }\nsql_output.each { row ->\n    columnNames.each { col ->\n        columnValues[col] << row[col]\n    }\n}\n\ndef schemaRec = [:]\ndef isNegative = false // <-- This will become true if any min < 0\ndef allStringCols = true\nif (sql_output) {\n    def firstRec = sql_output[0]\n    schemaRec = firstRec.collectEntries { k, v ->\n        def t = v?.getClass()\n        if (t == String) {\n            stringsinCol << k\n        }\n        if(t!=String) allStringCols=false\n\n        def mapped = (t == String && v ==~ datePattern) ? \"DATETYPE\" : typeMap.get(t)\n        if (mapped == null) mapped = t?.simpleName ?: \"UNKNOWN\"\n        if (mapped in [\"INTEGER\", \"FLOAT\"]) {\n            def vals = columnValues[k].collect {\n                if (it instanceof Number) return it\n                try { return it != null ? new BigDecimal(it.toString()) : null } catch(e) { return null }\n            }.findAll { it != null }\n            def minVal = vals && !vals.isEmpty() ? vals.min() : null\n            def maxVal = vals && !vals.isEmpty() ? vals.max() : null\n\n            // Check if any min is negative\n            if (minVal != null && minVal < 0) {\n                isNegative = true\n            }\n            [(k): [type: mapped, min: minVal, max: maxVal]]\n        } else {\n            [(k): [type: mapped, min: null, max: null]]\n        }\n    }\n}\n\nreturn [\"out\": (schemaRec ? [schemaRec] : []), \"isNegative\": isNegative, \"columnsInString\" : stringsinCol, \"allInString\" : allStringCols]\n\n",
				"parameters":{
					"rows":{
						"ua:type":"mappedArray",
						"source":"{{ gbJBq.outputs.properties.rowData }}",
						"items":"{{ gbJBq.outputs.properties.rowData[0] }}"
					},
					"columnNames":{
						"ua:type":"mappedArray",
						"source":"{{ gbJBq.outputs.properties.columnData }}",
						"items":"{{ gbJBq.outputs.properties.columnData[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":851,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"n_eTUm6",
			"index":4,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{}
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray",
					"items":"TABLE"
				},
				"ua:title":"chartType",
				"ua:list_type":"STRING"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"chartType",
							"disableActions":true,
							"items":{
								"type":"string"
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.sql_ui.items",
					"root.parameters.metadata.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":43,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"_v9jpu",
			"index":5,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"is_object_present":{
							"type":"boolean",
							"title":"Is Object Present"
						},
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						},
						"sql_output_ui":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"blockType":{
										"type":"string",
										"title":"Block Type"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Sql Output Ui"
						},
						"rows_or_columns_greater_10":{
							"type":"boolean",
							"title":"Num Rows or Columns Greater 10"
						},
						"num_rows":{
							"type":"integer",
							"title":"num_rows"
						},
						"columns":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"label":{
										"type":"string",
										"title":"Label"
									},
									"value":{
										"type":"string",
										"title":"Value"
									},
									"type":{
										"type":"string",
										"title":"type"
									},
									"currencyCode":{
										"type":"string",
										"title":"Currency Code"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Columns"
						}
					},
					"additionalProperties":false,
					"required":[
						"is_object_present",
						"sql_output",
						"sql_output_ui",
						"num_rows"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"rows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Rows"
						},
						"columnNames":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Column Names"
						},
						"sql_ui":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"sql_ui"
						},
						"metadata":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Metadata"
						}
					},
					"additionalProperties":false,
					"required":[
						"rows",
						"columnNames"
					]
				},
				"compile_static":false,
				"code":"// if (!binding.hasVariable('rows') || rows.size() == 0) {\n//     return [\"is_object_present\": false, \"columns_greater_10\": false, \"sql_output\": [], \"sql_output_ui\": [], \"num_rows\": 0]\n// }\n// try {\n//     def sql_output = []\n//     rows.each { row ->\n//         // if (row.columns.size() != 0) {\n//         columnNames.each { col ->\n//             if (!row.containsKey(col)) {\n//                 row[col] = \"null\"\n//             }\n//         }\n//         sql_output << row\n//         // }        \n//     }\n//     if (sql_output.size() == 0) {\n//         return [\"is_object_present\": false, \"columns_greater_10\": false, \"sql_output\": sql_output, \"sql_output_ui\": sql_ui, \"num_rows\": rows.size()]\n//     }\n//     if (sql_output[0].size() >= 10){\n//         return [\"is_object_present\": true, \"columns_greater_10\": true, \"sql_output\": sql_output, \"sql_output_ui\": sql_ui, \"num_rows\": rows.size()]\n//     }\n//     if (sql_output.size() <= 2) {\n//         return [\"is_object_present\": true, \"columns_greater_10\": false, \"sql_output\": sql_output, \"sql_output_ui\": sql_ui, \"num_rows\": rows.size()]\n//     }\n//     return [\"is_object_present\": true, \"columns_greater_10\": false, \"sql_output\": sql_output, \"sql_output_ui\": sql_ui, \"num_rows\": rows.size()]\n// } catch (Exception e) {\n//     return [\"is_object_present\": false, \"columns_greater_10\": false, \"sql_output\": [], \"sql_output_ui\": [], \"num_rows\": rows?.size() ?: 0]\n// }\n\ndef columnNameToLabel = [:]\n\nif(binding.hasVariable('metadata')){\n    metadata.each { tableMeta ->\n    tableMeta.columns.each { col ->\n        columnNameToLabel[col.column_name] = col.column_label\n    }\n}\n}\n\nString normalizeType(String rawType) {\n    switch (rawType?.toUpperCase()) {\n        case \"INTEGER\":\n        case \"FLOAT\":\n        case \"DOUBLE\":\n        case \"DECIMAL\":\n        case \"NUMBER\":\n            return \"NUMBER\"\n        case \"STRING\":\n        case \"CHAR\":\n        case \"TEXT\":\n            return \"STRING\"\n        case \"BOOLEAN\":\n            return \"STRING\"  // or handle as BOOLEAN if supported in UI\n        case \"DATE\":\n        case \"DATETYPE\":\n        case \"TIMESTAMP\":\n            return \"DATE\"\n        case \"TIME\":\n            return \"TIME\"\n        case \"CURRENCY\":\n            return \"CURRENCY\"\n        case \"PERCENT\":\n            return \"PERCENT\"\n        default:\n            return \"STRING\" // fallback\n    }\n}\n\nif (!binding.hasVariable('rows') || rows.size() == 0) {\n    return [\"is_object_present\": false, \"columns_greater_10\": false, \"sql_output\": [], \"sql_output_ui\": [], \"num_rows\": 0]\n}\ntry {\n    def sql_output = []\n    rows.each { row ->\n        columnNames.each { col ->\n            if (!row.containsKey(col) || row[col] == \"null\") {\n                def typeInfo = sql_ui[col][\"type\"]\n                def defaultValue\n                switch(normalizeType(typeInfo)) {\n                    case \"NUMBER\":\n                        defaultValue = 0\n                        break\n                    case \"STRING\":\n                        defaultValue = \"\"\n                        break\n                    case \"DATE\":\n                    case \"TIME\":\n                        defaultValue = null\n                        break\n                    case \"CURRENCY\":\n                    case \"PERCENT\":\n                        defaultValue = 0\n                        break\n                    default:\n                        defaultValue = null\n                }\n                row[col] = defaultValue\n            }\n        }\n        sql_output << row\n    }\n\n    def sqlUiMap = sql_ui[0]  // Assuming sql_ui is a list of one map\n\n    def columnsBlock = columnNames.collect { colName ->\n        def rawType = sqlUiMap[colName]?.type\n        def normalizedType = normalizeType(rawType)\n        [\n            label: columnNameToLabel.get(colName, colName),\n            type : normalizedType,\n            value: colName\n        ]\n    }\n\n    def block = [\n        blockType: \"Table\",\n        columns: columnsBlock\n        // title: \"PO Line Totals\" // Uncomment if you also want a title field\n    ]\n\n// Now `block` holds the required structure\n// To return or print as JSON:\n// import groovy.json.JsonOutput\n// println JsonOutput.prettyPrint(JsonOutput.toJson(block))\n\n// Or, if using as part of a return:\n\n    if (sql_output.size() == 0) {\n        return [\"is_object_present\": false, \"columns_greater_10\": false, \"sql_output\": sql_output, \"sql_output_ui\": block, \"num_rows\": rows.size(),\"columns\":columnsBlock]\n    }\n    if (sql_output[0].size() >= 20){\n        return [\"is_object_present\": true, \"columns_greater_10\": true, \"sql_output\": sql_output, \"sql_output_ui\": block, \"num_rows\": rows.size(), \"columns\":columnsBlock]\n    }\n    if (sql_output.size() <= 2) {\n        return [\"is_object_present\": true, \"columns_greater_10\": false, \"sql_output\": sql_output, \"sql_output_ui\": block, \"num_rows\": rows.size(), \"columns\":columnsBlock]\n    }\n    return [\"is_object_present\": true, \"columns_greater_10\": false, \"sql_output\": sql_output, \"sql_output_ui\": block, \"num_rows\": rows.size(), \"columns\":columnsBlock]\n} catch (Exception e) {\n    return [\"is_object_present\": false, \"columns_greater_10\": false, \"sql_output\": [], \"sql_output_ui\": [], \"num_rows\": rows?.size() ?: 0]\n}",
				"isAsync":false,
				"parameters":{
					"rows":{
						"ua:type":"mappedArray",
						"source":"{{ gbJBq.outputs.properties.rowData }}",
						"items":"{{ gbJBq.outputs.properties.rowData[0] }}"
					},
					"columnNames":{
						"ua:type":"mappedArray",
						"source":"{{ gbJBq.outputs.properties.columnData }}",
						"items":"{{ gbJBq.outputs.properties.columnData[0] }}"
					},
					"sql_ui":{
						"source":"{{ 6P6pn.outputs.result.out }}",
						"ua:type":"mappedArray",
						"items":"{{ 6P6pn.outputs.result.out[0] }}"
					},
					"metadata":{
						"source":"{{ n_Whn5k.outputs.metadata }}",
						"ua:type":"mappedArray",
						"items":"{{ n_Whn5k.outputs.metadata[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.columns.items.label",
					"root.parameters.columns.items.type",
					"root.parameters.columns.items.value",
					"root.parameters.columns.items.currencyCode"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":43,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"2gNGO",
			"index":6,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"data":{
							"type":"object",
							"title":"data"
						},
						"blockType":{
							"type":"string",
							"title":"blockType"
						},
						"title":{
							"type":"string",
							"title":"Title"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"columns":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"label":{
										"type":"string",
										"title":"label"
									},
									"type":{
										"type":"string",
										"title":"type"
									},
									"value":{
										"type":"string",
										"title":"value"
									},
									"currencyCode":{
										"type":"string",
										"title":"currencyCode"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"columns"
						},
						"blockType":{
							"type":"string",
							"title":"blockType"
						},
						"sql_output":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Sql Output"
						},
						"title":{
							"type":"string",
							"title":"Title"
						}
					},
					"additionalProperties":false,
					"required":[
						"sql_output"
					]
				},
				"compile_static":false,
				"code":"// if (sql_output.size() == 1) {\n//     // if (sql_output[0].size() == 1) {\n//     //     if(sql_output[0].containsKey(columns[0].value)){\n//     //         return [\"blockType\": \"StatCard\", \"data\": [\"type\": columns[0].get(\"type\", \"STRING\"), \"label\": columns[0].label, \"value\": sql_output[0].get(columns[0].value)]]\n//     //     }\n//     // } else {\n//         def fields = []\n//         for(col in columns){\n//             if(sql_output[0].containsKey(col.value)){\n//                 fields.add([\"type\": col.get(\"type\", \"STRING\"), \"label\": col.label, \"value\": sql_output[0].get(col.value)])\n//             }\n//         }\n//         return [\"blockType\": \"KeyValue\", \"data\": [\"fields\": fields]]\n//     // }\n// }\n\n// def new_columns = []\n// def new_sql_output = []\n// def value_label_map = [ : ]\n// for (def col in columns) {\n//     def new_col = [\"label\": col.label, \"id\": col.value, \"type\": col.get(\"type\", \"STRING\")]\n//     new_columns.add(new_col)\n//     value_label_map.put(col.value, col.label)\n// }\n// for (def data in sql_output){\n//     def new_data = [ : ]\n//     for (def key in data.keySet()){\n//         if (value_label_map.containsKey(key)){\n//             new_data[key] = data.get(key)\n//         }\n//     }\n//     new_sql_output.add(new_data)\n// }\n// def results = [\"blockType\": \"Table\", \"data\": [\"columns\": new_columns, \"rowData\": new_sql_output]]\n// return results\ndef title = binding.hasVariable(\"title\")?binding.getVariable(\"title\"):\"\"\nif (sql_output.size() == 1) {\n    def fields = []\n    for (def col in columns) {\n        if (sql_output[0].containsKey(col.value)) {\n            def field = [\n                \"type\": col.get(\"type\", \"STRING\"), \n                \"label\": col.label, \n                \"value\": sql_output[0].get(col.value)\n            ]\n\n            if (col.containsKey(\"currencyCode\")) {\n                field[\"currencyCode\"] = col.currencyCode\n            }\n            if (field[\"type\"] == \"PERCENT\") {\n                field[\"decimalPlaces\"] = 2\n            }\n            fields.add(field)\n        }\n    }\n    return [\"blockType\": \"KeyValue\", \"data\": [\"fields\": fields,\"title\":title]]\n}\n\ndef new_columns = []\ndef new_sql_output = []\ndef value_label_map = [:]\n\nfor (def col in columns) {\n    def new_col = [\n        \"label\": col.label, \n        \"id\": col.value, \n        \"type\": col.get(\"type\", \"STRING\")\n    ]\n    if (col.containsKey(\"currencyCode\")) {\n        new_col[\"currencyCode\"] = col.currencyCode\n    }\n    if (new_col[\"type\"] == \"PERCENT\") {\n        new_col[\"addOns\"] = [\n            \"notation\": \"standard\",\n            \"maximumFractionDigits\": 2\n        ]\n    }\n    new_columns.add(new_col)\n    value_label_map.put(col.value, col.label)\n    value_label_map.put(col.lable,col.value)\n}\n\nfor (def data in sql_output) {\n    def new_data = [:]\n    for (def key in data.keySet()) {\n        if (value_label_map.containsKey(key)) {\n            new_data[key] = data.get(key)\n            //new_data[value_label_map.get(key)] = data.get(key)\n        }\n    }\n    new_sql_output.add(new_data)\n}\ndef results = [\"blockType\": \"Table\", \"data\": [\"columns\": new_columns, \"rowData\": new_sql_output, \"title\":title]]\nreturn results",
				"isAsync":false,
				"parameters":{
					"columns":{
						"ua:type":"mappedArray",
						"items":{
							"label":"{{ _v9jpu.outputs.result.columns[0].label }}",
							"type":"{{ _v9jpu.outputs.result.columns[0].type }}",
							"value":"{{ _v9jpu.outputs.result.columns[0].value }}",
							"currencyCode":"{{ _v9jpu.outputs.result.columns[0].currencyCode }}"
						},
						"source":"{{ _v9jpu.outputs.result.columns }}"
					},
					"sql_output":{
						"ua:type":"mappedArray",
						"source":"{{ _v9jpu.outputs.result.sql_output }}",
						"items":"{{ _v9jpu.outputs.result.sql_output[0] }}"
					},
					"blockType":"{{ _v9jpu.outputs.result.sql_output_ui[0].blockType }}"
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":106,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"vsOon",
			"index":7,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"data":{
											"type":"object",
											"title":"data"
										},
										"blockType":{
											"type":"string",
											"title":"blockType"
										},
										"title":{
											"type":"string",
											"title":"title"
										}
									},
									"additionalProperties":false,
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray",
					"items":{
						"data":"{{ 2gNGO.outputs.result.data }}",
						"blockType":"{{ 2gNGO.outputs.result.blockType }}",
						"title":"{{ 2gNGO.outputs.result.title }}"
					}
				},
				"ua:title":"final_results",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"final_results",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"data":{
										"type":"object",
										"title":"data"
									},
									"blockType":{
										"type":"string",
										"title":"blockType"
									},
									"title":{
										"type":"string",
										"title":"title"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"storage_by_unifyapps_get_record_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"_0YITF",
			"index":8,
			"inputs":{
				"object_type":"e_ai_agent_conversation_state",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"id":"{{ n_Whn5k.outputs.caseId }}",
				"readThroughSessionVariables":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"n_2C2zU",
			"index":9,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"id",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_Whn5k.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"service_hub_case",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":862,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"n_AtrNt",
			"index":10,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"outputMssgeId":{
							"type":"string",
							"title":"Output Mssge Id"
						}
					},
					"required":[]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"outputMssgeId":{
							"type":"string",
							"title":"Output Mssge Id"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":10,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"_kUEOO",
			"index":11,
			"inputs":{
				"filters":[
					{
						"property":"{{ _0YITF.outputs.properties.triggerDetails.triggerDeploymentId }}",
						"filter":{
							"operator":"EQUAL",
							"value":"signal_trigger"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"conv_ai_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"conv_ai_by_unifyapps_publish_response",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_kUEOO@_KNQx0-1@y",
			"id":"_rVRqK",
			"index":12,
			"inputs":{
				"callableInterfaceId":"__ua__publish_response_interface",
				"parameters":{
					"coPilotBlocks":{
						"ua:type":"mappedArray",
						"source":"{{ n_NwnE7.outputs.final_results }}",
						"items":"{{ n_NwnE7.outputs.final_results[0] }}"
					},
					"caseId":"{{ GpPp2.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"Conversation AI by UnifyApps",
			"title":"Publish Response",
			"type":"CALL_INTERFACE_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_kUEOO@_KNQx0-1@y",
			"id":"0eoZB",
			"index":13,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_AtrNt.outputs.outputMssgeId }}",
						"value":"{{ _rVRqK.outputs.messageId }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":67,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_kUEOO@_KNQx0-1@n",
			"id":"_GVgit",
			"index":14,
			"inputs":{
				"automationId":"66d1673d9627d00147081244",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"coPilotBlocks":{
						"blocks":{
							"ua:type":"mappedArray",
							"source":"{{ vsOon.outputs.items }}",
							"items":"{{ vsOon.outputs.items[0] }}"
						},
						"role":"bot"
					},
					"caseId":"{{ n_Whn5k.outputs.caseId }}",
					"fromCustomerUserId":"{{ n_2C2zU.outputs.properties.fromCustomerUserId }}"
				}
			},
			"skip":false,
			"subTitle":"Publish to co pilot",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_kUEOO@_KNQx0-1@n",
			"id":"x4Q8x",
			"index":15,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_AtrNt.outputs.outputMssgeId }}",
						"value":"{{ _GVgit.outputs.messageId }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.updateFields.items.fieldName",
					"root.updateFields.items.actionType"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":438,
				"resourceName":"storage_by_unifyapps_update_record_fields_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"y4EAP",
			"index":16,
			"inputs":{
				"recordId":"{{ n_AtrNt.outputs.outputMssgeId }}",
				"writeThroughSessionVariables":false,
				"object_type":"service_hub_message",
				"skipPermissionCheck":false,
				"updateFields":[
					{
						"fieldName":"properties.additional.sqlQuery",
						"actionType":"SET",
						"setValue":"{{ gbJBq.outputs.properties.sqlQuery }}"
					},
					{
						"fieldName":"properties.additional.hasMoreData",
						"actionType":"SET",
						"setValue":"{{ gbJBq.outputs.properties.hasMoreData }}"
					},
					{
						"fieldName":"properties.additional.platformName",
						"actionType":"SET",
						"setValue":"{{ gbJBq.outputs.properties.sqlQueryPlatformName }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update an existing record's fields",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":525,
				"resourceName":"storage_by_unifyapps_update_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"n_7n9KR",
			"index":17,
			"inputs":{
				"numberOfRecordsToUpdate":"SINGLE",
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_chunkNumber",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_Whn5k.outputs.chartId }}"
							}
						},
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_Whn5k.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"citation_store",
				"updateFields":[
					{
						"fieldName":"properties.tableIsPublished",
						"actionType":"SET",
						"setValue":"true"
					}
				],
				"skipIfEmpty":false,
				"page":{
					"offset":0,
					"limit":20
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update records by query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":390,
				"resourceName":"variable_by_unifyapps_set_session_variable",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"jREnR",
			"index":18,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"disableThought":{
							"type":"boolean",
							"title":"Disable Thought"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"disableThought":true
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"disableThought":{
							"type":"boolean",
							"title":"Disable Thought"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Set Session Variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":803,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"n_dDZcH",
			"index":19,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"msg":{
							"type":"string",
							"title":"Msg"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"hasMoreData":{
							"type":"boolean",
							"title":"Has More Data"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def markdown = \"A table representing the data has been published to the user.\"\n\nif (binding.hasVariable(\"hasMoreData\") && hasMoreData) {\n  markdown+=\"STRICTLY, mention to the user about the 'EXPORT' option to enable user to download the full non-truncated version.\"\n}\nreturn [\"msg\" : markdown]",
				"parameters":{
					"hasMoreData":"{{ gbJBq.outputs.properties.hasMoreData }}"
				}
			},
			"skip":false,
			"subTitle":"Code",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":797,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KNQx0-1",
			"id":"n_Uj6Hi",
			"index":20,
			"inputs":{
				"result":{
					"success":true,
					"tool_output":"{{ n_dDZcH.outputs.result.msg }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":38712,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":62
}