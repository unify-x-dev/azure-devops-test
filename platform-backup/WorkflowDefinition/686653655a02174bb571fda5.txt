{
	"appsUsed":[
		
	],
	"createdTime":1753185810097,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296159163,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfcdf0c3d19149a9e3421",
		"status":"DEPLOYED",
		"version":25,
		"workflowVersion":49
	},
	"edges":[
		{
			"fromNodeId":"n_LjL7f",
			"priority":0,
			"skip":false,
			"toNodeId":"P6TRp",
			"type":"next"
		},
		{
			"fromNodeId":"P6TRp",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"tPomJ",
			"type":"if"
		},
		{
			"fromNodeId":"tPomJ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_iL72m",
			"type":"next"
		},
		{
			"fromNodeId":"n_iL72m",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ETjCc",
			"type":"if"
		},
		{
			"fromNodeId":"n_ETjCc",
			"priority":0,
			"skip":false,
			"toNodeId":"eS3FZ",
			"type":"next"
		},
		{
			"fromNodeId":"n_iL72m",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"eS3FZ",
			"type":"next"
		},
		{
			"fromNodeId":"eS3FZ",
			"priority":0,
			"skip":false,
			"toNodeId":"Y4ACW",
			"type":"next"
		},
		{
			"fromNodeId":"Y4ACW",
			"priority":0,
			"skip":false,
			"toNodeId":"DVPzm",
			"type":"next"
		},
		{
			"fromNodeId":"DVPzm",
			"name":"success",
			"priority":0,
			"skip":false,
			"toNodeId":"n_wtAxL",
			"type":"next"
		},
		{
			"fromNodeId":"DVPzm",
			"name":"error",
			"priority":0,
			"skip":false,
			"toNodeId":"n_MJRO0",
			"type":"error"
		},
		{
			"fromNodeId":"n_wtAxL",
			"priority":0,
			"skip":false,
			"toNodeId":"n_cKDe9",
			"type":"next"
		},
		{
			"fromNodeId":"n_MJRO0",
			"priority":0,
			"skip":false,
			"toNodeId":"n_cKDe9",
			"type":"next"
		},
		{
			"fromNodeId":"P6TRp",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_cKDe9",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"686653655a02174bb571fda5",
	"lastModifiedBy":0,
	"lcName":"knowledge indexer | salesforce | index object details",
	"modifiedTime":1761722667457,
	"name":"Knowledge Indexer | salesforce | Index object details",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":444,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_FVvSa-1",
			"id":"n_LjL7f",
			"index":0,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"success":{
							"type":"boolean",
							"title":"Success"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"record":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Record",
							"required":[]
						},
						"knowledgeId":{
							"type":"string",
							"title":"Knowledge Id"
						},
						"aiAgentId":{
							"type":"string",
							"title":"Ai Agent Id"
						},
						"knowledgeVersion":{
							"type":"string",
							"title":"Knowledge Version"
						},
						"lastSyncTime":{
							"type":"number",
							"title":"Last Sync Time"
						},
						"connectionId":{
							"type":"string",
							"title":"Connection Id"
						},
						"objectName":{
							"type":"string",
							"title":"Object Name"
						},
						"currentTimeEpoch":{
							"type":"number",
							"title":"Current Time Epoch"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":367,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_FVvSa-1",
			"id":"P6TRp",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_LjL7f.outputs.record.attributes.type }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"xsdSchemaConfig":{}
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":408,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"P6TRp@_FVvSa-1@y",
			"id":"tPomJ",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"chunkMetadata":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Chunk Metadata"
						},
						"isIndex":{
							"type":"boolean",
							"title":"Is Index"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"record":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Record"
						},
						"lastSyncTime":{
							"type":"number",
							"title":"Last Sync Time"
						},
						"currentTime":{
							"type":"number",
							"title":"Current Time"
						}
					},
					"additionalProperties":false,
					"required":[
						"record"
					]
				},
				"compile_static":false,
				"code":"def chunkMetadata = [:]\ndef recordMap = [:]\n\nif(binding.hasVariable('record')) {\n  recordMap = record;\n}\n\nif (recordMap.containsKey('LastModifiedDate') && recordMap.LastModifiedDate) {\n    try {\n        def instant = java.time.Instant.parse(recordMap.LastModifiedDate).toEpochMilli()\n        if(binding.hasVariable('lastSyncTime') && instant < lastSyncTime && instant > currentTimeEpoch)\n        {\n            return [\"isIndex\": false, \"chunkMetadata\": [:]]\n        }\n        else if (instant > currentTime)\n        {\n            return [\"isIndex\": false, \"chunkMetadata\": [:]]\n        }\n        chunkMetadata << [\"modifiedTime\": instant]\n    } catch (Exception e) {\n        def formatter = java.time.format.DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\")\n        def zonedDateTime = java.time.ZonedDateTime.parse(recordMap.LastModifiedDate, formatter).toInstant().toEpochMilli()\n        if(binding.hasVariable('lastSyncTime') && zonedDateTime < lastSyncTime && zonedDateTime > currentTimeEpoch)\n        {\n            return [\"isIndex\": false, \"chunkMetadata\": [:]]\n        }\n        else if (zonedDateTime > currentTime)\n        {\n            return [\"isIndex\": false, \"chunkMetadata\": [:]]\n        }\n        chunkMetadata << [\"modifiedTime\": zonedDateTime]\n    }\n}\n\n\nchunkMetadata << (recordMap.containsKey('Id') && recordMap.Id ? [\"id\": recordMap.Id] : [:])\nchunkMetadata << (recordMap.containsKey('Name') && recordMap.Name ? [\"name\": recordMap.Name] : [:])\nif (recordMap.containsKey('CreatedDate') && recordMap.CreatedDate) {\n    try {\n        def instant = java.time.Instant.parse(recordMap.CreatedDate)\n        chunkMetadata << [\"createdTime\": instant.toEpochMilli()]\n    } catch (Exception e) {\n        def formatter = java.time.format.DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\")\n        def zonedDateTime = java.time.ZonedDateTime.parse(recordMap.CreatedDate, formatter)\n        chunkMetadata << [\"createdTime\": zonedDateTime.toInstant().toEpochMilli()]\n    }\n}\nchunkMetadata << (recordMap.containsKey('referenceUrl') && recordMap.referenceUrl ? [\"referenceUrl\": recordMap.referenceUrl] : [:])\nchunkMetadata << [\"appName\" : \"salesforce\"]\nchunkMetadata << (recordMap.containsKey('CreatedById') && recordMap.CreatedById ? [\"author\": recordMap.CreatedById] : [:])\nchunkMetadata << (recordMap.containsKey('OwnerId') && recordMap.OwnerId ? [\"author\": recordMap.OwnerId] : [:])\n\nreturn [\"isIndex\": true, \"chunkMetadata\": chunkMetadata]",
				"parameters":{
					"record":"{{ n_LjL7f.outputs.record }}",
					"lastSyncTime":"{{ n_LjL7f.outputs.lastSyncTime }}",
					"currentTime":"{{ n_LjL7f.outputs.currentTimeEpoch }}"
				}
			},
			"skip":false,
			"subTitle":"Chunk metadata creation & Checking filter",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":437,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"P6TRp@_FVvSa-1@y",
			"id":"n_iL72m",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ tPomJ.outputs.result.isIndex }}",
						"filter":{
							"operator":"EQUAL",
							"value":"false"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":454,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_iL72m@P6TRp@_FVvSa-1@y@y",
			"id":"n_ETjCc",
			"index":0,
			"inputs":{
				"result":{
					"success":false
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":427,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"P6TRp@_FVvSa-1@y",
			"id":"eS3FZ",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"OwnerId":{
							"type":"string",
							"title":"Owner ID"
						},
						"CreatedById":{
							"type":"string",
							"title":"Created by ID"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"record":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Record"
						}
					},
					"additionalProperties":false,
					"required":[
						"record"
					]
				},
				"compile_static":false,
				"code":"def recordMap = [:]\n\nif(binding.hasVariable('record')) {\n  recordMap = record;\n}\n\ndef ownerId = '';\ndef createdRecordId = '';\n\nif(recordMap.containsKey('CreatedById')) {\n  createdRecordId= recordMap.CreatedById\n}\n\nif(recordMap.containsKey('OwnerId')) {\n    ownerId= recordMap.OwnerId\n}\n\nreturn ['OwnerId': ownerId , 'CreatedById': createdRecordId]\n\n\n",
				"parameters":{
					"record":"{{ n_LjL7f.outputs.record }}"
				}
			},
			"skip":false,
			"subTitle":"get owner",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":416,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"P6TRp@_FVvSa-1@y",
			"id":"Y4ACW",
			"index":0,
			"inputs":{
				"automationId":"67dd464e24f9fb5bd409f75d",
				"runtimeConnections":{
					"salesforce":"{{ n_LjL7f.outputs.connectionId }}"
				},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"OwnerId":"{{ eS3FZ.outputs.result.OwnerId }}",
					"CreatedById":"{{ eS3FZ.outputs.result.CreatedById }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"cacheKey":"{{ eS3FZ.outputs.result.OwnerId }}-{{ eS3FZ.outputs.result.CreatedById }}",
					"enabled":true,
					"timeToLive":"3600",
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Get Shared With Ids",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":410,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"MANUAL",
			"groupId":"P6TRp@_FVvSa-1@y",
			"id":"DVPzm",
			"index":0,
			"inputs":{
				"automationId":"67091f09c6db330cf5b08ead",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"text":"Salesforce's object {{ n_LjL7f.outputs.objectName }}'s data : {{ n_LjL7f.outputs.record }}",
					"knowledgeId":"{{ n_LjL7f.outputs.knowledgeId }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"MANUAL",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Text chunker",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":13,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"DVPzm@P6TRp@_FVvSa-1@y@success",
			"id":"n_wtAxL",
			"index":0,
			"inputs":{
				"automationId":"66af3ff4cd79b321cb478a37",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"chunks":{
						"items":{
							"data":"Salesforce's object {{ n_LjL7f.outputs.objectName }}'s data : {{ n_LjL7f.outputs.record }}",
							"sharedWithIds":{
								"source":"{{ Y4ACW.outputs.sharedWithIds }}",
								"ua:type":"mappedArray",
								"items":"{{ Y4ACW.outputs.sharedWithIds[0] }}"
							}
						},
						"ua:type":"mappedArray"
					},
					"knowledgeId":"{{ n_LjL7f.outputs.knowledgeId }}",
					"chunkMetadata":"{{ tPomJ.outputs.result.chunkMetadata }}",
					"knowledgeVersion":"{{ n_LjL7f.outputs.knowledgeVersion }}",
					"uniqueEntityId":"{{ n_LjL7f.outputs.record.Id }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":13,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"DVPzm@P6TRp@_FVvSa-1@y@error",
			"id":"n_MJRO0",
			"index":0,
			"inputs":{
				"automationId":"66af3ff4cd79b321cb478a37",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"chunks":{
						"source":"{{ DVPzm.outputs.chunks }}",
						"ua:type":"mappedArray",
						"items":{
							"data":"{{ DVPzm.outputs.chunks[0] }}",
							"sharedWithIds":{
								"source":"{{ Y4ACW.outputs.sharedWithIds }}",
								"ua:type":"mappedArray",
								"items":"{{ Y4ACW.outputs.sharedWithIds[0] }}"
							}
						}
					},
					"knowledgeId":"{{ n_LjL7f.outputs.knowledgeId }}",
					"chunkMetadata":"{{ tPomJ.outputs.result.chunkMetadata }}",
					"knowledgeVersion":"{{ n_LjL7f.outputs.knowledgeVersion }}",
					"uniqueEntityId":"{{ n_LjL7f.outputs.record.Id }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":454,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_FVvSa-1",
			"id":"n_cKDe9",
			"index":0,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":0,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":51
}