{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1759408882903,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759661991278,
		"deployedBy":59995,
		"deployedDefinitionId":"68e24fa7a94b8359f76dd362",
		"status":"DEPLOYED",
		"version":6,
		"workflowVersion":13
	},
	"edges":[
		{
			"fromNodeId":"_YXJy5",
			"priority":0,
			"skip":false,
			"toNodeId":"n_96ZBq",
			"type":"next"
		},
		{
			"fromNodeId":"n_96ZBq",
			"priority":0,
			"skip":false,
			"toNodeId":"_zNca6",
			"type":"next"
		},
		{
			"fromNodeId":"_zNca6",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ab9zj",
			"type":"next"
		},
		{
			"fromNodeId":"n_ab9zj",
			"priority":0,
			"skip":false,
			"toNodeId":"_9xKNR",
			"type":"next"
		},
		{
			"fromNodeId":"_9xKNR",
			"priority":0,
			"skip":false,
			"toNodeId":"_6H2OQ",
			"type":"next"
		},
		{
			"fromNodeId":"_6H2OQ",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_CeBOO",
			"type":"if"
		},
		{
			"fromNodeId":"_CeBOO",
			"priority":0,
			"skip":false,
			"toNodeId":"_xe7MC",
			"type":"next"
		},
		{
			"fromNodeId":"_6H2OQ",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_ODwaO",
			"type":"next"
		},
		{
			"fromNodeId":"_ODwaO",
			"priority":0,
			"skip":false,
			"toNodeId":"_PA7QE",
			"type":"next"
		},
		{
			"fromNodeId":"_xe7MC",
			"priority":0,
			"skip":false,
			"toNodeId":"_iwAqH",
			"type":"next"
		},
		{
			"fromNodeId":"_PA7QE",
			"priority":0,
			"skip":false,
			"toNodeId":"_iwAqH",
			"type":"next"
		}
	],
	"id":"68de72f25b11474238866535",
	"lastModifiedBy":59995,
	"lcName":"buckets number",
	"modifiedTime":1761616105962,
	"name":"Buckets Number",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"callables",
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_nST1M@n_WOcYr@_jMFmS-1@l@2",
			"id":"_YXJy5",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"bucketWarningsCount"
					],
					"properties":{
						"bucketWarningsCount":{
							"type":"integer",
							"title":"Bucket Warnings Count"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"minimumBucketCount",
						"customerId",
						"rootAutomationId",
						"rootExecutionId",
						"executionTime"
					],
					"properties":{
						"minimumBucketCount":{
							"type":"integer",
							"title":"Minimum Bucket Count"
						},
						"customerId":{
							"type":"string",
							"title":"Customer Id"
						},
						"rootAutomationId":{
							"type":"string",
							"title":"Root Automation Id"
						},
						"rootExecutionId":{
							"type":"string",
							"title":"Root Execution Id"
						},
						"executionTime":{
							"type":"number",
							"title":"Execution Time"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":3,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_nST1M@n_WOcYr@_jMFmS-1@l@2",
			"id":"n_96ZBq",
			"index":2,
			"inputs":{
				"automationId":"68b932d26607f33c4d7f0988",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"maxLeaseTimeUnit":"SECONDS",
					"maxWaitDurationUnit":"SECONDS"
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":true,
					"timeToLive":"3600",
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"custom_http_endpoint",
				"resourceVersion":10,
				"resourceName":"custom_http_endpoint_execute",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_nST1M@n_WOcYr@_jMFmS-1@l@2",
			"id":"_zNca6",
			"index":3,
			"inputs":{
				"isAsync":false,
				"enableProxy":false,
				"requestTimeoutInSecs":-1,
				"httpMethod":"POST",
				"body":{
					"sql":"SELECT DB_NAME, TABLE_NAME, PARTITION_NAME, PARTITION_ID, BUCKETS, DISTRIBUTION_KEY, DATA_SIZE FROM information_schema.partitions_meta WHERE BUCKETS < {{ _YXJy5.outputs.minimumBucketCount }} ORDER BY DB_NAME, TABLE_NAME;"
				},
				"connectionType":"DIRECT",
				"sslVerify":false,
				"path":"/internal/sql-report/runSQL/query/{{ _YXJy5.outputs.customerId }}",
				"responseSchema":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"hasMore":{
							"type":"boolean",
							"title":"hasMore"
						},
						"objects":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"PARTITION_ID":{
										"type":"integer",
										"title":"PARTITION_ID"
									},
									"TABLE_NAME":{
										"type":"string",
										"title":"TABLE_NAME"
									},
									"BUCKETS":{
										"type":"integer",
										"title":"BUCKETS"
									},
									"PARTITION_NAME":{
										"type":"string",
										"title":"PARTITION_NAME"
									},
									"DATA_SIZE":{
										"type":"string",
										"title":"DATA_SIZE"
									},
									"DISTRIBUTION_KEY":{
										"type":"string",
										"title":"DISTRIBUTION_KEY"
									},
									"DB_NAME":{
										"type":"string",
										"title":"DB_NAME"
									}
								},
								"additionalProperties":false
							},
							"title":"objects"
						}
					}
				},
				"baseUrl":"{{ n_96ZBq.outputs.baseInternalUrl }}",
				"httpVersion":"HTTP_2",
				"bodySchema":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"sql":{
							"type":"string",
							"title":"sql"
						}
					}
				},
				"queryParamsList":[
					{
						"key":"sqlResourceType",
						"value":"PLATFORM"
					}
				],
				"responseContentType":"application/json",
				"headersList":[],
				"errorResponseSchemas":[],
				"authType":"CUSTOM",
				"requestContentType":"application/json",
				"ignoreTrailingSlashes":false,
				"certificateType":"CERT_STRING"
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"maxLeaseTimeUnit":"SECONDS",
					"maxWaitDurationUnit":"SECONDS"
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Get Partitions ",
			"title":"Execute REST request",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				},
				"visibleOptionalFields":[
					"root.parameters.tablePartitions.items.DistributionKey",
					"root.parameters.tablePartitions.items.PartitionId",
					"root.parameters.tablePartitions.items.Buckets",
					"root.parameters.tablePartitions.items.PartitionName",
					"root.parameters.tablePartitions.items.State",
					"root.parameters.tablePartitions.items.DataSize",
					"root.parameters.tablePartitions.items.RowCount"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_nST1M@n_WOcYr@_jMFmS-1@l@2",
			"id":"n_ab9zj",
			"index":4,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"bucketWarnings":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"dbName":{
										"type":"string",
										"title":"dbName"
									},
									"tableName":{
										"type":"string",
										"title":"tableName"
									},
									"partitions":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"buckets":{
													"type":"integer",
													"title":"buckets"
												},
												"distributionKey":{
													"type":"string",
													"title":"distributionKey"
												},
												"paritionId":{
													"type":"integer",
													"title":"paritionId"
												},
												"partitionName":{
													"type":"string",
													"title":"partitionName"
												},
												"dataSize":{
													"type":"string",
													"title":"dataSize"
												}
											},
											"additionalProperties":false
										},
										"title":"partitions"
									}
								},
								"additionalProperties":false
							},
							"title":"bucketWarnings"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"minBuckets"
					],
					"properties":{
						"tablePartitions":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"DistributionKey":{
										"type":"string",
										"title":"DistributionKey"
									},
									"PartitionId":{
										"type":"string",
										"title":"PartitionId"
									},
									"Buckets":{
										"type":"string",
										"title":"Buckets"
									},
									"PartitionName":{
										"type":"string",
										"title":"PartitionName"
									},
									"DataSize":{
										"type":"string",
										"title":"DataSize"
									},
									"tableName":{
										"type":"string",
										"title":"Table Name"
									},
									"dbName":{
										"type":"string",
										"title":"Db Name"
									}
								},
								"additionalProperties":false,
								"required":[
									"tableName",
									"dbName"
								]
							},
							"title":"tablePartitions"
						},
						"minBuckets":{
							"type":"number",
							"title":"Min Buckets"
						}
					}
				},
				"code":"if (!binding.hasVariable(\"tablePartitions\") || tablePartitions == null) {\n  return [\"bucketWarnings\": []]\n}\n\ndef bucketWarnings = []\ndef tableSet = [] as Set\ntablePartitions.each { item -> \n  def bucketNum = item.Buckets\n  if (bucketNum < minBuckets) {\n    if (!(tableSet.contains(item.tableName) && tableSet.contains(item.dbName))) {\n    tableSet = [item.dbName, item.tableName] as Set\n       bucketWarnings << [dbName: item.dbName, tableName: item.tableName, partitions: [[buckets: item.Buckets, distributionKey: item.DistributionKey, paritionId: item.PartitionId, partitionName: item.PartitionName, dataSize: item.DataSize]]]\n  } else {\n    bucketWarnings.last()[\"partitions\"].add([buckets: item.Buckets, distributionKey: item.DistributionKey, paritionId: item.PartitionId, partitionName: item.PartitionName, dataSize: item.DataSize])\n  }\n  }\n}\nreturn [\"bucketWarnings\": bucketWarnings]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"minBuckets":"{{ _YXJy5.outputs.minimumBucketCount }}",
					"tablePartitions":{
						"ua:type":"mappedArray",
						"items":{
							"DistributionKey":"{{ _zNca6.outputs.result.objects[0].DISTRIBUTION_KEY }}",
							"PartitionId":"{{ _zNca6.outputs.result.objects[0].PARTITION_ID }}",
							"Buckets":"{{ _zNca6.outputs.result.objects[0].BUCKETS }}",
							"PartitionName":"{{ _zNca6.outputs.result.objects[0].PARTITION_NAME }}",
							"DataSize":"{{ _zNca6.outputs.result.objects[0].DATA_SIZE }}",
							"tableName":"{{ _zNca6.outputs.result.objects[0].TABLE_NAME }}",
							"dbName":"{{ _zNca6.outputs.result.objects[0].DB_NAME }}"
						},
						"source":"{{ _zNca6.outputs.result.objects }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_nST1M@n_WOcYr@_jMFmS-1@l@2",
			"id":"_9xKNR",
			"index":5,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"message",
						"inputs",
						"outputs"
					],
					"properties":{
						"message":{
							"type":"string",
							"title":"Message"
						},
						"inputs":{
							"type":"object",
							"properties":{
								"minimumBucketCount":{
									"type":"integer",
									"title":"Minimum Bucket Count"
								}
							},
							"additionalProperties":false,
							"title":"Inputs",
							"required":[
								"minimumBucketCount"
							]
						},
						"outputs":{
							"type":"object",
							"properties":{
								"criticalBuckets":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{},
										"additionalProperties":false
									},
									"title":"Critical Buckets"
								}
							},
							"additionalProperties":false,
							"title":"Outputs",
							"required":[
								"criticalBuckets"
							]
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"criticalBuckets",
						"minimumBucketCount",
						"rootAutomationId",
						"rootExecutionId"
					],
					"properties":{
						"criticalBuckets":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"dbName":{
										"type":"string",
										"title":"Db Name"
									},
									"tableName":{
										"type":"string",
										"title":"Table Name"
									},
									"buckets":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false
										},
										"title":"Buckets"
									}
								},
								"additionalProperties":false,
								"required":[
									"dbName",
									"tableName",
									"buckets"
								]
							},
							"title":"Critical Buckets"
						},
						"minimumBucketCount":{
							"type":"integer",
							"title":"Minimum Bucket Count"
						},
						"rootAutomationId":{
							"type":"string",
							"title":"Root Automation Id"
						},
						"rootExecutionId":{
							"type":"string",
							"title":"Root Execution Id"
						}
					}
				},
				"code":"if (!(binding.hasVariable(\"criticalBuckets\") && criticalBuckets)) {\n  return [message: \"\", inputs: [minimumBucketCount: minimumBucketCount], outputs: [criticalBuckets: []]]\n}\ndef messages = []\n\nif (criticalBuckets.size() > 0) {\n  for (item in criticalBuckets) {\n    def bucketMessage = [\"[ \"]\n    for (partitions in item.buckets) {\n      bucketMessage << \" [ PartitionName = \" + partitions.partitionName + \", PartitionId = \" + partitions.paritionId + \", buckets = \" + partitions.buckets + \" ] , \"\n    }\n    bucketMessage << \" ]\"\n    bucketMessage = bucketMessage.join()\n    messages << \"• Database = \" + item.dbName + \", tableName =  \" + item.tableName + \", partitions = \" + bucketMessage + \"\\n\"\n  }\n}\nif (messages.size() > 100) {\n  messages = [\"• Message length is too large to send. Please check details in rootAutomationID: \" + rootAutomationID + \" and rootExecutionId: \" + rootExecutionId]\n}\nreturn [outputs: [criticalBuckets: criticalBuckets], inputs: [\"minimumBucketCount\": minimumBucketCount], message: messages.join()]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"minimumBucketCount":"{{ _YXJy5.outputs.minimumBucketCount }}",
					"rootAutomationId":"{{ _YXJy5.outputs.rootAutomationId }}",
					"rootExecutionId":"{{ _YXJy5.outputs.rootExecutionId }}",
					"criticalBuckets":{
						"ua:type":"mappedArray",
						"items":{
							"buckets":{
								"ua:type":"mappedArray",
								"source":"{{ n_ab9zj.outputs.result.bucketWarnings[0].partitions }}",
								"items":"{{ n_ab9zj.outputs.result.bucketWarnings[0].partitions[0] }}"
							},
							"dbName":"{{ n_ab9zj.outputs.result.bucketWarnings[0].dbName }}",
							"tableName":"{{ n_ab9zj.outputs.result.bucketWarnings[0].tableName }}"
						},
						"source":"{{ n_ab9zj.outputs.result.bucketWarnings }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Buckets ouptut",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":767,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_nST1M@n_WOcYr@_jMFmS-1@l@2",
			"id":"_6H2OQ",
			"index":6,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ _9xKNR.outputs.result.outputs.criticalBuckets }})",
						"filter":{
							"operator":"GT",
							"value":"0"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.steps.inputs",
					"root.record.steps.outputs"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":3226,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_6H2OQ@n_nST1M@n_WOcYr@_jMFmS-1@l@2@y",
			"id":"_CeBOO",
			"index":7,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"infra_alert_steps",
				"skipIfBlank":false,
				"record":{
					"alertType":"starrocks_table_health",
					"rootAutomationId":"{{ _YXJy5.outputs.rootAutomationId }}",
					"rootExecutionId":"{{ _YXJy5.outputs.rootExecutionId }}",
					"executedAt":"{{ _YXJy5.outputs.executionTime }}",
					"alertCategory":"starrocks",
					"alertSubType":"routine_load_partition_buckets",
					"stepsOrder":6,
					"summary":"Check whether the partition of a routine load has a healthy bucket size",
					"steps":{
						"inputs":"{{ _9xKNR.outputs.result.inputs }}",
						"outputs":"{{ _9xKNR.outputs.result.outputs }}"
					},
					"status":"CRITICAL",
					"stepDescription":"Check whether each partition of a routine load is < {{ _YXJy5.outputs.minimumBucketCount }} , which is too small",
					"resolved":false
				}
			},
			"skip":false,
			"subTitle":"Create Alert Step",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":3,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_6H2OQ@n_nST1M@n_WOcYr@_jMFmS-1@l@2@y",
			"id":"_xe7MC",
			"index":8,
			"inputs":{
				"automationId":"68721bd4feea003f6a9cb688",
				"runtimeConnections":{},
				"synchronous":false,
				"version":"-1",
				"parameters":{
					"env":"{{ n_96ZBq.outputs.env }}",
					"alertCategory":"starrocks",
					"alertType":"starrocks_table_health",
					"alertTitle":"🚨 Small Buckets in Routine Load Partitions (<{{ _YXJy5.outputs.minimumBucketCount }})",
					"alertDescription":"For customer {{ _YXJy5.outputs.customerId }}, the following routine load partitions have buckets < {{ _YXJy5.outputs.minimumBucketCount }}:\n{{ _9xKNR.outputs.result.message }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.steps.inputs",
					"root.record.steps.outputs"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":3226,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_6H2OQ@n_nST1M@n_WOcYr@_jMFmS-1@l@2@n",
			"id":"_ODwaO",
			"index":9,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"infra_alert_steps",
				"skipIfBlank":false,
				"record":{
					"alertType":"starrocks_table_health",
					"rootAutomationId":"{{ _YXJy5.outputs.rootAutomationId }}",
					"rootExecutionId":"{{ _YXJy5.outputs.rootExecutionId }}",
					"executedAt":"{{ _YXJy5.outputs.executionTime }}",
					"alertCategory":"starrocks",
					"alertSubType":"routine_load_partition_buckets",
					"stepsOrder":6,
					"summary":"Check whether the partition of a routine load has a healthy bucket size",
					"steps":{
						"inputs":"{{ _9xKNR.outputs.result.inputs }}",
						"outputs":"{{ _9xKNR.outputs.result.outputs }}"
					},
					"status":"OK",
					"stepDescription":"Check whether each partition of a routine load is < {{ _YXJy5.outputs.minimumBucketCount }} , which is too small",
					"resolved":true
				}
			},
			"skip":false,
			"subTitle":"Create Alert Step",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":3,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_6H2OQ@n_nST1M@n_WOcYr@_jMFmS-1@l@2@n",
			"id":"_PA7QE",
			"index":10,
			"inputs":{
				"automationId":"68721bd4feea003f6a9cb688",
				"runtimeConnections":{},
				"synchronous":false,
				"version":"-1",
				"parameters":{
					"env":"{{ n_96ZBq.outputs.env }}",
					"alertCategory":"starrocks",
					"alertType":"starrocks_table_health",
					"alertTitle":"🚨 Small Buckets in Routine Load Partitions (<{{ _YXJy5.outputs.minimumBucketCount }})",
					"alertDescription":"For customer {{ _YXJy5.outputs.customerId }}, the following routine load partitions have buckets < {{ _YXJy5.outputs.minimumBucketCount }}:\n{{ _9xKNR.outputs.result.message }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_nST1M@n_WOcYr@_jMFmS-1@l@2",
			"id":"_iwAqH",
			"index":11,
			"inputs":{
				"result":{
					"bucketWarningsCount":"=LEN({{ _9xKNR.outputs.result.outputs.criticalBuckets }})"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":59995,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":14
}