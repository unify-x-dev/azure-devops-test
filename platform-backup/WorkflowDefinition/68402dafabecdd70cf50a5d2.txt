{
	"appsUsed":[
		
	],
	"createdTime":1750489953838,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296234069,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfd2a0c3d19149a9e357f",
		"status":"DEPLOYED",
		"version":50,
		"workflowVersion":70
	},
	"edges":[
		{
			"fromNodeId":"fRm5S",
			"priority":0,
			"skip":false,
			"toNodeId":"dQ3FV",
			"type":"next"
		},
		{
			"fromNodeId":"dQ3FV",
			"priority":0,
			"skip":false,
			"toNodeId":"5WY20",
			"type":"next"
		},
		{
			"fromNodeId":"5WY20",
			"priority":0,
			"skip":false,
			"toNodeId":"2pZiR",
			"type":"next"
		},
		{
			"fromNodeId":"2pZiR",
			"priority":0,
			"skip":false,
			"toNodeId":"in5dT",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"68402dafabecdd70cf50a5d2",
	"lastModifiedBy":0,
	"lcName":"personalized page rank | single seed | graphrag",
	"modifiedTime":1761722776631,
	"name":"Personalized Page Rank | Single Seed | GraphRAG",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"g774F@jmJNU-1@l",
			"id":"fRm5S",
			"index":0,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"dbOutput":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Db Output"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"additionalProperties":false,
					"required":[
						"seedNodes"
					],
					"$schema":"http://json-schema.org/draft-07/schema#",
					"type":"object",
					"properties":{
						"limitNodes":{
							"type":"integer",
							"title":"limitNodes",
							"default":"10"
						},
						"graphId":{
							"type":"string",
							"title":"graphId"
						},
						"seedNodeId":{
							"type":"integer",
							"title":"Seed Node Id"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":158,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"g774F@jmJNU-1@l",
			"id":"dQ3FV",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"cypherQueryPPR":{
							"type":"string",
							"title":"cypherQueryPPR"
						}
					},
					"additionalProperties":false,
					"required":[
						"cypherQueryPPR"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"limitNodes":{
							"type":"integer",
							"title":"limitNodes"
						},
						"seedNodes":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"seedNodes"
						},
						"graphId":{
							"type":"string",
							"title":"graphId"
						}
					},
					"additionalProperties":false,
					"required":[
						"limitNodes",
						"seedNodes",
						"graphId"
					]
				},
				"code":"def create_page_rank_query(graph_name, source_nodes, limit_nodes):\n    source_nodes_str = ', '.join(map(str, source_nodes))\n    \n    cypher_query = (\n        f\"CALL gds.pageRank.stream('{graph_name}', \"\n        \"{\"\n        \"    maxIterations: 20, \"\n        \"    dampingFactor: 0.85, \"\n        \"    sourceNodes: [\" + source_nodes_str + \"]\"\n        \"}) \"\n        \"YIELD nodeId, score \"\n        \"ORDER BY score DESC \"\n        f\"LIMIT {limit_nodes} \"\n        \"MATCH (n) \"\n        \"WHERE ID(n) = nodeId \"\n        \"RETURN n.name AS nodeName, n.description as nodeDesc, n.sourceChunkID as chunkID, nodeId as nodeID, score \"\n    )\n    \n    return cypher_query\n\n\ngraph_name = graphId or 'dummyGraph'\n\nif not isinstance(seedNodes, list):\n    seedNodes = [seedNodes]\nseed_nodes_unique = list(set(seedNodes))\n\ncypher_query = create_page_rank_query(graph_name, seed_nodes_unique, limitNodes)\n\nresult = {\n    \"cypherQueryPPR\": cypher_query\n}",
				"isAsync":false,
				"parameters":{
					"limitNodes":"{{ fRm5S.outputs.limitNodes  }}",
					"graphId":"{{ fRm5S.outputs.graphId  }}"
				}
			},
			"skip":true,
			"subTitle":"Create PPR Query",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.seedNodes.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":393,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"g774F@jmJNU-1@l",
			"id":"5WY20",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"cypherQueryPPR":{
							"type":"string",
							"title":"Cypher Query PPR"
						}
					},
					"additionalProperties":false,
					"required":[
						"cypherQueryPPR"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"limitNodes":{
							"type":"integer",
							"title":"limitNodes"
						},
						"seedNodes":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"seedNodes"
						},
						"graphId":{
							"type":"string",
							"title":"graphId"
						}
					},
					"additionalProperties":false
				},
				"compile_static":false,
				"code":"// Function to create the PageRank query\ndef create_page_rank_query(graph_name, source_nodes, limit_nodes) {\n    // Convert the list of source node IDs to a comma-separated string\n    def source_nodes_str = source_nodes.collect { it.toString() }.join(', ')\n    \n    // Build the Cypher query (preserve exact ordering and formatting)\n    def cypher_query =\n        \"CALL gds.pageRank.stream('${graph_name}', \" +\n        \"{\" +\n        \"    maxIterations: 20, \" +\n        \"    dampingFactor: 0.85, \" +\n        \"    sourceNodes: [\" + source_nodes_str + \"]\" +\n        \"}) \" +\n        \"YIELD nodeId, score \" +\n        \"ORDER BY score DESC \" +\n        \"LIMIT ${limit_nodes} \" +\n        \"MATCH (n) \" +\n        \"WHERE ID(n) = nodeId \" +\n        \"RETURN n.name AS nodeName, n.description as nodeDesc, n.sourceChunkID as chunkID, nodeId as nodeID, score \"\n\n    return cypher_query\n}\n\n/* -------------------------------------------------------------\n   Main logic (mirrors the original Python script 1-for-1)\n------------------------------------------------------------- */\n\n// Default graph name fallback\ndef graph_name = graphId ?: 'dummyGraph'\n\n// Ensure seedNodes is a list\nif (!(seedNodes instanceof List)) {\n    seedNodes = [seedNodes]\n}\n// Deduplicate seed nodes\ndef seed_nodes_unique = seedNodes.toSet().toList()\n\n// Create the query\ndef cypher_query = create_page_rank_query(graph_name, seed_nodes_unique, limitNodes)\n\n// Return the result object\ndef result = [\n    cypherQueryPPR: cypher_query.toString()\n]",
				"parameters":{
					"limitNodes":"{{ fRm5S.outputs.limitNodes  }}",
					"graphId":"{{ fRm5S.outputs.graphId  }}",
					"seedNodes":{
						"items":"{{ fRm5S.outputs.seedNodeId }}",
						"ua:type":"mappedArray"
					}
				}
			},
			"skip":false,
			"subTitle":"Create PPR Query",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":278,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"g774F@jmJNU-1@l",
			"id":"2pZiR",
			"index":0,
			"inputs":{
				"automationId":"67a9e903bdf95a2dab1df8cb",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"cypherQuery":"{{ 5WY20.outputs.result.cypherQueryPPR }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":2.0,
					"captureRetries":false,
					"count":3,
					"enabled":true,
					"initialDelay":3000,
					"maxDelay":10000
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Neo4j: Nodes",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"g774F@jmJNU-1@l",
			"id":"in5dT",
			"index":0,
			"inputs":{
				"result":{
					"dbOutput":{
						"source":"{{ 2pZiR.outputs.blocks }}",
						"ua:type":"mappedArray",
						"items":"{{ 2pZiR.outputs.blocks[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1728,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"GraphRAG"
	],
	"version":72
}