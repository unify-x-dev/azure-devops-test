{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1758646629859,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296304110,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfd70672fcc41fb70f48d",
		"status":"DEPLOYED",
		"version":6,
		"workflowVersion":17
	},
	"edges":[
		{
			"fromNodeId":"n_imeHO",
			"priority":0,
			"skip":false,
			"toNodeId":"n_lBBar",
			"type":"next"
		},
		{
			"fromNodeId":"n_lBBar",
			"priority":0,
			"skip":false,
			"toNodeId":"n_3TIGm",
			"type":"next"
		},
		{
			"fromNodeId":"n_3TIGm",
			"priority":0,
			"skip":false,
			"toNodeId":"n_WSdIJ",
			"type":"next"
		},
		{
			"fromNodeId":"n_WSdIJ",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_mV80v",
			"type":"if"
		},
		{
			"fromNodeId":"n_mV80v",
			"priority":0,
			"skip":false,
			"toNodeId":"n_1FPvo",
			"type":"next"
		},
		{
			"fromNodeId":"n_WSdIJ",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_1FPvo",
			"type":"next"
		},
		{
			"fromNodeId":"n_1FPvo",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_b0cLR",
			"type":"if"
		},
		{
			"fromNodeId":"n_b0cLR",
			"priority":0,
			"skip":false,
			"toNodeId":"n_kTuKg",
			"type":"next"
		},
		{
			"fromNodeId":"n_kTuKg",
			"priority":0,
			"skip":false,
			"toNodeId":"n_lNhlW",
			"type":"next"
		},
		{
			"fromNodeId":"n_1FPvo",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_lNhlW",
			"type":"next"
		},
		{
			"fromNodeId":"n_lNhlW",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2PYkn",
			"type":"next"
		},
		{
			"fromNodeId":"n_2PYkn",
			"priority":0,
			"skip":false,
			"toNodeId":"n_fDPkL",
			"type":"loop"
		},
		{
			"fromNodeId":"n_fDPkL",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2PYkn",
			"type":"next"
		},
		{
			"fromNodeId":"n_2PYkn",
			"priority":0,
			"skip":false,
			"toNodeId":"n_gg2ZR",
			"type":"next"
		},
		{
			"fromNodeId":"n_gg2ZR",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_KsFzs",
			"type":"if"
		},
		{
			"fromNodeId":"n_KsFzs",
			"priority":0,
			"skip":false,
			"toNodeId":"n_NyBln",
			"type":"next"
		},
		{
			"fromNodeId":"n_gg2ZR",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_NyBln",
			"type":"next"
		},
		{
			"fromNodeId":"n_NyBln",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2mWCd",
			"type":"if"
		},
		{
			"fromNodeId":"n_2mWCd",
			"priority":0,
			"skip":false,
			"toNodeId":"n_1U3YW",
			"type":"next"
		},
		{
			"fromNodeId":"n_NyBln",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_1U3YW",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"689d8c6e383f9e4a9bbd66ce",
	"lastModifiedBy":0,
	"lcName":"create/update knowledge set",
	"modifiedTime":1761722857416,
	"name":"Create/Update Knowledge Set",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":462,
				"resourceName":"callables_from_api"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_imeHO",
			"index":1,
			"inputs":{
				"request":{
					"queryParams":{
						"type":"object",
						"additionalProperties":false,
						"required":[],
						"properties":{
							"knowledgeSetId":{
								"type":"string",
								"title":"Knowledge Set Id"
							},
							"refreshFrequency":{
								"type":"string",
								"title":"Refresh Frequency"
							},
							"knowledgeSetName":{
								"type":"string",
								"title":"Knowledge Set Name"
							},
							"url":{
								"type":"string",
								"title":"Url"
							},
							"agentId":{
								"type":"string",
								"title":"Agent Id"
							}
						}
					},
					"contentType":"multipart/form-data"
				},
				"endpointType":"REST",
				"response":[
					{
						"status":200,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						},
						"body":{
							"type":"object",
							"properties":{
								"knowledgeSetId":{
									"type":"string",
									"title":"Knowledge Set Id"
								}
							},
							"additionalProperties":false,
							"required":[]
						}
					},
					{
						"status":400,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						},
						"body":{
							"type":"object",
							"properties":{
								"errorMessage":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Error Message"
								}
							},
							"additionalProperties":false,
							"required":[]
						}
					}
				],
				"streamingResponse":false
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via API",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":458,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_lBBar",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"knowledgeSetId":{
							"type":"string",
							"title":"Knowledge Set Id"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"knowledgeSetId":"{{ n_imeHO.outputs.queryParams.knowledgeSetId }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"knowledgeSetId":{
							"type":"string",
							"title":"Knowledge Set Id"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_3TIGm",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"allowed":{
							"type":"boolean",
							"title":"Allowed"
						},
						"errorMessage":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Error Message"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"knowledgeSetId":{
							"type":"string",
							"title":"Knowledge Set Id"
						},
						"knowledgeSetName":{
							"type":"string",
							"title":"Knowledge Set Name"
						},
						"url":{
							"type":"string",
							"title":"Url"
						},
						"refreshFrequency":{
							"type":"string",
							"title":"Refresh Frequency"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def validFrequencies = ['DAILY', 'WEEKLY', 'MONTHLY']\n\nif(!binding.hasVariable('knowledgeSetId') && !binding.hasVariable('knowledgeSetName')){\n  return[\n    allowed : false,\n    errorMessage : \"Either knowledgeSetId or knowledgeSetName must be present\"\n  ]\n}\n\nif(binding.hasVariable('url') && !binding.hasVariable('refreshFrequency')){\n  return[\n    allowed : false,\n    errorMessage : \"refreshFrequency is missing\"\n  ]\n}\n\nif(binding.hasVariable('refreshFrequency') && !(refreshFrequency in validFrequencies)){\n  return [\n    allowed      : false,\n    errorMessage : \"refreshFrequency must be one of: \" + validFrequencies.join(', ')\n  ]\n}\n\nreturn[\n  allowed : true\n]",
				"parameters":{
					"knowledgeSetId":"{{ n_imeHO.outputs.queryParams.knowledgeSetId }}",
					"knowledgeSetName":"{{ n_imeHO.outputs.queryParams.knowledgeSetName }}",
					"url":"{{ n_imeHO.outputs.queryParams.url }}",
					"refreshFrequency":"{{ n_imeHO.outputs.queryParams.refreshFrequency }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_WSdIJ",
			"index":4,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_3TIGm.outputs.result.allowed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"false"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Not Allowed?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":462,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_WSdIJ@_5NVxH-1@y",
			"id":"n_mV80v",
			"index":5,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"400_undefined",
				"body":{
					"errorMessage":"{{ n_3TIGm.outputs.result.errorMessage }}"
				},
				"status":400
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_1FPvo",
			"index":6,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_lBBar.outputs.knowledgeSetId }}",
						"filter":{
							"operator":"MISSING"
						}
					},
					{
						"property":"=LEN({{ n_lBBar.outputs.knowledgeSetId }})",
						"filter":{
							"operator":"EQUAL",
							"value":"0"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"KnowledgeSetId Not Present?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.indexingSettings.strategySettings.mimeTypeOverride",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.image.processingMethod",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.tabularData.indexingType",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.text.chunkingAlgorithm",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.text.delimiters",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.text.enableSummarize",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.text.language",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.text.embeddingModel",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.text.summarizingModel",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.text.maxChunkSize",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.text.thresholdType",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.audio.chunkingAlgorithm",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.audio.delimiters",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.audio.processingMethod",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.audio.enableSummarize",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.audio.language",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.audio.embeddingModel",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.audio.summarizingModel",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.audio.maxChunkSize",
					"root.record.indexingSettings.strategySettings.defaultStrategy.contentTypeConfig.audio.thresholdType",
					"root.record.indexingSettings.strategySettings.defaultStrategy.documentParsingConfig.type",
					"root.record.indexingSettings.strategySettings.defaultStrategy.documentParsingConfig.agenticParsingModel",
					"root.record.indexingSettings.strategySettings.defaultStrategy.documentParsingConfig.appName",
					"root.record.indexingSettings.strategySettings.defaultStrategy.documentParsingConfig.connectionId",
					"root.record.indexingSettings.strategySettings.metadataEnrichmentSettings.enabled",
					"root.record.indexingSettings.strategySettings.metadataEnrichmentSettings.automations.items.entityId",
					"root.record.indexingSettings.strategySettings.metadataEnrichmentSettings.automations.items.version",
					"root.record.indexingSettings.strategySettings.graphRagSettings.enable",
					"root.record.indexingSettings.strategySettings.graphRagSettings.dedupSimilarityThreshold",
					"root.record.indexingSettings.strategySettings.graphRagSettings.graphId",
					"root.record.indexingSettings.metadata.processingMethod",
					"root.record.indexingSettings.metadata.model",
					"root.record.indexingSettings.metadata.parameters.items",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.processingMethod",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.model",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.automationId",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.version",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.parameters.items.name",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.parameters.items.description",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.manualEnrichmentParameters.items.key",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.manualEnrichmentParameters.items.value",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.inputMappings.items.key",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.inputMappings.items.value",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.outputMappings.items.key",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.outputMappings.items.value",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.manualParameters",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.automationInput",
					"root.record.indexingSettings.metadata.enrichmentStrategies.items.enrichmentInput",
					"root.record.indexingSettings.vectorStore",
					"root.record.indexingSettings.embeddingModel",
					"root.record.indexingSettings.piiMasking.regex.enabled",
					"root.record.indexingSettings.piiMasking.regex.patterns.items.name",
					"root.record.indexingSettings.piiMasking.regex.patterns.items.pattern",
					"root.record.indexingSettings.piiMasking.regex.patterns.items.behaviour",
					"root.record.indexingSettings.piiMasking.automations.enabled",
					"root.record.indexingSettings.piiMasking.automations.ids.items",
					"root.record.indexingSettings.piiMasking.piiByUA.enabled",
					"root.record.indexingSettings.vectorStoreConnectionId",
					"root.record.accessibleTo.items"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":522,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_1FPvo@_5NVxH-1@y",
			"id":"n_b0cLR",
			"index":7,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"knowledge_set",
				"record":{
					"indexingSettings":{
						"strategySettings":{
							"metadataEnrichmentSettings":{
								"enabled":false
							}
						}
					},
					"name":"{{ n_imeHO.outputs.queryParams.knowledgeSetName }}"
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":447,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_1FPvo@_5NVxH-1@y",
			"id":"n_kTuKg",
			"index":8,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_lBBar.outputs.knowledgeSetId }}",
						"value":"{{ n_b0cLR.outputs.id }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.files.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_lNhlW",
			"index":9,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"finalFiles":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"fileExtension":{
										"type":"string",
										"title":"File Extension"
									},
									"fileType":{
										"type":"string",
										"title":"File Type"
									},
									"name":{
										"type":"string",
										"title":"Name"
									},
									"source":{
										"type":"string",
										"title":"Source"
									},
									"sourceType":{
										"type":"string",
										"title":"Source Type"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Final Files"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"files":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Files"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def finalFiles = []\ndef finalUrlList = []\n\nif(binding.hasVariable('urlList')){\n  \n}\n\nif (!binding.hasVariable('files') || files == null || files.isEmpty()) {\n  return [\n    finalFiles : []\n  ]\n}\n\n\ndef extensionToMimeType = [\n  \"pdf\"  : \"application/pdf\",\n  \"doc\"  : \"application/msword\",\n  \"docx\" : \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n  \"xls\"  : \"application/vnd.ms-excel\",\n  \"xlsx\" : \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  \"csv\"  : \"text/csv\",\n  \"png\"  : \"image/png\",\n  \"jpg\"  : \"image/jpeg\",\n  \"jpeg\" : \"image/jpeg\",\n  \"txt\"  : \"text/plain\"\n]\n\nfiles.each { file ->\n  def extension = file.source?.tokenize('.')?.last()?.toLowerCase()\n  def mimeType = extensionToMimeType.get(extension, \"application/octet-stream\")\n\n  def nameWithExt = file.name\n  if (extension && !file.name.toLowerCase().endsWith(\".\" + extension)) {\n    nameWithExt = file.name + \".\" + extension\n  }\n\n  def processedFile = [\n    fileExtension : extension,\n    fileType      : mimeType,\n    name          : nameWithExt,\n    size          : file.size,\n    source        : file.source,\n    sourceType    : file.sourceType\n  ]\n  finalFiles << processedFile\n}\n\nreturn[\n  finalFiles : finalFiles\n]",
				"parameters":{
					"files":{
						"source":"{{ n_imeHO.outputs.files }}",
						"ua:type":"mappedArray",
						"items":"{{ n_imeHO.outputs.files[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":456,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_2PYkn",
			"index":10,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_lNhlW.outputs.result.finalFiles }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.fileDetails.name",
					"root.record.fileDetails.source",
					"root.record.fileDetails.fileType",
					"root.record.fileDetails.size",
					"root.record.fileDetails.fileExtension",
					"root.record.fileDetails.sourceType",
					"root.record.fileDetails.url",
					"root.record.websiteImportInfo.specificWebpages",
					"root.record.websiteImportInfo.urlList.items",
					"root.record.applicationInfo.inputs",
					"root.record.applicationInfo.context.appName",
					"root.record.applicationInfo.context.connectionId",
					"root.record.applicationInfo.context.resourceName",
					"root.record.refreshDetails.lastRefreshStartTime",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.image.textExtractionModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.image.processingMethod",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.tabularData.indexingType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.embeddingType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.chunkOverlap",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.delimiters.items",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.language",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.embeddingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.maxChunkSize",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.thresholdType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.algorithm",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.chunkingAlgorithm",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.summarizingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.enableSummarize",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.embeddingType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.chunkOverlap",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.delimiters.items",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.processingMethod",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.language",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.transcriptionModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.embeddingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.maxChunkSize",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.thresholdType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.algorithm",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.mimeType.items",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.agenticParsingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.appName",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.connectionId",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.type",
					"root.record.settings.indexingStrategySettings.metadataEnrichmentSettings.automations.items.entityId",
					"root.record.settings.indexingStrategySettings.metadataEnrichmentSettings.automations.items.version",
					"root.record.settings.indexingStrategySettings.metadataEnrichmentSettings.enabled",
					"root.record.settings.indexingStrategySettings.graphRagSettings.enable",
					"root.record.settings.piiMasking.regex.enabled",
					"root.record.settings.piiMasking.automations.enabled",
					"root.record.settings.piiMasking.automations.ids.items",
					"root.record.settings.piiMasking.piiByUA.enabled",
					"root.record.settings.enrichmentStrategies.items.processingMethod",
					"root.record.settings.enrichmentStrategies.items.model",
					"root.record.settings.enrichmentStrategies.items.automationId",
					"root.record.settings.enrichmentStrategies.items.version",
					"root.record.settings.enrichmentStrategies.items.parameters.items.name",
					"root.record.settings.enrichmentStrategies.items.parameters.items.description",
					"root.record.settings.enrichmentStrategies.items.parameters.items.isStandard",
					"root.record.settings.enrichmentStrategies.items.manualEnrichmentParameters.items.key",
					"root.record.settings.enrichmentStrategies.items.manualEnrichmentParameters.items.value",
					"root.record.settings.enrichmentStrategies.items.inputMappings.items.key",
					"root.record.settings.enrichmentStrategies.items.inputMappings.items.value",
					"root.record.settings.enrichmentStrategies.items.outputMappings.items.key",
					"root.record.settings.enrichmentStrategies.items.outputMappings.items.value",
					"root.record.settings.enrichmentStrategies.items.manualParameters",
					"root.record.settings.enrichmentStrategies.items.automationInput",
					"root.record.settings.enrichmentStrategies.items.enrichmentInput",
					"root.record.settings.enrichment.processingMethod",
					"root.record.settings.enrichment.model",
					"root.record.settings.enrichment.parameters.items.name",
					"root.record.settings.enrichment.parameters.items.description",
					"root.record.settings.enrichment.enabled",
					"root.record.additionalDetails.unifiedEntityModelId",
					"root.record.additionalDetails.metadataIndexing",
					"root.record.additionalDetails.embeddingModel",
					"root.record.additionalDetails.knowledgeInstructionsForPrompt",
					"root.record.additionalDetails.summary",
					"root.record.additionalDetails.faqs.items",
					"root.record.additionalDetails.vectorStore",
					"root.record.additionalDetails.vectorStoreConnectionId",
					"root.record.dataCatalogInfo.id",
					"root.record.customMetadata.items.name",
					"root.record.accessibleTo.items",
					"root.record.errorDetails.errorMessage"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":522,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_2PYkn@_5NVxH-1@l",
			"id":"n_fDPkL",
			"index":11,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"knowledge",
				"record":{
					"enabled":true,
					"settings":{
						"indexingStrategySettings":{
							"graphRagSettings":{
								"enable":false
							}
						},
						"enrichment":{
							"enabled":false
						}
					},
					"newIndexingFlowEnabled":false,
					"forwardGrabberScheduled":false,
					"sourceType":"FILE",
					"name":"{{ n_2PYkn.outputs.item.name }}",
					"fileDetails":{
						"name":"{{ n_2PYkn.outputs.item.name }}",
						"source":"{{ n_2PYkn.outputs.item.source }}",
						"fileType":"{{ n_2PYkn.outputs.item.fileType }}",
						"fileExtension":"{{ n_2PYkn.outputs.item.fileExtension }}",
						"sourceType":"{{ n_2PYkn.outputs.item.sourceType }}"
					},
					"status":"DRAFT",
					"additionalDetails":{
						"embeddingModel":"e_ai_agent_openai_emebedding_3_large"
					},
					"accessibleTo":{
						"items":"knowledge_set/{{ n_lBBar.outputs.knowledgeSetId }}",
						"ua:type":"mappedArray"
					},
					"knowledgeSetId":"{{ n_lBBar.outputs.knowledgeSetId }}"
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_gg2ZR",
			"index":12,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_imeHO.outputs.queryParams.url }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"URL Present ?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.fileDetails.name",
					"root.record.fileDetails.source",
					"root.record.fileDetails.fileType",
					"root.record.fileDetails.size",
					"root.record.fileDetails.fileExtension",
					"root.record.fileDetails.sourceType",
					"root.record.fileDetails.url",
					"root.record.websiteImportInfo.specificWebpages",
					"root.record.websiteImportInfo.urlList.items",
					"root.record.applicationInfo.inputs",
					"root.record.applicationInfo.context.appName",
					"root.record.applicationInfo.context.connectionId",
					"root.record.applicationInfo.context.resourceName",
					"root.record.refreshDetails.lastRefreshStartTime",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.image.textExtractionModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.image.processingMethod",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.tabularData.indexingType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.embeddingType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.chunkOverlap",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.delimiters.items",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.language",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.embeddingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.maxChunkSize",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.thresholdType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.algorithm",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.chunkingAlgorithm",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.summarizingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.enableSummarize",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.embeddingType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.chunkOverlap",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.delimiters.items",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.processingMethod",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.language",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.transcriptionModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.embeddingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.maxChunkSize",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.thresholdType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.algorithm",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.mimeType.items",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.agenticParsingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.appName",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.connectionId",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.type",
					"root.record.settings.indexingStrategySettings.metadataEnrichmentSettings.automations.items.entityId",
					"root.record.settings.indexingStrategySettings.metadataEnrichmentSettings.automations.items.version",
					"root.record.settings.indexingStrategySettings.metadataEnrichmentSettings.enabled",
					"root.record.settings.indexingStrategySettings.graphRagSettings.enable",
					"root.record.settings.piiMasking.regex.enabled",
					"root.record.settings.piiMasking.automations.enabled",
					"root.record.settings.piiMasking.automations.ids.items",
					"root.record.settings.piiMasking.piiByUA.enabled",
					"root.record.settings.enrichmentStrategies.items.processingMethod",
					"root.record.settings.enrichmentStrategies.items.model",
					"root.record.settings.enrichmentStrategies.items.automationId",
					"root.record.settings.enrichmentStrategies.items.version",
					"root.record.settings.enrichmentStrategies.items.parameters.items.name",
					"root.record.settings.enrichmentStrategies.items.parameters.items.description",
					"root.record.settings.enrichmentStrategies.items.parameters.items.isStandard",
					"root.record.settings.enrichmentStrategies.items.manualEnrichmentParameters.items.key",
					"root.record.settings.enrichmentStrategies.items.manualEnrichmentParameters.items.value",
					"root.record.settings.enrichmentStrategies.items.inputMappings.items.key",
					"root.record.settings.enrichmentStrategies.items.inputMappings.items.value",
					"root.record.settings.enrichmentStrategies.items.outputMappings.items.key",
					"root.record.settings.enrichmentStrategies.items.outputMappings.items.value",
					"root.record.settings.enrichmentStrategies.items.manualParameters",
					"root.record.settings.enrichmentStrategies.items.automationInput",
					"root.record.settings.enrichmentStrategies.items.enrichmentInput",
					"root.record.settings.enrichment.processingMethod",
					"root.record.settings.enrichment.model",
					"root.record.settings.enrichment.parameters.items.name",
					"root.record.settings.enrichment.parameters.items.description",
					"root.record.settings.enrichment.enabled",
					"root.record.additionalDetails.unifiedEntityModelId",
					"root.record.additionalDetails.metadataIndexing",
					"root.record.additionalDetails.embeddingModel",
					"root.record.additionalDetails.knowledgeInstructionsForPrompt",
					"root.record.additionalDetails.summary",
					"root.record.additionalDetails.faqs.items",
					"root.record.additionalDetails.vectorStore",
					"root.record.additionalDetails.vectorStoreConnectionId",
					"root.record.dataCatalogInfo.id",
					"root.record.customMetadata.items.name",
					"root.record.accessibleTo.items",
					"root.record.errorDetails.errorMessage"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":522,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_gg2ZR@_5NVxH-1@y",
			"id":"n_KsFzs",
			"index":13,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"knowledge",
				"record":{
					"enabled":true,
					"settings":{
						"indexingStrategySettings":{
							"graphRagSettings":{
								"enable":false
							}
						},
						"enrichment":{
							"enabled":false
						}
					},
					"newIndexingFlowEnabled":false,
					"forwardGrabberScheduled":false,
					"sourceType":"WEBSITE",
					"name":"{{ n_imeHO.outputs.queryParams.url }}",
					"refreshFrequency":"{{ n_imeHO.outputs.queryParams.refreshFrequency }}",
					"status":"DRAFT",
					"knowledgeSetId":"{{ n_lBBar.outputs.knowledgeSetId }}",
					"websiteImportInfo":{
						"specificWebpages":false,
						"urlList":{
							"items":"{{ n_imeHO.outputs.queryParams.url }}",
							"ua:type":"mappedArray"
						}
					},
					"additionalDetails":{
						"embeddingModel":"e_ai_agent_openai_emebedding_3_large"
					},
					"accessibleTo":{
						"items":"knowledge_set/{{ n_lBBar.outputs.knowledgeSetId }}",
						"ua:type":"mappedArray"
					}
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_NyBln",
			"index":14,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_imeHO.outputs.queryParams.agentId }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"AgentId Present?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.updateFields.items.fieldName",
					"root.updateFields.items.actionType"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":512,
				"resourceName":"storage_by_unifyapps_update_record_fields_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_NyBln@_5NVxH-1@y",
			"id":"n_2mWCd",
			"index":15,
			"inputs":{
				"recordId":"{{ n_lBBar.outputs.knowledgeSetId }}",
				"writeThroughSessionVariables":false,
				"object_type":"knowledge_set",
				"skipPermissionCheck":false,
				"updateFields":[
					{
						"fieldName":"properties.accessibleTo",
						"actionType":"ADD",
						"setValue":"ai_agent/{{ n_imeHO.outputs.queryParams.agentId }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update an existing record's fields",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":462,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_1U3YW",
			"index":16,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"200_undefined",
				"body":{
					"knowledgeSetId":"{{ n_lBBar.outputs.knowledgeSetId }}"
				},
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		}
	],
	"ownerUserId":0,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"AI Agent"
	],
	"version":19
}