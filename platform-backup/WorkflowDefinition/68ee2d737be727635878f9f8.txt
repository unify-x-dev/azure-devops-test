{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1760439667919,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760537814428,
		"deployedBy":33452,
		"deployedDefinitionId":"68efacd41ff997436ed2cd85",
		"status":"DEPLOYED",
		"version":16,
		"workflowVersion":31
	},
	"edges":[
		{
			"fromNodeId":"n_J8hsn",
			"priority":0,
			"skip":false,
			"toNodeId":"n_waGDH",
			"type":"next"
		},
		{
			"fromNodeId":"n_waGDH",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ceV2l",
			"type":"next"
		},
		{
			"fromNodeId":"n_ceV2l",
			"priority":0,
			"skip":false,
			"toNodeId":"n_1vAhm",
			"type":"next"
		},
		{
			"fromNodeId":"n_1vAhm",
			"priority":0,
			"skip":false,
			"toNodeId":"n_l6Znh",
			"type":"next"
		},
		{
			"fromNodeId":"n_l6Znh",
			"priority":0,
			"skip":false,
			"toNodeId":"n_JF5uZ",
			"type":"next"
		},
		{
			"fromNodeId":"n_JF5uZ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_tPvIP",
			"type":"loop"
		},
		{
			"fromNodeId":"n_tPvIP",
			"priority":0,
			"skip":false,
			"toNodeId":"n_zxnKE",
			"type":"next"
		},
		{
			"fromNodeId":"n_zxnKE",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_JF5uZ",
			"type":"next"
		},
		{
			"fromNodeId":"n_JF5uZ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_yQ3iS",
			"type":"next"
		},
		{
			"fromNodeId":"n_yQ3iS",
			"priority":0,
			"skip":false,
			"toNodeId":"n_QoE2l",
			"type":"next"
		},
		{
			"fromNodeId":"n_QoE2l",
			"priority":0,
			"skip":false,
			"toNodeId":"n_GQ33D",
			"type":"next"
		},
		{
			"fromNodeId":"n_GQ33D",
			"priority":0,
			"skip":false,
			"toNodeId":"n_OIb2b",
			"type":"next"
		},
		{
			"fromNodeId":"n_OIb2b",
			"priority":0,
			"skip":false,
			"toNodeId":"n_feHLL",
			"type":"next"
		}
	],
	"id":"68ee2d737be727635878f9f8",
	"lastModifiedBy":1,
	"lcName":"excel test go",
	"modifiedTime":1762018782368,
	"name":"Excel test go",
	"nodes":[
		{
			"context":{
				"appName":"webhooks",
				"resourceVersion":833,
				"resourceName":"webhooks_default"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4IlKI-1",
			"id":"n_J8hsn",
			"index":1,
			"inputs":{
				"request":{
					"contentType":"application/json"
				}
			},
			"skip":false,
			"subTitle":"Webhook",
			"title":"New event",
			"trigger":{
				"type":"WEBHOOK"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":4560,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4IlKI-1",
			"id":"n_waGDH",
			"index":2,
			"inputs":{
				"object_type":"lowes_file_url",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"sortBy":[
					{
						"field":"cTm",
						"order":"DESC"
					}
				],
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":751,
				"resourceName":"excel_by_unifyapps_extract_headers",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4IlKI-1",
			"id":"n_ceV2l",
			"index":3,
			"inputs":{
				"fileDetails":"{{ n_waGDH.outputs.properties.invoiceCopyPDF }}",
				"use_excelize":true,
				"fileType":"XLSX"
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Extract headers from Excel file",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":1043,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4IlKI-1",
			"id":"n_1vAhm",
			"index":4,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"formula":{
											"type":"string",
											"title":"Formula"
										},
										"header":{
											"type":"string",
											"title":"Header"
										}
									},
									"required":[
										"formula",
										"header"
									]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"List",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"List",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"formula":{
										"type":"string",
										"title":"Formula"
									},
									"header":{
										"type":"string",
										"title":"Header"
									}
								},
								"required":[
									"formula",
									"header"
								]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":1065,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4IlKI-1",
			"id":"n_l6Znh",
			"index":5,
			"inputs":{
				"jsonSchema":{
					"type":"array",
					"items":{
						"type":"object",
						"properties":{
							"column":{
								"type":"string",
								"title":"column"
							},
							"formula":{
								"type":"string",
								"title":"formula"
							}
						},
						"additionalProperties":false
					}
				},
				"jsonString":"[\n    {\n        \"column\": \"comp2025Vs2024Percent\",\n        \"formula\": \"=IFERROR(IF((VALUE(L2)+VALUE(M2)+VALUE(N2))>0,((VALUE(O2)+VALUE(P2)+VALUE(Q2))/(VALUE(L2)+VALUE(M2)+VALUE(N2)))-1,\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"comp2YR2025Vs2023Percent\",\n        \"formula\": \"=IFERROR(IF((VALUE(I2)+VALUE(J2)+VALUE(K2))>0,((VALUE(O2)+VALUE(P2)+VALUE(Q2))/(VALUE(I2)+VALUE(J2)+VALUE(K2)))-1,\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw29GmDeltaVsLyBps\",\n        \"formula\": \"=IFERROR(IF(AND(VALUE(O2)>0,VALUE(L2)>0),((VALUE(O2)-VALUE(AA2))/VALUE(O2)-(VALUE(L2)-VALUE(X2))/VALUE(L2))*10000,\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw29GrossMargin2023Dollar\",\n        \"formula\": \"=VALUE(I2)-VALUE(U2)\"\n    },\n    {\n        \"column\": \"fw29GrossMargin2023Percent\",\n        \"formula\": \"=IFERROR(IF(VALUE(I2)>0,(VALUE(I2)-VALUE(U2))/VALUE(I2),\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw29GrossMargin2024Dollar\",\n        \"formula\": \"=VALUE(L2)-VALUE(X2)\"\n    },\n    {\n        \"column\": \"fw29GrossMargin2024Percent\",\n        \"formula\": \"=IFERROR(IF(VALUE(L2)>0,(VALUE(L2)-VALUE(X2))/VALUE(L2),\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw29GrossMargin2025Dollar\",\n        \"formula\": \"=VALUE(O2)-VALUE(AA2)\"\n    },\n    {\n        \"column\": \"fw29GrossMargin2025Percent\",\n        \"formula\": \"=IFERROR(IF(VALUE(O2)>0,(VALUE(O2)-VALUE(AA2))/VALUE(O2),\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw29PlanGrossMargin2025Dollar\",\n        \"formula\": \"=VALUE(R2)-VALUE(AD2)\"\n    },\n    {\n        \"column\": \"fw29PlanGrossMargin2025Percent\",\n        \"formula\": \"=IFERROR(IF(VALUE(R2)>0,(VALUE(R2)-VALUE(AD2))/VALUE(R2),\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw30GmDeltaVsLyBps\",\n        \"formula\": \"=IFERROR(IF(AND(VALUE(P2)>0,VALUE(M2)>0),((VALUE(P2)-VALUE(AB2))/VALUE(P2)-(VALUE(M2)-VALUE(Y2))/VALUE(M2))*10000,\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw30GrossMargin2023Dollar\",\n        \"formula\": \"=VALUE(J2)-VALUE(V2)\"\n    },\n    {\n        \"column\": \"fw30GrossMargin2023Percent\",\n        \"formula\": \"=IFERROR(IF(VALUE(J2)>0,(VALUE(J2)-VALUE(V2))/VALUE(J2),\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw30GrossMargin2024Dollar\",\n        \"formula\": \"=VALUE(M2)-VALUE(Y2)\"\n    },\n    {\n        \"column\": \"fw30GrossMargin2024Percent\",\n        \"formula\": \"=IFERROR(IF(VALUE(M2)>0,(VALUE(M2)-VALUE(Y2))/VALUE(M2),\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw30GrossMargin2025Dollar\",\n        \"formula\": \"=VALUE(P2)-VALUE(AB2)\"\n    },\n    {\n        \"column\": \"fw30GrossMargin2025Percent\",\n        \"formula\": \"=IFERROR(IF(VALUE(P2)>0,(VALUE(P2)-VALUE(AB2))/VALUE(P2),\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw30PlanGrossMargin2025Dollar\",\n        \"formula\": \"=VALUE(S2)-VALUE(AE2)\"\n    },\n    {\n        \"column\": \"fw30PlanGrossMargin2025Percent\",\n        \"formula\": \"=IFERROR(IF(VALUE(S2)>0,(VALUE(S2)-VALUE(AE2))/VALUE(S2),\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw31GmDeltaVsLyBps\",\n        \"formula\": \"=IFERROR(IF(AND(VALUE(Q2)>0,VALUE(N2)>0),((VALUE(Q2)-VALUE(AC2))/VALUE(Q2)-(VALUE(N2)-VALUE(Z2))/VALUE(N2))*10000,\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw31GrossMargin2023Dollar\",\n        \"formula\": \"=VALUE(K2)-VALUE(W2)\"\n    },\n    {\n        \"column\": \"fw31GrossMargin2023Percent\",\n        \"formula\": \"=IFERROR(IF(VALUE(K2)>0,(VALUE(K2)-VALUE(W2))/VALUE(K2),\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw31GrossMargin2024Dollar\",\n        \"formula\": \"=VALUE(N2)-VALUE(Z2)\"\n    },\n    {\n        \"column\": \"fw31GrossMargin2024Percent\",\n        \"formula\": \"=IFERROR(IF(VALUE(N2)>0,(VALUE(N2)-VALUE(Z2))/VALUE(N2),\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw31GrossMargin2025Dollar\",\n        \"formula\": \"=VALUE(Q2)-VALUE(AC2)\"\n    },\n    {\n        \"column\": \"fw31GrossMargin2025Percent\",\n        \"formula\": \"=IFERROR(IF(VALUE(Q2)>0,(VALUE(Q2)-VALUE(AC2))/VALUE(Q2),\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"fw31PlanGrossMargin2025Dollar\",\n        \"formula\": \"=VALUE(T2)-VALUE(AF2)\"\n    },\n    {\n        \"column\": \"fw31PlanGrossMargin2025Percent\",\n        \"formula\": \"=IFERROR(IF(VALUE(T2)>0,(VALUE(T2)-VALUE(AF2))/VALUE(T2),\\\"\\\"),\\\"\\\")\"\n    },\n    {\n        \"column\": \"vsPlan2025Dollar\",\n        \"formula\": \"=(VALUE(O2)+VALUE(P2)+VALUE(Q2))-(VALUE(R2)+VALUE(S2)+VALUE(T2))\"\n    },\n    {\n        \"column\": \"vsPlan2025Percent\",\n        \"formula\": \"=IFERROR(IF((VALUE(R2)+VALUE(S2)+VALUE(T2))>0,((VALUE(O2)+VALUE(P2)+VALUE(Q2))-(VALUE(R2)+VALUE(S2)+VALUE(T2)))/(VALUE(R2)+VALUE(S2)+VALUE(T2)),\\\"\\\"),\\\"\\\")\"\n    }\n]"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":865,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4IlKI-1",
			"id":"n_JF5uZ",
			"index":6,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_l6Znh.outputs.result }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":997,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_JF5uZ@_4IlKI-1@l",
			"id":"n_tPvIP",
			"index":7,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"formula"
					],
					"properties":{
						"formula":{
							"type":"string",
							"title":"Formula"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"formula"
					],
					"properties":{
						"formula":{
							"type":"string",
							"title":"Formula"
						}
					}
				},
				"code":"def fixFormula(String formula) {\n    // Replace VALUE(<cell>) with cleaning version\n    def cleaned = formula.replaceAll(/VALUE\\(\\s*((?:'[^']+'!|\\w+!)?\\$?[A-Z]{1,3}\\$?\\d+)\\s*\\)/) { all, ref ->\n        def refRow = ref.replaceAll(/\\d+/, '{ROW}')  // Replace digits with {ROW}\n        'VALUE(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(' +\n        refRow + ',\"$\",\"\"),\",\",\"\"),\")\",\"\"),\"(\",\"-\"))'\n    }\n    return cleaned\n}\n['formula': fixFormula(formula)]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"formula":"{{ n_JF5uZ.outputs.item.formula }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":1010,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_JF5uZ@_4IlKI-1@l",
			"id":"n_zxnKE",
			"index":8,
			"inputs":{
				"itemToAdd":{
					"formula":"{{ n_tPvIP.outputs.result.formula }}",
					"header":"{{ n_JF5uZ.outputs.item.column }}"
				},
				"insertLocation":"END",
				"listName":"{{ n_1vAhm.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.operations.items.target",
					"root.operations.items.formula",
					"root.operations.items.value",
					"root.operations.items.newColumn",
					"root.operations.items.newHeader",
					"root.operations.items.order",
					"root.operations.items.secondaryTarget",
					"root.operations.items.secondaryOrder",
					"root.operations.items.condition",
					"root.operations.items.keepMatching",
					"root.operations.items.find",
					"root.operations.items.replace",
					"root.operations.items.matchCase",
					"root.operations.items.columns.items",
					"root.operations.items.keepFirst",
					"root.operations.items.description"
				]
			},
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":2,
				"resourceName":"excel_by_unifyapps_generic_operations",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_4IlKI-1",
			"id":"n_yQ3iS",
			"index":9,
			"inputs":{
				"evaluateFormulas":true,
				"fileDetails":"{{ n_waGDH.outputs.properties.invoiceCopyPDF }}",
				"operations":[
					{
						"action":"add",
						"target":"new_column",
						"value":"243"
					}
				],
				"keepExactFileName":false
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Perform Operations on Excel File",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"stop"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4IlKI-1",
			"id":"n_QoE2l",
			"index":10,
			"skip":false,
			"subTitle":"Stop",
			"title":"Stop",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":227,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4IlKI-1",
			"id":"n_GQ33D",
			"index":11,
			"inputs":{
				"file":"{{ n_yQ3iS.outputs.fileDetails }}",
				"expiryTime":1
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":156,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4IlKI-1",
			"id":"n_OIb2b",
			"index":12,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"b64_encoded":{
							"type":"string",
							"title":"base64 Encoded"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						}
					}
				},
				"configurationMode":"MANUAL",
				"code":"import os\nimport requests\nimport base64\nimport tempfile\nimport shutil\nimport subprocess\nimport zipfile\nfrom pathlib import Path\nfrom lxml import etree\n\nNS = {\"s\": \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"}\n\ndef find_soffice():\n    from shutil import which\n    for cand in (\"soffice\", \"libreoffice\"):\n        if which(cand):\n            return cand\n    raise RuntimeError(\"LibreOffice not found. Please install it (macOS: `brew install libreoffice`).\")\n\ndef strip_formulas_xml(xml_bytes: bytes) -> bytes:\n    parser = etree.XMLParser(remove_blank_text=False, recover=True)\n    root = etree.fromstring(xml_bytes, parser=parser)\n    for fnode in root.xpath(\".//s:c/s:f\", namespaces=NS):\n        parent = fnode.getparent()\n        if parent is not None:\n            parent.remove(fnode)\n    return etree.tostring(root, xml_declaration=True, encoding=\"UTF-8\")\n\ndef process_excel(input_excel) -> dict:\n    is_url = input_excel.startswith(\"http://\") or input_excel.startswith(\"https://\")\n    if is_url:\n        response = requests.get(input_excel)\n        response.raise_for_status()\n        fd, src_path = tempfile.mkstemp(suffix='.xlsx')\n        with os.fdopen(fd, 'wb') as tmp:\n            tmp.write(response.content)\n        delete_src = True\n    else:\n        src_path = input_excel\n        delete_src = False\n\n    soffice = find_soffice()\n    tmpdir = Path(tempfile.mkdtemp(prefix=\"xlsx_recalc_\"))\n    output_path = Path(tempfile.mktemp(suffix=\"_values.xlsx\"))\n    try:\n        cmd = [\n            soffice, \"--headless\", \"--norestore\", \"--nolockcheck\",\n            \"--convert-to\", \"xlsx\", \"--outdir\", str(tmpdir), str(src_path),\n        ]\n        subprocess.run(cmd, check=True, capture_output=True, text=True)\n        recalced = next(tmpdir.glob(\"*.xlsx\"))\n        with zipfile.ZipFile(recalced, \"r\") as zin, zipfile.ZipFile(output_path, \"w\", compression=zipfile.ZIP_DEFLATED) as zout:\n            for item in zin.infolist():\n                data = zin.read(item.filename)\n                if item.filename.startswith(\"xl/worksheets/\") and item.filename.endswith(\".xml\"):\n                    data = strip_formulas_xml(data)\n                zi = zipfile.ZipInfo(item.filename, date_time=item.date_time)\n                zi.compress_type = zipfile.ZIP_DEFLATED\n                zi.external_attr = item.external_attr\n                zout.writestr(zi, data)\n        with open(output_path, \"rb\") as f:\n            b64_encoded = base64.b64encode(f.read()).decode('utf-8')\n    finally:\n        shutil.rmtree(tmpdir, ignore_errors=True)\n        try:\n            output_path.unlink()\n        except Exception:\n            pass\n        if is_url and delete_src:\n            os.unlink(src_path)\n    return {\"b64_encoded\": b64_encoded}\n\nresult = process_excel(url)",
				"imports":[
					"openpyxl",
					"requests",
					"lxml"
				],
				"isAsync":false,
				"python_version":"3.12",
				"entityId":"e_68ea78b244b6037ddb683a48",
				"captureStdOutput":false,
				"parameters":{
					"url":"{{ n_GQ33D.outputs.url }}"
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"maxLeaseTimeUnit":"SECONDS",
					"maxWaitDurationUnit":"SECONDS"
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":true,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				},
				"timeoutConfig":{
					"enabled":false
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"files_by_unifyapps",
				"resourceVersion":153,
				"resourceName":"files_by_unifyapps_upload_file",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_4IlKI-1",
			"id":"n_feHLL",
			"index":13,
			"inputs":{
				"base64Content":"{{ n_OIb2b.outputs.result.b64_encoded }}",
				"fileName":"temp.xlsx",
				"option":"base64Content"
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"maxLeaseTimeUnit":"SECONDS",
					"maxWaitDurationUnit":"SECONDS"
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":true,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				},
				"timeoutConfig":{
					"enabled":false
				}
			},
			"skip":false,
			"subTitle":"Files by UnifyApps",
			"title":"Upload file",
			"type":"ACTION"
		}
	],
	"ownerUserId":1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":32
}