{
	"appsUsed":[
		
	],
	"createdTime":1732704988365,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760296189151,
		"deployedBy":-1,
		"deployedDefinitionId":"68ebfcfd0c3d19149a9e34c0",
		"status":"DEPLOYED",
		"version":78,
		"workflowVersion":106
	},
	"edges":[
		{
			"fromNodeId":"_zCuz3",
			"priority":0,
			"skip":false,
			"toNodeId":"_B3P4s",
			"type":"next"
		},
		{
			"fromNodeId":"_B3P4s",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@1",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@1",
			"priority":0,
			"skip":false,
			"toNodeId":"_9MRB2",
			"type":"next"
		},
		{
			"fromNodeId":"_9MRB2",
			"priority":0,
			"skip":false,
			"toNodeId":"_yvKuP",
			"type":"next"
		},
		{
			"fromNodeId":"_yvKuP",
			"priority":0,
			"skip":false,
			"toNodeId":"_yHf0c",
			"type":"next"
		},
		{
			"fromNodeId":"_yHf0c",
			"priority":0,
			"skip":false,
			"toNodeId":"_E3jtv",
			"type":"next"
		},
		{
			"fromNodeId":"_E3jtv",
			"priority":0,
			"skip":false,
			"toNodeId":"_MBmDP",
			"type":"next"
		},
		{
			"fromNodeId":"_MBmDP",
			"priority":0,
			"skip":false,
			"toNodeId":"_Mc7kx",
			"type":"next"
		},
		{
			"fromNodeId":"_Mc7kx",
			"priority":0,
			"skip":false,
			"toNodeId":"_O7n0E",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"2",
			"priority":0,
			"skip":false,
			"toNodeId":"_puUvx@2",
			"type":"branch"
		},
		{
			"fromNodeId":"_puUvx@2",
			"priority":0,
			"skip":false,
			"toNodeId":"_F8DPV",
			"type":"next"
		},
		{
			"fromNodeId":"_F8DPV",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_2ZRZU",
			"type":"if"
		},
		{
			"fromNodeId":"_2ZRZU",
			"priority":0,
			"skip":false,
			"toNodeId":"_IUcK8",
			"type":"next"
		},
		{
			"fromNodeId":"_IUcK8",
			"priority":0,
			"skip":false,
			"toNodeId":"_sGBlj",
			"type":"next"
		},
		{
			"fromNodeId":"_puUvx",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"_gk9eR",
			"type":"branch"
		},
		{
			"fromNodeId":"_gk9eR",
			"priority":0,
			"skip":false,
			"toNodeId":"_8bGdb",
			"type":"next"
		},
		{
			"fromNodeId":"_8bGdb",
			"priority":0,
			"skip":false,
			"toNodeId":"t6euH",
			"type":"next"
		},
		{
			"fromNodeId":"t6euH",
			"priority":0,
			"skip":false,
			"toNodeId":"_QEoIB",
			"type":"next"
		},
		{
			"fromNodeId":"_QEoIB",
			"priority":0,
			"skip":false,
			"toNodeId":"_aGcHw",
			"type":"next"
		},
		{
			"fromNodeId":"_aGcHw",
			"priority":0,
			"skip":false,
			"toNodeId":"_jmJuO",
			"type":"next"
		},
		{
			"fromNodeId":"_jmJuO",
			"priority":0,
			"skip":false,
			"toNodeId":"_HN453",
			"type":"next"
		},
		{
			"fromNodeId":"_HN453",
			"priority":0,
			"skip":false,
			"toNodeId":"_STPAd",
			"type":"next"
		},
		{
			"fromNodeId":"_STPAd",
			"priority":0,
			"skip":false,
			"toNodeId":"_MYNZX",
			"type":"next"
		},
		{
			"fromNodeId":"_O7n0E",
			"priority":0,
			"skip":false,
			"toNodeId":"_TlsfS",
			"type":"next"
		},
		{
			"fromNodeId":"_sGBlj",
			"priority":0,
			"skip":false,
			"toNodeId":"_TlsfS",
			"type":"next"
		},
		{
			"fromNodeId":"_F8DPV",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_TlsfS",
			"type":"next"
		},
		{
			"fromNodeId":"_MYNZX",
			"priority":0,
			"skip":false,
			"toNodeId":"_TlsfS",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"6746fadcafeea234643bfa3d",
	"lastModifiedBy":0,
	"lcName":"text to workflow input filling each node [do not touch] ",
	"modifiedTime":1761722721167,
	"name":"Text to Workflow INPUT Filling Each Node [DO NOT TOUCH] ",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":73,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"_zCuz3",
			"index":0,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"schema":{
							"type":"object",
							"title":"schema"
						},
						"status":{
							"type":"boolean",
							"title":"Status"
						}
					},
					"additionalProperties":false,
					"required":[
						"status"
					]
				},
				"setup":{
					"type":"object",
					"properties":{
						"node":{
							"type":"object",
							"properties":{
								"subTitle":{
									"type":"string",
									"title":"subTitle"
								},
								"fallbackMode":{
									"type":"string",
									"title":"fallbackMode"
								},
								"groupId":{
									"type":"string",
									"title":"groupId"
								},
								"context":{
									"type":"object",
									"properties":{
										"appName":{
											"type":"string",
											"title":"appName"
										},
										"resourceName":{
											"type":"string",
											"title":"resourceName"
										},
										"type":{
											"type":"string",
											"title":"type"
										}
									},
									"title":"context",
									"additionalProperties":false
								},
								"skip":{
									"type":"boolean",
									"title":"skip"
								},
								"id":{
									"type":"string",
									"title":"id"
								},
								"trigger":{
									"type":"object",
									"properties":{
										"type":{
											"type":"string",
											"title":"type"
										}
									},
									"title":"trigger",
									"additionalProperties":false
								},
								"title":{
									"type":"string",
									"title":"title"
								},
								"type":{
									"type":"string",
									"title":"type"
								}
							},
							"title":"node",
							"additionalProperties":false
						},
						"user_query":{
							"type":"string",
							"title":"user_query"
						},
						"workflowDefinition":{
							"type":"object",
							"title":"workflowDefinition"
						},
						"workflowDefinitionMap":{
							"type":"object",
							"title":"workflowDefinitionMap"
						}
					},
					"additionalProperties":false
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":150,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"_B3P4s",
			"index":0,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"filled_schema":{
							"type":"object",
							"title":"filled_schema"
						}
					},
					"required":[]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"filled_schema":{
							"type":"object",
							"title":"filled_schema"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"_puUvx",
			"index":0,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"name":"if_else",
							"conditions":{
								"filters":[
									{
										"property":"{{ _zCuz3.outputs.node.context.appName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"if_else"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"2",
						"inputs":{
							"name":"callables_from_automation",
							"conditions":{
								"filters":[
									{
										"property":"{{ _zCuz3.outputs.node.context.resourceName }}",
										"filter":{
											"operator":"EQUAL",
											"value":"callables_from_automation"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":60,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@1",
			"id":"_puUvx@1",
			"index":0,
			"inputs":{
				"name":"if_else",
				"conditions":{
					"filters":[
						{
							"property":"{{ _zCuz3.outputs.node.context.appName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"if_else"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":23,
				"resourceName":"standard_entities_get_reachable_nodes_schema",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@1",
			"id":"_9MRB2",
			"index":0,
			"inputs":{
				"workflowDefinition":"{{ _zCuz3.outputs.workflowDefinition }}",
				"nodeId":"{{ _zCuz3.outputs.node.id }}"
			},
			"skip":false,
			"subTitle":"Standard entities by UnifyApps",
			"title":"Get Reachable Nodes Schema For a Node in a workflow",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.reachableNodes.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":51,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@1",
			"id":"_yvKuP",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"nodes":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"schema":{
										"type":"object",
										"title":"schema"
									},
									"dynamic":{
										"type":"string",
										"title":"dynamic"
									},
									"id":{
										"type":"string",
										"title":"id"
									},
									"title":{
										"type":"string",
										"title":"title"
									},
									"type":{
										"type":"string",
										"title":"type"
									}
								},
								"additionalProperties":false
							},
							"title":"nodes"
						}
					},
					"additionalProperties":false
				},
				"input":{
					"type":"object",
					"properties":{
						"reachableNodes":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"reachableNodes"
						},
						"nodeSchemaMap":{
							"type":"object",
							"title":"nodeSchemaMap"
						},
						"workflowDefinitionMap":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"workflowDefinitionMap"
						}
					},
					"additionalProperties":false,
					"required":[
						"workflowDefinitionMap"
					]
				},
				"code":"nodes = []\n\nreachableNodes.reverse()\n\nfor nodeId in reachableNodes:\n    if nodeId not in nodeSchemaMap:\n      continue\n    if nodeId not in workflowDefinitionMap:\n      continue\n    nodeSchemaMap[nodeId][\"id\"] = nodeId\n    nodeSchemaMap[nodeId][\"title\"] = workflowDefinitionMap[nodeId][\"title\"]\n    if \"schema\" not in nodeSchemaMap[nodeId]:\n      nodeSchemaMap[nodeId][\"schema\"] = {}\n    nodes.append(nodeSchemaMap[nodeId])\n\nresult = {\n  \"nodes\": nodes\n}",
				"isAsync":false,
				"parameters":{
					"reachableNodes":{
						"ua:type":"mappedArray",
						"source":"{{ _9MRB2.outputs.reachableNodes }}",
						"items":"{{ _9MRB2.outputs.reachableNodes[0] }}"
					},
					"workflowDefinitionMap":"{{ _zCuz3.outputs.workflowDefinitionMap }}",
					"nodeSchemaMap":"{{ _9MRB2.outputs.nodeSchemaMap }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@1",
			"id":"_yHf0c",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"metadata":{
							"type":"string",
							"title":"Metadata"
						}
					},
					"additionalProperties":false,
					"required":[
						"metadata"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"data":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"data",
							"required":[]
						}
					},
					"additionalProperties":false,
					"required":[
						"data"
					]
				},
				"code":"def indent = \"\"\nStringBuilder output = new StringBuilder()\n\ndef appendDetails(def node, def indent) {\n    StringBuilder localOutput = new StringBuilder()\n    node.each { key, value ->\n        if (value instanceof Map) {\n            if (value.type == \"object\") {\n                localOutput.append(\"${indent} - id: ${key}\\n\")\n                localOutput.append(\"${indent}   datatype: ${value.type}\\n\")\n                if (value.containsKey(\"title\")) {\n                    localOutput.append(\"${indent}   title: ${value.title}\\n\")\n                }\n                if (value.containsKey(\"description\")) {\n                    localOutput.append(\"${indent}   description: ${value.description}\\n\")\n                }\n                if (value.containsKey(\"properties\")) {\n                    localOutput.append(\"${indent}   properties:\\n\")\n                    localOutput.append(appendDetails(value.properties, indent + \"   \"))\n                }\n            } else if (value.type == \"array\") {\n                localOutput.append(\"${indent} - id: ${key}\\n\")\n                localOutput.append(\"${indent}   datatype: ${value.type}\\n\")\n                if (value.containsKey(\"title\")) {\n                    localOutput.append(\"${indent}   title: ${value.title}\\n\")\n                }\n                if (value.containsKey(\"description\")) {\n                    localOutput.append(\"${indent}   description: ${value.description}\\n\")\n                }\n                if (value.containsKey(\"items\")) {\n                    localOutput.append(\"${indent}   items:\\n\")\n                    localOutput.append(\"${indent}     datatype (for each item in the array): ${value.items.type}\\n\")\n                    if (value.items.type == \"object\" && value.items.containsKey('properties')) {\n                        localOutput.append(\"${indent}     properties (for each object in the array):\\n\")\n                        localOutput.append(appendDetails(value.items.properties, indent + \"     \"))\n                    }\n                }\n            } else {\n                localOutput.append(\"${indent} - id: ${key}\\n\")\n                localOutput.append(\"${indent}   datatype: ${value.type}\\n\")\n                if (value.containsKey(\"title\")) {\n                    localOutput.append(\"${indent}   title: ${value.title}\\n\")\n                }\n                if (value.containsKey(\"description\")) {\n                    localOutput.append(\"${indent}   description: ${value.description}\\n\")\n                }\n            }\n        } else if (value instanceof List) {\n            // Handle the case where value is a List (JSONArray)\n            localOutput.append(\"${indent} - id: ${key}\\n\")\n            localOutput.append(\"${indent}   datatype: array\\n\")\n            localOutput.append(\"${indent}   items:\\n\")\n            value.each { item ->\n                localOutput.append(appendDetails([item], indent + \"   \"))\n            }\n        } else {\n            // Handle other types if necessary\n            localOutput.append(\"${indent} - id: ${key}\\n\")\n            localOutput.append(\"${indent}   datatype: ${value.getClass().getSimpleName()}\\n\")\n            localOutput.append(\"${indent}   value: ${value}\\n\")\n        }\n    }\n    return localOutput.toString()\n}\n\ndata.each { node ->\n    if (node.id != \"__ENV__\") {\n        if (node.schema.properties) {\n            output.append(\"- id: ${node.id}\\n\")\n            output.append(\"  title: ${node.title}\\n\")\n            output.append(\"  outputs:\\n\")\n            output.append(appendDetails(node.schema.properties, indent + \"   \"))\n        }\n    }\n}\n\nreturn [\"metadata\": output.toString()]",
				"isAsync":false,
				"parameters":{
					"data":{
						"ua:type":"mappedArray",
						"source":"{{ _yvKuP.outputs.result.nodes }}",
						"items":"{{ _yvKuP.outputs.result.nodes[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"template_by_unifyapps",
				"resourceVersion":128,
				"resourceName":"template_by_unifyapps_compile_template",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@1",
			"id":"_E3jtv",
			"index":0,
			"inputs":{
				"input_schema":{
					"metadata":"{{ _yHf0c.outputs.result.metadata }}",
					"user_query":"{{ _zCuz3.outputs.user_query }}",
					"nodeId":"{{ _zCuz3.outputs.node.id }}",
					"workflowDefinition":"{{ _zCuz3.outputs.workflowDefinition }}",
					"application":"{{ _zCuz3.outputs.node.context.appName }}"
				},
				"template_id":"e_6751894ab6b2a7508aa8499d"
			},
			"skip":false,
			"subTitle":"Template by UnifyApps",
			"title":"Compile template",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":67,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@1",
			"id":"_MBmDP",
			"index":0,
			"inputs":{
				"automationId":"66c58126e5ea140340d84aa8",
				"runtimeConnections":{},
				"synchronous":true,
				"parameters":{
					"logprobs":false,
					"response_format":{
						"type":"json_object"
					},
					"provider":"openai",
					"is_async":"False",
					"custom_url":"https://api.openai.com",
					"messages":{
						"items":{
							"content":{
								"items":{
									"type":"text",
									"text":"{{ _E3jtv.outputs.output }}"
								},
								"ua:type":"mappedArray"
							},
							"role":"user"
						},
						"ua:type":"mappedArray"
					},
					"model":"gpt-4o"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":34,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@1",
			"id":"_Mc7kx",
			"index":0,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"filled_schema":{
							"type":"object",
							"properties":{},
							"title":"filled_schema",
							"additionalProperties":false,
							"required":[]
						}
					},
					"additionalProperties":false
				},
				"jsonString":"{{ _MBmDP.outputs.output }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":88,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@1",
			"id":"_O7n0E",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ _B3P4s.outputs.filled_schema }}",
						"value":"{{ _Mc7kx.outputs.result.filled_schema }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":60,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@2",
			"id":"_puUvx@2",
			"index":0,
			"inputs":{
				"name":"callables_from_automation",
				"conditions":{
					"filters":[
						{
							"property":"{{ _zCuz3.outputs.node.context.resourceName }}",
							"filter":{
								"operator":"EQUAL",
								"value":"callables_from_automation"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":73,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@2",
			"id":"_F8DPV",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ _zCuz3.outputs.user_query }}",
						"filter":{
							"operator":"CONTAINS",
							"value":"segment"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":80,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_F8DPV@_puUvx@_DWlKr-1@2@y",
			"id":"_2ZRZU",
			"index":0,
			"inputs":{
				"automationId":"67404f17c6bd8f799d92d3ee",
				"runtimeConnections":{},
				"synchronous":true,
				"parameters":{
					"user_query":"{{ _zCuz3.outputs.user_query }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.fields.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":96,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_F8DPV@_puUvx@_DWlKr-1@2@y",
			"id":"_IUcK8",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"filled_schema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Filled Schema"
						}
					},
					"additionalProperties":false,
					"required":[
						"filled_schema"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"fields":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"fields"
						}
					},
					"additionalProperties":false
				},
				"code":"def properties = [:]\n\nfor(fieldName in fields){\n  // TODO: type string to be changed\n  properties.put(fieldName, [\"title\": fieldName, \"type\": \"string\"])\n}\n\nreturn [\n  \"filled_schema\": [\n    \"setup\": [\n      \"properties\": properties\n    ]\n  ]\n]",
				"isAsync":false,
				"parameters":{
					"fields":{
						"source":"{{ _2ZRZU.outputs.fields }}",
						"ua:type":"mappedArray",
						"items":"{{ _2ZRZU.outputs.fields[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":88,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_F8DPV@_puUvx@_DWlKr-1@2@y",
			"id":"_sGBlj",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ _B3P4s.outputs.filled_schema }}",
						"value":"{{ _IUcK8.outputs.result.filled_schema }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":1,
				"resourceName":"standard_entities_get_reachable_nodes_schema",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@default",
			"id":"_gk9eR",
			"index":0,
			"inputs":{
				"workflowDefinition":"{{ _zCuz3.outputs.workflowDefinition }}",
				"nodeId":"{{ _zCuz3.outputs.node.id }}"
			},
			"skip":false,
			"subTitle":"Standard entities by UnifyApps",
			"title":"Get Reachable Nodes Schema For a Node in a workflow",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.reachableNodes.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":51,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@default",
			"id":"_8bGdb",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"nodes":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"schema":{
										"type":"object",
										"title":"schema"
									},
									"dynamic":{
										"type":"string",
										"title":"dynamic"
									},
									"id":{
										"type":"string",
										"title":"id"
									},
									"title":{
										"type":"string",
										"title":"title"
									},
									"type":{
										"type":"string",
										"title":"type"
									}
								},
								"additionalProperties":false
							},
							"title":"nodes"
						}
					},
					"additionalProperties":false
				},
				"input":{
					"type":"object",
					"properties":{
						"reachableNodes":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"reachableNodes"
						},
						"nodeSchemaMap":{
							"type":"object",
							"title":"nodeSchemaMap"
						},
						"workflowDefinitionMap":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"workflowDefinitionMap"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"nodes = []\n\nreachableNodes.reverse()\n\nfor nodeId in reachableNodes:\n    if nodeId not in nodeSchemaMap:\n      continue\n    if nodeId not in workflowDefinitionMap:\n      continue\n    nodeSchemaMap[nodeId][\"id\"] = nodeId\n    nodeSchemaMap[nodeId][\"title\"] = workflowDefinitionMap[nodeId][\"title\"]\n    if \"schema\" not in nodeSchemaMap[nodeId]:\n      nodeSchemaMap[nodeId][\"schema\"] = {}\n    nodes.append(nodeSchemaMap[nodeId])\n\nresult = {\n  \"nodes\": nodes\n}",
				"isAsync":false,
				"parameters":{
					"reachableNodes":{
						"source":"{{ _gk9eR.outputs.reachableNodes }}",
						"ua:type":"mappedArray",
						"items":"{{ _gk9eR.outputs.reachableNodes[0] }}"
					},
					"nodeSchemaMap":"{{ _gk9eR.outputs.nodeSchemaMap }}",
					"workflowDefinitionMap":"{{ _zCuz3.outputs.workflowDefinitionMap }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@default",
			"id":"t6euH",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"metadata":{
							"type":"string",
							"title":"Metadata"
						}
					},
					"additionalProperties":false,
					"required":[
						"metadata"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"data":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"data",
							"required":[]
						}
					},
					"additionalProperties":false,
					"required":[
						"data"
					]
				},
				"code":"def indent = \"\"\nStringBuilder output = new StringBuilder()\n\ndef appendDetails(def node, def indent) {\n    StringBuilder localOutput = new StringBuilder()\n    node.each { key, value ->\n        if (value instanceof Map) {\n            if (value.type == \"object\") {\n                localOutput.append(\"${indent} - id: ${key}\\n\")\n                localOutput.append(\"${indent}   datatype: ${value.type}\\n\")\n                if (value.containsKey(\"title\")) {\n                    localOutput.append(\"${indent}   title: ${value.title}\\n\")\n                }\n                if (value.containsKey(\"description\")) {\n                    localOutput.append(\"${indent}   description: ${value.description}\\n\")\n                }\n                if (value.containsKey(\"properties\")) {\n                    localOutput.append(\"${indent}   properties:\\n\")\n                    localOutput.append(appendDetails(value.properties, indent + \"   \"))\n                }\n            } else if (value.type == \"array\") {\n                localOutput.append(\"${indent} - id: ${key}\\n\")\n                localOutput.append(\"${indent}   datatype: ${value.type}\\n\")\n                if (value.containsKey(\"title\")) {\n                    localOutput.append(\"${indent}   title: ${value.title}\\n\")\n                }\n                if (value.containsKey(\"description\")) {\n                    localOutput.append(\"${indent}   description: ${value.description}\\n\")\n                }\n                if (value.containsKey(\"items\")) {\n                    localOutput.append(\"${indent}   items:\\n\")\n                    localOutput.append(\"${indent}     datatype (for each item in the array): ${value.items.type}\\n\")\n                    if (value.items.type == \"object\" && value.items.containsKey('properties')) {\n                        localOutput.append(\"${indent}     properties (for each object in the array):\\n\")\n                        localOutput.append(appendDetails(value.items.properties, indent + \"     \"))\n                    }\n                }\n            } else {\n                localOutput.append(\"${indent} - id: ${key}\\n\")\n                localOutput.append(\"${indent}   datatype: ${value.type}\\n\")\n                if (value.containsKey(\"title\")) {\n                    localOutput.append(\"${indent}   title: ${value.title}\\n\")\n                }\n                if (value.containsKey(\"description\")) {\n                    localOutput.append(\"${indent}   description: ${value.description}\\n\")\n                }\n            }\n        } else if (value instanceof List) {\n            // Handle the case where value is a List (JSONArray)\n            localOutput.append(\"${indent} - id: ${key}\\n\")\n            localOutput.append(\"${indent}   datatype: array\\n\")\n            localOutput.append(\"${indent}   items:\\n\")\n            value.each { item ->\n                localOutput.append(appendDetails([item], indent + \"   \"))\n            }\n        } else {\n            // Handle other types if necessary\n            localOutput.append(\"${indent} - id: ${key}\\n\")\n            localOutput.append(\"${indent}   datatype: ${value.getClass().getSimpleName()}\\n\")\n            localOutput.append(\"${indent}   value: ${value}\\n\")\n        }\n    }\n    return localOutput.toString()\n}\n\ndata.each { node ->\n    if (node.id != \"__ENV__\") {\n        if (node.schema.properties) {\n            output.append(\"- id: ${node.id}\\n\")\n            output.append(\"  title: ${node.title}\\n\")\n            output.append(\"  outputs:\\n\")\n            output.append(appendDetails(node.schema.properties, indent + \"   \"))\n        }\n    }\n}\n\nreturn [\"metadata\": output.toString()]",
				"isAsync":false,
				"parameters":{
					"data":{
						"ua:type":"mappedArray",
						"source":"{{ _8bGdb.outputs.result.nodes }}",
						"items":"{{ _8bGdb.outputs.result.nodes[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code By UnifyApps",
			"title":"Execute groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"custom_application",
				"resourceVersion":14,
				"resourceName":"custom_application_fetch_input_schema",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@default",
			"id":"_QEoIB",
			"index":0,
			"inputs":{
				"context":"{{ _zCuz3.outputs.node.context }}"
			},
			"skip":false,
			"subTitle":"Custom Application",
			"title":"Fetch Input Schema",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":37,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@default",
			"id":"_aGcHw",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"schema":{
							"type":"string",
							"title":"schema"
						},
						"application":{
							"type":"string",
							"title":"Application"
						},
						"action":{
							"type":"string",
							"title":"Action"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"complete_Schema":{
							"type":"object",
							"title":"complete_Schema"
						},
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"import json\n\n\nresult = {\n    \"schema\": json.dumps({\n        \"properties\": complete_Schema[\"schema\"][\"properties\"],\n        \"definitions\": complete_Schema[\"schema\"].get(\"definitions\", {})\n    }, indent=4), \n    \"application\": context[\"appName\"], \n    \"action\" : context[\"resourceName\"]\n}",
				"isAsync":false,
				"parameters":{
					"complete_Schema":"{{ _QEoIB.outputs.inputSchema }}",
					"context":"{{ _zCuz3.outputs.node.context }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"template_by_unifyapps",
				"resourceVersion":97,
				"resourceName":"template_by_unifyapps_compile_template",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@default",
			"id":"_jmJuO",
			"index":0,
			"inputs":{
				"input_schema":{
					"input_schema":"{{ _aGcHw.outputs.result.schema }}",
					"application":"{{ _aGcHw.outputs.result.application }}",
					"action":"{{ _aGcHw.outputs.result.action }}",
					"user_query":"{{ _zCuz3.outputs.user_query }}",
					"metadata":"{{ t6euH.outputs.result.metadata }}",
					"workflowDefinition":"{{ _zCuz3.outputs.workflowDefinition }}",
					"nodeId":"{{ _zCuz3.outputs.node.id }}"
				},
				"template_id":"e_674839ab2def8553ba012048"
			},
			"skip":false,
			"subTitle":"Template by UnifyApps",
			"title":"Compile template",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":67,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@default",
			"id":"_HN453",
			"index":0,
			"inputs":{
				"automationId":"66c58126e5ea140340d84aa8",
				"runtimeConnections":{},
				"synchronous":true,
				"parameters":{
					"response_format":{
						"type":"json_object"
					},
					"logprobs":false,
					"provider":"openai",
					"custom_url":"https://api.openai.com",
					"is_async":"False",
					"messages":{
						"items":{
							"content":{
								"items":{
									"type":"text",
									"text":"{{ _jmJuO.outputs.output }}"
								},
								"ua:type":"mappedArray"
							},
							"role":"user"
						},
						"ua:type":"mappedArray"
					},
					"model":"gpt-4o"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":34,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@default",
			"id":"_STPAd",
			"index":0,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"filled_schema":{
							"type":"object",
							"properties":{},
							"title":"filled_schema",
							"additionalProperties":false,
							"required":[]
						}
					},
					"additionalProperties":false
				},
				"jsonString":"{{ _HN453.outputs.output }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":88,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_puUvx@_DWlKr-1@default",
			"id":"_MYNZX",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ _B3P4s.outputs.filled_schema }}",
						"value":"{{ _STPAd.outputs.result.filled_schema }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":65,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_DWlKr-1",
			"id":"_TlsfS",
			"index":0,
			"inputs":{
				"result":{
					"status":true,
					"schema":"{{ _B3P4s.outputs.filled_schema }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":520,
	"projectId":63,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"version":108
}