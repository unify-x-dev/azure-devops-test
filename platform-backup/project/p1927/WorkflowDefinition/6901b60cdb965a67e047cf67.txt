{
	"appsUsed":[
		
	],
	"createdTime":1761719820549,
	"deleted":false,
	"edges":[
		{
			"fromNodeId":"n_XhbEi",
			"priority":0,
			"skip":false,
			"toNodeId":"n_8rSjZ",
			"type":"next"
		},
		{
			"fromNodeId":"n_8rSjZ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_jH3B7",
			"type":"next"
		}
	],
	"id":"6901b60cdb965a67e047cf67",
	"lastModifiedBy":45518,
	"lcName":"[azure-function]syncemployeehttptrigger",
	"modifiedTime":1761722567356,
	"name":"[Azure-function]SyncEmployeeHttpTrigger",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1155,
				"resourceName":"callables_from_api"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Vznjc-1",
			"id":"n_XhbEi",
			"index":1,
			"inputs":{
				"request":{
					"contentType":"application/json"
				},
				"endpointType":"REST",
				"response":[
					{
						"status":200,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						}
					}
				],
				"streamingResponse":false
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via API",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":224,
				"resourceName":"code_by_unifyapps_csharp",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Vznjc-1",
			"id":"n_8rSjZ",
			"index":2,
			"inputs":{
				"code":"\nusing System;\nusing System.IO;\nusing System.Threading.Tasks;\nusing ApplicationCore.Interfaces;\nusing ApplicationCore.Entities;\nusing System.Web.Http;\nusing System.Text.Json;\n\n/// <summary>\n/// SyncEmployeeHttpTrigger\n/// </summary>\npublic class SyncEmployeeHttpTrigger\n{\n    private readonly IEmployeeService _employeeService;\n\n    public SyncEmployeeHttpTrigger(IEmployeeService employeeService)\n    {\n        _employeeService = employeeService;\n    }\n\n    [FunctionName(\"SyncEmployeeHttpTrigger\")]\n    public async Task<IActionResult> Run(\n        [HttpTrigger(AuthorizationLevel.Function, \"post\", Route = null)] HttpRequest req,\n        ILogger log)\n    {\n        try\n        {\n            log.LogInformation(\"C# HTTP trigger function processed a request.\");\n\n            string requestBody;\n            using (var reader = new StreamReader(req.Body))\n            {\n                requestBody = await reader.ReadToEndAsync().ConfigureAwait(false);\n            }\n\n            var employee = JsonSerializer.Deserialize<Employee>(requestBody);\n\n            if (employee == null)\n            {\n                return new BadRequestObjectResult(\"Please pass valid employee to sync\");\n            }\n\n            if (string.IsNullOrEmpty(employee.EmployeeNumber))\n            {\n                return new BadRequestObjectResult(\"Invalid Employee Number\");\n            }\n\n            if (string.IsNullOrEmpty(employee.Status))\n            {\n                return new BadRequestObjectResult(\"Employee Status is empty\");\n            }\n            else\n            {\n                if (employee.Status == \"Cancelled\")\n                {\n                    await _employeeService.DeleteAsync(employee.EmployeeNumber);\n                }\n                else\n                {\n                    await _employeeService.AddOrUpdateAsync(new Employee\n                    {\n                        UserName = employee.UserName,\n                        Email = employee.Email,\n                        FullName = employee.FullName,\n                        ManagerEmployeeNumber = employee.ManagerEmployeeNumber,\n                        EmployeeNumber = employee.EmployeeNumber,\n                        IsActive = employee.Status == \"Active\"\n                    });\n                }\n            }\n\n            return new OkObjectResult(new\n            {\n                message = $\"Successfully processed for {employee.EmployeeNumber} employee\"\n            });\n        }\n        catch (ArgumentNullException e)\n        {\n            log.LogError(e, $\"ArgumentNullException: Invalid user detail - {e.ParamName}\");\n            return new BadRequestObjectResult($\"Invalid user detail - {e.ParamName}\");\n        }\n        catch (ArgumentException e)\n        {\n            log.LogError(e, $\"ArgumentException: Invalid argument - {e.Message}\");\n            return new BadRequestObjectResult($\"Invalid argument - {e.Message}\");\n        }\n        catch (InvalidOperationException e)\n        {\n            log.LogError(e, $\"InvalidOperationException: Invalid operation - {e.Message}\");\n            return new InternalServerErrorResult();\n        }\n        /// Removed due to code scanning alert\n        // catch (Exception e)\n        // {\n        //     log.LogError(e, $\"Unexpected error occurred - {e.Message}\");\n        //     return new InternalServerErrorResult();\n        // }\n    }\n}",
				"isAsync":false
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute CSharp script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1124,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Vznjc-1",
			"id":"n_jH3B7",
			"index":3,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"200_undefined",
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		}
	],
	"ownerUserId":46217,
	"projectId":1927,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":4
}