{
	"appsUsed":[
		
	],
	"createdTime":1761672971965,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1761673011871,
		"deployedBy":308,
		"deployedDefinitionId":"6900ff33a0bcbf740ac61e3f",
		"status":"DEPLOYED",
		"version":1,
		"workflowVersion":0
	},
	"edges":[
		{
			"fromNodeId":"n_ySIoa",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Nc4se",
			"type":"next"
		},
		{
			"fromNodeId":"n_Nc4se",
			"priority":0,
			"skip":false,
			"toNodeId":"n_8ulwF",
			"type":"next"
		},
		{
			"fromNodeId":"n_8ulwF",
			"priority":0,
			"skip":false,
			"toNodeId":"n_2G9Iq",
			"type":"next"
		},
		{
			"fromNodeId":"n_2G9Iq",
			"priority":0,
			"skip":false,
			"toNodeId":"n_GVBx1",
			"type":"next"
		}
	],
	"id":"6900ff0b9d505c7da12c5dd9",
	"lastModifiedBy":308,
	"lcName":"[virtu-empowerbadgesschedulerfn] syncemployeeactivitiesbulkhttptrigger_nw",
	"modifiedTime":1761935056659,
	"name":"[virtu-emPowerBadgesSchedulerFN] SyncEmployeeActivitiesBulkHttpTrigger_NW",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1163,
				"resourceName":"callables_from_api"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_C52UY-1",
			"id":"n_ySIoa",
			"index":1,
			"inputs":{
				"request":{
					"headers":{
						"type":"object",
						"additionalProperties":false,
						"required":[],
						"properties":{
							"authorization":{
								"type":"string",
								"title":"Authorization"
							}
						}
					},
					"contentType":"application/json",
					"body":{
						"type":"object",
						"properties":{
							"requestBody":{
								"type":"string",
								"title":"Request Body"
							}
						},
						"additionalProperties":false,
						"required":[]
					}
				},
				"endpointType":"REST",
				"response":[
					{
						"name":"ok",
						"status":200,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						}
					}
				],
				"streamingResponse":false
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via API",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_C52UY-1",
			"id":"n_Nc4se",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"JWT_Token"
					],
					"properties":{
						"JWT_Token":{
							"type":"string",
							"title":"JWT Token"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"authorization"
					],
					"properties":{
						"authorization":{
							"type":"string",
							"title":"Authorization"
						}
					}
				},
				"code":"return authorization.replaceFirst('^Bearer\\\\s+', '');",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"authorization":"{{ n_ySIoa.outputs.headers.authorization }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":528,
				"resourceName":"utility_by_unifyapps_decode_jwt_token",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_C52UY-1",
			"id":"n_8ulwF",
			"index":3,
			"inputs":{
				"token":"{{ n_Nc4se.outputs.result.JWT_Token }}"
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"maxLeaseTimeUnit":"SECONDS",
					"maxWaitDurationUnit":"SECONDS"
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Decode JWT Token",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":219,
				"resourceName":"code_by_unifyapps_csharp",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_C52UY-1",
			"id":"n_2G9Iq",
			"index":4,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"result":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Result"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"requestBody",
						"appid"
					],
					"properties":{
						"requestBody":{
							"type":"string",
							"title":"Request Body"
						},
						"appid":{
							"type":"string",
							"title":"Appid"
						}
					}
				},
				"code":"using System;\nusing System.IO;\nusing System.Threading.Tasks;\nusing System.Collections.Generic;\nusing System.Text.Json;\nusing System.Linq;\nusing System.Net.Http;\nusing System.Text;\n\n// ENTITIES\npublic class BaseEntity\n{\n    public int Id { get; set; }\n}\n\npublic class IndividualMetric : BaseEntity\n{\n    public string UserName { get; set; }\n    public int ActivityId { get; set; }\n    public decimal Score { get; set; }\n    public DateTime EffectiveDate { get; set; }\n    public Activity Activity { get; set; }\n}\n\npublic class Activity : BaseEntity\n{\n    public string Name { get; set; }\n}\n\n// MODELS\npublic class MetricRequest<T>\n{\n    public int ActivityId { get; set; }\n    public T Data { get; set; }\n}\n\npublic class OkObjectBulkResult\n{\n    public int code { get; set; }\n    public string message { get; set; }\n    public List<IndividualMetric> failed { get; set; }\n    public OkObjectBulkResult(string message, int code, List<IndividualMetric> failed)\n    {\n        this.message = message;\n        this.code = code;\n        this.failed = failed;\n    }\n}\n\n// EXCEPTIONS\npublic class ActivityNotFoundException : Exception\n{\n    public ActivityNotFoundException(string message) : base(message) { }\n}\n\npublic class EmployeeNotFoundException : Exception\n{\n    public EmployeeNotFoundException(string message) : base(message) { }\n}\n\n// HTTP CALLS - INTEGRATED WITH UNIFYAPPS NATIVE FUNCTIONS\npublic static class ApiHelper\n{\n    // REAL API CALLS - Replace with your UnifyApps HTTP function syntax\n    public static async Task<string> CallApiEndpointAsync(string endpointUrl, string authorization, object payload)\n    {\n        // ======================================================================\n        // REPLACE THIS WITH YOUR UNIFYAPPS NATIVE HTTP FUNCTION CALL\n        // ======================================================================\n\n        string jsonPayload = JsonSerializer.Serialize(payload);\n\n        // Example UnifyApps HTTP function calls (check your platform documentation):\n\n        // OPTION 1: If UnifyApps has HTTP.post\n        // return await HTTP.post(endpointUrl, jsonPayload, new {\n        //     headers = new {\n        //         \"Content-Type\" = \"application/json\",\n        //         \"Authorization\" = authorization ?? \"\"\n        //     }\n        // });\n\n        // OPTION 2: If UnifyApps has fetch\n        // dynamic response = await fetch(endpointUrl, new {\n        //     method = \"POST\",\n        //     headers = new {\n        //         \"Content-Type\" = \"application/json\",\n        //         \"Authorization\" = authorization ?? \"\"\n        //     },\n        //     body = jsonPayload\n        // });\n        // return await response.text();\n\n        // OPTION 3: If UnifyApps has RestClient\n        // return await RestClient.PostAsync(endpointUrl, jsonPayload, new {\n        //     Authorization = authorization ?? \"\"\n        // });\n\n        // OPTION 4: If UnifyApps has specific HTTP module\n        // return await UnifyApps.Http.Post(endpointUrl, jsonPayload, authorization ?? \"\");\n\n        // OPTION 5: If UnifyApps uses a different pattern\n        // Check your UnifyApps documentation for the exact syntax\n\n        // ======================================================================\n        // TEMPORARY IMPLEMENTATION - Replace with real UnifyApps HTTP calls above\n        // ======================================================================\n\n        // This is a placeholder - you MUST replace it with real HTTP calls\n        // For now, it simulates success but doesn't make actual API calls\n\n        await Task.Delay(100); // Simulate network delay\n\n        // Simulate API response - replace this with real API response\n        return \"{\\\"code\\\":0,\\\"message\\\":\\\"Successfully completed\\\",\\\"failed\\\":[]}\";\n\n        // ======================================================================\n        // IMPORTANT: The above return statement should be replaced with:\n        // return await YOUR_UNIFYAPPS_HTTP_FUNCTION(endpointUrl, jsonPayload, authorization);\n        // ======================================================================\n    }\n}\n\npublic static class GenerationStrategyContext\n{\n    public static async Task GenerateAsync(int activityId, IndividualMetric metric)\n    {\n        string employeeEndpoint = \"https://virtu-empowerbadgesschedulerfn-dev2.vrtu-eag-ase-dev1.p.azurewebsites.net/api/employee-activities?code=5dYrolifZ792aIC6fBOM8OSi0eEC8z43S9_ypfHMSsxkAzFuMhqhnw%3D%3D\";\n        var payload = new\n        {\n            ActivityId = activityId,\n            Data = new[]\n            {\n                new\n                {\n                    EffectiveDate = metric.EffectiveDate.ToString(\"yyyy-MM-ddTHH:mm:ss.fff\"),\n                    ReferenceNumber = metric.Id.ToString(),\n                    Score = metric.Score,\n                    UserName = metric.UserName\n                }\n            }\n        };\n        string apiResult = await ApiHelper.CallApiEndpointAsync(employeeEndpoint, null, payload);\n        if (!string.IsNullOrWhiteSpace(apiResult))\n        {\n            var response = JsonSerializer.Deserialize<Dictionary<string, JsonElement>>(apiResult);\n            if (response.ContainsKey(\"code\") && response[\"code\"].GetInt32() != 0)\n            {\n                throw new Exception($\"API call failed: {apiResult}\");\n            }\n        }\n    }\n}\n\npublic static class ActivityService\n{\n    public static async Task GenerateAsync(int activityId, IndividualMetric metric)\n    {\n        await GenerationStrategyContext.GenerateAsync(activityId, metric);\n    }\n    public static async Task GenerateBulkAsync(int activityId, IEnumerable<IndividualMetric> metrics)\n    {\n        foreach (IndividualMetric metric in metrics)\n        {\n            await GenerationStrategyContext.GenerateAsync(activityId, metric);\n        }\n    }\n}\n\npublic static class ClientService\n{\n    private static HashSet<string> authorizedApps = new HashSet<string>\n    {\n        \"dec4789f-9b46-42b8-9c6d-9cda0b0a4a7e\"\n    };\n    public static async Task<bool> IsAuthorize(string appid, int activityId)\n    {\n        await Task.Delay(10);\n        if (string.IsNullOrEmpty(appid))\n        {\n            return false;\n        }\n        return authorizedApps.Contains(appid);\n    }\n}\n\n// APP CONFIGURATION\npublic static class AppConfig\n{\n    public static readonly string AppId = \"dec4789f-9b46-42b8-9c6d-9cda0b0a4a7e\";\n}\n\n// MAIN FUNCTION - FINAL VERSION (NO AUTH, HARDCODED APPID)\npublic static async Task<Dictionary<string, object>> SyncEmployeeActivitiesBulkHttpTrigger_Run(\n    string requestBody)\n{\n    try\n    {\n        // Use hardcoded appId - no auth required\n        string appid = AppConfig.AppId;\n\n        MetricRequest<IEnumerable<IndividualMetric>> metrics = JsonSerializer.Deserialize<MetricRequest<IEnumerable<IndividualMetric>>>(requestBody);\n        var activityId = metrics.ActivityId;\n\n        if (metrics.ActivityId <= 0)\n        {\n            return new Dictionary<string, object>\n            {\n                { \"statusCode\", 400 },\n                { \"body\", \"Invalid activity\" }\n            };\n        }\n\n        if (!metrics.Data.Any())\n        {\n            return new Dictionary<string, object>\n            {\n                { \"statusCode\", 400 },\n                { \"body\", \"Invalid inputs\" }\n            };\n        }\n\n        var failedRecords = new List<IndividualMetric>();\n        foreach (var metric in metrics.Data)\n        {\n            try\n            {\n                if (string.IsNullOrEmpty(metric.UserName))\n                {\n                    failedRecords.Add(metric);\n                    continue;\n                }\n                if (metric.Score == 0)\n                {\n                    failedRecords.Add(metric);\n                    continue;\n                }\n                if (metric.EffectiveDate == DateTime.MinValue)\n                {\n                    failedRecords.Add(metric);\n                    continue;\n                }\n                metric.ActivityId = activityId;\n                await ActivityService.GenerateAsync(activityId, metric);\n            }\n            catch (ActivityNotFoundException ex)\n            {\n                return new Dictionary<string, object>\n                {\n                    { \"statusCode\", 400 },\n                    { \"body\", $\"Invalid activity. {ex.Message}\" }\n                };\n            }\n            catch (EmployeeNotFoundException)\n            {\n                metric.Activity = null;\n                failedRecords.Add(metric);\n            }\n            catch (Exception ex)\n            {\n                metric.Activity = null;\n                failedRecords.Add(metric);\n                if (ex is OutOfMemoryException)\n                {\n                    throw;\n                }\n            }\n        }\n\n        if (metrics.Data.Count() == failedRecords.Count)\n        {\n            return new Dictionary<string, object>\n            {\n                { \"statusCode\", 500 },\n                { \"body\", \"Internal Server Error\" }\n            };\n        }\n\n        string responseMessage = $\"Successfully completed\";\n        int statusCode = 0;\n        if (failedRecords.Any())\n        {\n            statusCode = -1;\n        }\n\n        var resultObject = new OkObjectBulkResult(responseMessage, statusCode, failedRecords);\n        return new Dictionary<string, object>\n        {\n            { \"statusCode\", 200 },\n            { \"body\", resultObject }\n        };\n    }\n    catch (JsonException)\n    {\n        return new Dictionary<string, object>\n        {\n            { \"statusCode\", 400 },\n            { \"body\", \"Invalid inputs\" }\n        };\n    }\n    catch (Exception ex)\n    {\n        return new Dictionary<string, object>\n        {\n            { \"statusCode\", 500 },\n            { \"body\", $\"Internal Server Error: {ex.Message}\" }\n        };\n    }\n}\n\n// For testing - call the main function:\nvar result = await SyncEmployeeActivitiesBulkHttpTrigger_Run(requestBody);\nresult",
				"isAsync":false,
				"parameters":{
					"requestBody":"{{ n_ySIoa.outputs.body.requestBody }}",
					"appid":"{{ n_8ulwF.outputs.payload }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute CSharp script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1120,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_C52UY-1",
			"id":"n_GVBx1",
			"index":5,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"200_ok",
				"set_cookies":[],
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		}
	],
	"ownerUserId":308,
	"projectId":1927,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":86
}