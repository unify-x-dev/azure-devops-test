{
	"appsUsed":[
		
	],
	"createdTime":1761641247743,
	"deleted":false,
	"edges":[
		{
			"fromNodeId":"n_XhbEi",
			"priority":0,
			"skip":false,
			"toNodeId":"n_8rSjZ",
			"type":"next"
		},
		{
			"fromNodeId":"n_8rSjZ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_jH3B7",
			"type":"next"
		}
	],
	"id":"6900831fc85d6a3a6dc27745",
	"lastModifiedBy":46209,
	"lcName":"[azure-function]addemailnotificationshttptrigger",
	"modifiedTime":1761644090669,
	"name":"[Azure-function]AddEmailNotificationsHttpTrigger",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1155,
				"resourceName":"callables_from_api"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_Vznjc-1",
			"id":"n_XhbEi",
			"index":1,
			"inputs":{
				"request":{
					"contentType":"application/json"
				},
				"endpointType":"REST",
				"response":[
					{
						"status":200,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						}
					}
				],
				"streamingResponse":false
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via API",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":224,
				"resourceName":"code_by_unifyapps_csharp",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_Vznjc-1",
			"id":"n_8rSjZ",
			"index":2,
			"inputs":{
				"code":"using System;\nusing System.IO;\nusing System.Threading.Tasks;\nusing Microsoft.Extensions.Configuration;\n// Added for JsonSerializer\nusing System.Text.Json; \n// Added for dummy interfaces/classes to run\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Linq.Expressions;\n\npublic class BaseEntity\n{\n  public int Id { get; set; }\n}\npublic enum NotificationImportance\n{\n  High = 1,\n  Normal = 2,\n  Low = 3\n}\n\npublic enum NotificationStatus\n{\n  Pending = 1,\n  Sent = 2,\n  Fail = 3,\n  Delivered = 4\n}\n\npublic enum RecipientTypes\n{\n  None = 0,\n  To = 1,\n  Cc = 2,\n  Bcc = 3\n}\n\npublic class MailRecipientModel\n{\n  public RecipientTypes RecipientTypes { get; set; }\n  public string Email { get; set; }\n}\n\npublic class MailNotificationModel\n{\n  public string Subject { get; set; }\n  public string MessageBody { get; set; }\n  public IEnumerable<MailRecipientModel> Recipients { get; set; }\n  public IEnumerable<string> CcRecipients { get; set; }\n  public NotificationImportance Importance { get; set; }\n  public string FromMail { get; set; }\n}\n\npublic class MailRecipient : BaseEntity\n{\n  public RecipientTypes RecipientTypes { get; set; }\n  public NotificationStatus Status { get; set; }\n  public string Email { get; set; }\n  public int NotificationId { get; set; }\n  public MailNotification Notification { get; set; }\n}\n\npublic class MailNotification : BaseEntity\n{\n  public string Subject { get; set; }\n  public string MessageBody { get; set; }\n  public NotificationImportance Importance { get; set; }\n  public DateTime CreatedDate { get; set; }\n  public ICollection<MailRecipient> Recipients { get; set; }\n  public string FromEmail { get; set; }\n}\n\npublic async Task Save(MailNotification notification)\n{\n  if (notification.FromEmail == null)\n  {\n    notification.FromEmail  = _configuration[\"Mail:SendFrom\"];\n  }          \n  await _notificationRepository.AddAsync(notification);\n}\n\nasync Task<IDictionary<string, object>> mainFunction(string requestBody) {\n    MailNotificationModel _mailNotification = JsonConvert.DeserializeObject<MailNotificationModel>(requestBody);\n\n    // Validate input parameters\n    if (string.IsNullOrEmpty(_mailNotification.Subject)\n        || string.IsNullOrEmpty(_mailNotification.MessageBody)\n        || _mailNotification.Recipients == null\n        || !_mailNotification.Recipients.Any()\n        || _mailNotification.Recipients.Any(x => x.Email.Trim().Length == 0))\n    {\n      //return new BadRequestObjectResult($\"Invalid inputs:  {_mailNotification}\");\n      // Replaced BadRequestObjectResult\n      return new Dictionary<string, object> {\n            { \"statusCode\", 400 },\n            { \"body\", \"Invalid inputs\"}};\n    }\n\n    // set importance of the mail to default if nothins is mentioned\n    if (_mailNotification.Importance != NotificationImportance.High && _mailNotification.Importance != NotificationImportance.Low)\n    {\n      _mailNotification.Importance = NotificationImportance.Normal;\n    }\n\n    // sending the mail\n    await Save(CreateNotification(_mailNotification));\n}\n\n//create notification and NotificationRecipient models\nprivate MailNotification CreateNotification(MailNotificationModel mailNotificationModel)\n{  \n   return new MailNotification()\n   {\n     MessageBody = mailNotificationModel.MessageBody,\n     Importance = mailNotificationModel.Importance,\n     Subject = mailNotificationModel.Subject,\n     CreatedDate = DateTime.Now,\n     FromEmail = mailNotificationModel.FromMail,              \n     Recipients = mailNotificationModel.Recipients.Select(r => new MailRecipient\n     {\n      Email = r.Email,\n      RecipientTypes = r.RecipientTypes == RecipientTypes.None ? RecipientTypes.To : r.RecipientTypes,\n      Status = NotificationStatus.Pending\n     }).ToList()\n   };\n}\n\nstring requestBody = @\"{\n  \"\"emailBody\"\": {\n    \"\"greeting\"\": \"\"Hey Ashina Shanuka De Silva,\"\",\n    \"\"mainMessage\"\": \"\"Samanthi Kumarasinghe just commented on a Rave\"\",\n    \"\"originalRave\"\": {\n      \"\"author\"\": \"\"Ashina Shanuka De Silva\"\",\n      \"\"recipient\"\": \"\"Samanthi Kumarasinghe\"\",\n      \"\"content\"\": \"\"I wanted to take a moment to recognize and thank you for your exceptional leadership. Your vision, g...\"\"\n    },\n    \"\"comment\"\": {\n      \"\"author\"\": \"\"Samanthi Kumarasinghe\"\",\n      \"\"text\"\": \"\"Thank you Ashina! It was great pleasure working with a commited young professional like you. I wish you all the best for a very successful career ahead.\"\"\n    },\n    \"\"callToAction\"\": {\n      \"\"buttonText\"\": \"\"Rave\"\",\n      \"\"buttonUrl\"\": \"\"https://empower-rave.virtueagaseprod1.p.azurewebsites.net//raves/544179\"\"\n    }\n  }\n}\";\n// How you call this async function depends on your environment.\n// In many C# script/hosting environments, you would 'await' it.\nvar resultObject = await mainFunction(requestBody);\n// var resultObject = requestBody;\n\nresultObject",
				"isAsync":false
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute CSharp script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1124,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_Vznjc-1",
			"id":"n_jH3B7",
			"index":3,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"200_undefined",
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		}
	],
	"ownerUserId":46209,
	"projectId":1927,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":5
}