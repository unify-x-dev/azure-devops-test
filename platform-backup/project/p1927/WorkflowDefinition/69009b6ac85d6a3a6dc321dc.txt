{
	"appsUsed":[
		
	],
	"createdTime":1761647466740,
	"deleted":false,
	"edges":[
		{
			"fromNodeId":"n_Jqpot",
			"priority":0,
			"skip":false,
			"toNodeId":"n_bUXST",
			"type":"next"
		},
		{
			"fromNodeId":"n_bUXST",
			"priority":0,
			"skip":false,
			"toNodeId":"n_NA9Lt",
			"type":"next"
		}
	],
	"id":"69009b6ac85d6a3a6dc321dc",
	"lastModifiedBy":46209,
	"lcName":"[azure-function]processmailnotificationstimertrigger",
	"modifiedTime":1761648528425,
	"name":"[Azure-function]ProcessMailNotificationsTimerTrigger",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1155,
				"resourceName":"callables_from_api"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_uhddo-1",
			"id":"n_Jqpot",
			"index":1,
			"inputs":{
				"request":{
					"contentType":"application/json"
				},
				"endpointType":"REST",
				"response":[
					{
						"status":200,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						}
					}
				],
				"streamingResponse":false
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via API",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":224,
				"resourceName":"code_by_unifyapps_csharp",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_uhddo-1",
			"id":"n_bUXST",
			"index":2,
			"inputs":{
				"code":"\nusing ApplicationCore.Interfaces;\nusing System;\nusing System.Threading.Tasks;\nusing System.Linq;\n\npublic class BaseEntity\n{\n  public int Id { get; set; }\n}\npublic enum NotificationImportance\n{\n  High = 1,\n  Normal = 2,\n  Low = 3\n}\n\npublic enum NotificationStatus\n{\n  Pending = 1,\n  Sent = 2,\n  Fail = 3,\n  Delivered = 4\n}\n\npublic enum RecipientTypes\n{\n  None = 0,\n  To = 1,\n  Cc = 2,\n  Bcc = 3\n}\n\npublic class MailRecipient : BaseEntity\n{\n  public RecipientTypes RecipientTypes { get; set; }\n  public NotificationStatus Status { get; set; }\n  public string Email { get; set; }\n  public int NotificationId { get; set; }\n  public MailNotification Notification { get; set; }\n}\n\npublic class MailNotification : BaseEntity\n{\n  public string Subject { get; set; }\n  public string MessageBody { get; set; }\n  public NotificationImportance Importance { get; set; }\n  public DateTime CreatedDate { get; set; }\n  public ICollection<MailRecipient> Recipients { get; set; }\n  public string FromEmail { get; set; }\n}\n\npublic class MailNotificationByStatusSpecification : BaseSpecification<MailNotification>\n{\n  public MailNotificationByStatusSpecification(int take)\n         : base(x => x.Recipients.Any(e => e.Status == NotificationStatus.Pending))\n  {\n    ApplyPaging(0, take);\n    ApplyOrderBy(n => n.CreatedDate);\n    AddInclude(n => n.Recipients);\n  }\n}\n\npublic async Task ProcessSavedNotifications()\n{\n  string numberOfmails = _configuration[\"Mail:PageSize\"];\n  int pageSize = int.Parse(numberOfmails);\n  MailNotificationByStatusSpecification specification = new MailNotificationByStatusSpecification(pageSize);\n  // API call\n  var notifications = await _notificationRepository.ListAsync(specification);\n\n  foreach (var notification in notifications)\n  {\n    try\n    {\n      await Send(notification);\n      notification.Recipients.ToList().ForEach(x => x.Status = NotificationStatus.Sent);\n      // API call\n      await _notificationRepository.UpdateAsync(notification);\n    }\n    catch (Exception ex)\n    {\n      notification.Recipients.ToList()\n                  .ForEach(x => x.Status = NotificationStatus.Fail);\n      // API call\n      await _notificationRepository.UpdateAsync(notification);\n      //_appLogger.LogError($\"SendNotificationsTimerTrigger, an error occured at {DateTime.Now}. Error :  {ex.Message}\");\n    }\n  }\n}\n\n// log.LogInformation($\"Processing mail notifications started at: {DateTime.Now}\");\nawait ProcessSavedNotifications();\n// log.LogInformation($\"Processing mail notifications completed at: {DateTime.Now}\");\n// log.LogInformation($\"Next execution will be at: \" + $\"{myTimer.Schedule.GetNextOccurrence(DateTime.Now).ToString(\"MM/dd/yyyy HH:mm\")}\");",
				"isAsync":false
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute CSharp script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1124,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_uhddo-1",
			"id":"n_NA9Lt",
			"index":3,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"200_undefined",
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		}
	],
	"ownerUserId":46209,
	"projectId":1927,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":4
}